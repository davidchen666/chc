<?php
define ("AutoShapeType_ARC",19);
define ("AutoShapeType_BACK_PREVIOUS_ACTION_BUTTON",194);
define ("AutoShapeType_BALLOON",17);
define ("AutoShapeType_BEGINNING_ACTION_BUTTON",196);
define ("AutoShapeType_BENT_ARROW",91);
define ("AutoShapeType_BENT_CONNECTOR_2",33);
define ("AutoShapeType_BENT_CONNECTOR_4",35);
define ("AutoShapeType_BENT_CONNECTOR_5",36);
define ("AutoShapeType_BENT_UP_ARROW",90);
define ("AutoShapeType_BEVEL",84);
define ("AutoShapeType_BLANK_ACTION_BUTTON",189);
define ("AutoShapeType_BLOCK_ARC",95);
define ("AutoShapeType_CAN",22);
define ("AutoShapeType_CHEVRON",55);
define ("AutoShapeType_CHORD",2069);
define ("AutoShapeType_CIRCULAR_ARROW",99);
define ("AutoShapeType_CLOUD",2070);
define ("AutoShapeType_CLOUD_CALLOUT",106);
define ("AutoShapeType_CROSS",11);
define ("AutoShapeType_CUBE",16);
define ("AutoShapeType_CURVED_CONNECTOR",38);
define ("AutoShapeType_CURVED_CONNECTOR_2",37);
define ("AutoShapeType_CURVED_CONNECTOR_4",39);
define ("AutoShapeType_CURVED_CONNECTOR_5",40);
define ("AutoShapeType_CURVED_DOWN_ARROW",105);
define ("AutoShapeType_CURVED_DOWN_RIBBON",107);
define ("AutoShapeType_CURVED_LEFT_ARROW",103);
define ("AutoShapeType_CURVED_RIGHT_ARROW",102);
define ("AutoShapeType_CURVED_UP_ARROW",104);
define ("AutoShapeType_CURVED_UP_RIBBON",108);
define ("AutoShapeType_DECAGON",2050);
define ("AutoShapeType_DIAGONAL_STRIPE",2068);
define ("AutoShapeType_DIAMOND",4);
define ("AutoShapeType_DOCUMENT_ACTION_BUTTON",198);
define ("AutoShapeType_DODECAGON",2051);
define ("AutoShapeType_DONUT",23);
define ("AutoShapeType_DOUBLE_BRACE",186);
define ("AutoShapeType_DOUBLE_BRACKET",185);
define ("AutoShapeType_DOUBLE_WAVE",188);
define ("AutoShapeType_DOWN_ARROW",67);
define ("AutoShapeType_DOWN_ARROW_CALLOUT",80);
define ("AutoShapeType_DOWN_RIBBON",53);
define ("AutoShapeType_ELBOW_CONNECTOR",34);
define ("AutoShapeType_END_ACTION_BUTTON",195);
define ("AutoShapeType_EXPLOSION_1",71);
define ("AutoShapeType_EXPLOSION_2",72);
define ("AutoShapeType_FLOW_CHART_ALTERNATE_PROCESS",176);
define ("AutoShapeType_FLOW_CHART_CARD",121);
define ("AutoShapeType_FLOW_CHART_COLLATE",125);
define ("AutoShapeType_FLOW_CHART_CONNECTOR",120);
define ("AutoShapeType_FLOW_CHART_DATA",111);
define ("AutoShapeType_FLOW_CHART_DECISION",110);
define ("AutoShapeType_FLOW_CHART_DELAY",135);
define ("AutoShapeType_FLOW_CHART_DIRECT_ACCESS_STORAGE",133);
define ("AutoShapeType_FLOW_CHART_DISPLAY",134);
define ("AutoShapeType_FLOW_CHART_DOCUMENT",114);
define ("AutoShapeType_FLOW_CHART_EXTRACT",127);
define ("AutoShapeType_FLOW_CHART_INTERNAL_STORAGE",113);
define ("AutoShapeType_FLOW_CHART_MAGNETIC_DISK",132);
define ("AutoShapeType_FLOW_CHART_MANUAL_INPUT",118);
define ("AutoShapeType_FLOW_CHART_MANUAL_OPERATION",119);
define ("AutoShapeType_FLOW_CHART_MERGE",128);
define ("AutoShapeType_FLOW_CHART_MULTIDOCUMENT",115);
define ("AutoShapeType_FLOW_CHART_OFFLINE_STORAGE",129);
define ("AutoShapeType_FLOW_CHART_OFFPAGE_CONNECTOR",177);
define ("AutoShapeType_FLOW_CHART_OR",124);
define ("AutoShapeType_FLOW_CHART_PREDEFINED_PROCESS",112);
define ("AutoShapeType_FLOW_CHART_PREPARATION",117);
define ("AutoShapeType_FLOW_CHART_PROCESS",109);
define ("AutoShapeType_FLOW_CHART_PUNCHED_TAPE",122);
define ("AutoShapeType_FLOW_CHART_SEQUENTIAL_ACCESS_STORAGE",131);
define ("AutoShapeType_FLOW_CHART_SORT",126);
define ("AutoShapeType_FLOW_CHART_STORED_DATA",130);
define ("AutoShapeType_FLOW_CHART_SUMMING_JUNCTION",123);
define ("AutoShapeType_FLOW_CHART_TERMINATOR",116);
define ("AutoShapeType_FOLDED_CORNER",65);
define ("AutoShapeType_FORWARD_NEXT_ACTION_BUTTON",193);
define ("AutoShapeType_FRAME",2065);
define ("AutoShapeType_HALF_FRAME",2066);
define ("AutoShapeType_HEART",74);
define ("AutoShapeType_HELP_ACTION_BUTTON",191);
define ("AutoShapeType_HEPTAGON",2049);
define ("AutoShapeType_HEXAGON",9);
define ("AutoShapeType_HOME_ACTION_BUTTON",190);
define ("AutoShapeType_HOME_PLATE",15);
define ("AutoShapeType_HORIZONTAL_SCROLL",98);
define ("AutoShapeType_HOST_CONTROL",201);
define ("AutoShapeType_INFORMATION_ACTION_BUTTON",192);
define ("AutoShapeType_ISOSCELES_TRIANGLE",5);
define ("AutoShapeType_L_SHAPE",2067);
define ("AutoShapeType_LEFT_ARROW",66);
define ("AutoShapeType_LEFT_ARROW_CALLOUT",77);
define ("AutoShapeType_LEFT_BRACE",87);
define ("AutoShapeType_LEFT_BRACKET",85);
define ("AutoShapeType_LEFT_RIGHT_ARROW",69);
define ("AutoShapeType_LEFT_RIGHT_ARROW_CALLOUT",81);
define ("AutoShapeType_LEFT_RIGHT_UP_ARROW",182);
define ("AutoShapeType_LEFT_UP_ARROW",89);
define ("AutoShapeType_LIGHTNING_BOLT",73);
define ("AutoShapeType_LINE",20);
define ("AutoShapeType_LINE_CALLOUT_NO_BORDER_1",178);
define ("AutoShapeType_LINE_CALLOUT_NO_BORDER_2",41);
define ("AutoShapeType_LINE_CALLOUT_NO_BORDER_3",42);
define ("AutoShapeType_LINE_CALLOUT_NO_BORDER_4",43);
define ("AutoShapeType_LINE_CALLOUT_WITH_ACCENT_BAR_1",179);
define ("AutoShapeType_LINE_CALLOUT_WITH_ACCENT_BAR_2",44);
define ("AutoShapeType_LINE_CALLOUT_WITH_ACCENT_BAR_3",45);
define ("AutoShapeType_LINE_CALLOUT_WITH_ACCENT_BAR_4",46);
define ("AutoShapeType_LINE_CALLOUT_WITH_BORDER_1",180);
define ("AutoShapeType_LINE_CALLOUT_WITH_BORDER_2",47);
define ("AutoShapeType_LINE_CALLOUT_WITH_BORDER_3",48);
define ("AutoShapeType_LINE_CALLOUT_WITH_BORDER_4",49);
define ("AutoShapeType_LINE_CALLOUT_WITH_BORDER_AND_ACCENT_BAR_1",181);
define ("AutoShapeType_LINE_CALLOUT_WITH_BORDER_AND_ACCENT_BAR_2",50);
define ("AutoShapeType_LINE_CALLOUT_WITH_BORDER_AND_ACCENT_BAR_3",51);
define ("AutoShapeType_LINE_CALLOUT_WITH_BORDER_AND_ACCENT_BAR_4",52);
define ("AutoShapeType_MATH_DIVIDE",2074);
define ("AutoShapeType_MATH_EQUAL",2075);
define ("AutoShapeType_MATH_MINUS",2072);
define ("AutoShapeType_MATH_MULTIPLY",2073);
define ("AutoShapeType_MATH_NOT_EQUAL",2076);
define ("AutoShapeType_MATH_PLUS",2071);
define ("AutoShapeType_MOON",184);
define ("AutoShapeType_MOVIE_ACTION_BUTTON",200);
define ("AutoShapeType_MSOSPT_TEXT_ON_RING",31);
define ("AutoShapeType_NO_SYMBOL",57);
define ("AutoShapeType_NOT_PRIMITIVE",0);
define ("AutoShapeType_NOTCHED_RIGHT_ARROW",94);
define ("AutoShapeType_OCTAGON",10);
define ("AutoShapeType_OVAL",3);
define ("AutoShapeType_OVAL_CALLOUT",63);
define ("AutoShapeType_PARALLELOGRAM",7);
define ("AutoShapeType_PICTURE_FRAME",75);
define ("AutoShapeType_PIE",2064);
define ("AutoShapeType_PLAQUE",21);
define ("AutoShapeType_QUAD_ARROW",76);
define ("AutoShapeType_QUAD_ARROW_CALLOUT",83);
define ("AutoShapeType_RECTANGLE",1);
define ("AutoShapeType_RECTANGULAR_CALLOUT",61);
define ("AutoShapeType_REGULAR_PENTAGON",56);
define ("AutoShapeType_RETURN_ACTION_BUTTON",197);
define ("AutoShapeType_RIGHT_ARROW",13);
define ("AutoShapeType_RIGHT_ARROW_CALLOUT",78);
define ("AutoShapeType_RIGHT_BRACE",88);
define ("AutoShapeType_RIGHT_BRACKET",86);
define ("AutoShapeType_RIGHT_TRIANGLE",6);
define ("AutoShapeType_ROUND_DIAGONAL_CORNER_RECTANGLE",2058);
define ("AutoShapeType_ROUND_SAME_SIDE_CORNER_RECTANGLE",2057);
define ("AutoShapeType_ROUND_SINGLE_CORNER_RECTANGLE",2056);
define ("AutoShapeType_ROUNDED_RECTANGLE",2);
define ("AutoShapeType_ROUNDED_RECTANGULAR_CALLOUT",62);
define ("AutoShapeType_SEAL",18);
define ("AutoShapeType_SMILEY_FACE",96);
define ("AutoShapeType_SNIP_DIAGONAL_CORNER_RECTANGLE",2062);
define ("AutoShapeType_SNIP_ROUND_SINGLE_CORNER_RECTANGLE",2059);
define ("AutoShapeType_SNIP_SAME_SIDE_CORNER_RECTANGLE",2061);
define ("AutoShapeType_SNIP_SINGLE_CORNER_RECTANGLE",2060);
define ("AutoShapeType_SOUND_ACTION_BUTTON",199);
define ("AutoShapeType_STAR_10",2054);
define ("AutoShapeType_STAR_12",2055);
define ("AutoShapeType_STAR_16",59);
define ("AutoShapeType_STAR_24",92);
define ("AutoShapeType_STAR_32",60);
define ("AutoShapeType_STAR_4",187);
define ("AutoShapeType_STAR_5",12);
define ("AutoShapeType_STAR_6",2052);
define ("AutoShapeType_STAR_7",2053);
define ("AutoShapeType_STAR_8",58);
define ("AutoShapeType_STRAIGHT_CONNECTOR",32);
define ("AutoShapeType_STRIPED_RIGHT_ARROW",93);
define ("AutoShapeType_SUN",183);
define ("AutoShapeType_TEARDROP",2063);
define ("AutoShapeType_TEXT_ARCH_DOWN_CURVE",145);
define ("AutoShapeType_TEXT_ARCH_DOWN_POUR",149);
define ("AutoShapeType_TEXT_ARCH_UP_CURVE",144);
define ("AutoShapeType_TEXT_ARCH_UP_POUR",148);
define ("AutoShapeType_TEXT_BOX",202);
define ("AutoShapeType_TEXT_BUTTON_CURVE",147);
define ("AutoShapeType_TEXT_BUTTON_POUR",151);
define ("AutoShapeType_TEXT_CAN_DOWN",175);
define ("AutoShapeType_TEXT_CAN_UP",174);
define ("AutoShapeType_TEXT_CASCADE_DOWN",155);
define ("AutoShapeType_TEXT_CASCADE_UP",154);
define ("AutoShapeType_TEXT_CHEVRON",140);
define ("AutoShapeType_TEXT_CHEVRON_INVERTED",141);
define ("AutoShapeType_TEXT_CIRCLE_CURVE",146);
define ("AutoShapeType_TEXT_CIRCLE_POUR",150);
define ("AutoShapeType_TEXT_CURVE",27);
define ("AutoShapeType_TEXT_CURVE_DOWN",153);
define ("AutoShapeType_TEXT_CURVE_UP",152);
define ("AutoShapeType_TEXT_DEFLATE",161);
define ("AutoShapeType_TEXT_DEFLATE_BOTTOM",163);
define ("AutoShapeType_TEXT_DEFLATE_INFLATE",166);
define ("AutoShapeType_TEXT_DEFLATE_INFLATE_DEFLATE",167);
define ("AutoShapeType_TEXT_DEFLATE_TOP",165);
define ("AutoShapeType_TEXT_FADE_DOWN",171);
define ("AutoShapeType_TEXT_FADE_LEFT",169);
define ("AutoShapeType_TEXT_FADE_RIGHT",168);
define ("AutoShapeType_TEXT_FADE_UP",170);
define ("AutoShapeType_TEXT_HEXAGON",26);
define ("AutoShapeType_TEXT_INFLATE",160);
define ("AutoShapeType_TEXT_INFLATE_BOTTOM",162);
define ("AutoShapeType_TEXT_INFLATE_TOP",164);
define ("AutoShapeType_TEXT_OCTAGON",25);
define ("AutoShapeType_TEXT_ON_CURVE",30);
define ("AutoShapeType_TEXT_PLAIN_TEXT",136);
define ("AutoShapeType_TEXT_RING",29);
define ("AutoShapeType_TEXT_RING_INSIDE",142);
define ("AutoShapeType_TEXT_RING_OUTSIDE",143);
define ("AutoShapeType_TEXT_SIMPLE",24);
define ("AutoShapeType_TEXT_SLANT_DOWN",173);
define ("AutoShapeType_TEXT_SLANT_UP",172);
define ("AutoShapeType_TEXT_STOP",137);
define ("AutoShapeType_TEXT_TRIANGLE",138);
define ("AutoShapeType_TEXT_TRIANGLE_INVERTED",139);
define ("AutoShapeType_TEXT_WAVE",28);
define ("AutoShapeType_TEXT_WAVE_1",156);
define ("AutoShapeType_TEXT_WAVE_2",157);
define ("AutoShapeType_TEXT_WAVE_3",158);
define ("AutoShapeType_TEXT_WAVE_4",159);
define ("AutoShapeType_TRAPEZOID",8);
define ("AutoShapeType_U_TURN_ARROW",101);
define ("AutoShapeType_UNKNOWN",4095);
define ("AutoShapeType_UP_ARROW",68);
define ("AutoShapeType_UP_ARROW_CALLOUT",79);
define ("AutoShapeType_UP_DOWN_ARROW",70);
define ("AutoShapeType_UP_DOWN_ARROW_CALLOUT",82);
define ("AutoShapeType_UP_RIBBON",54);
define ("AutoShapeType_VERTICAL_SCROLL",97);
define ("AutoShapeType_WAVE",64);
define ("BackgroundMode_AUTOMATIC",0);
define ("BackgroundMode_OPAQUE",1);
define ("BackgroundMode_TRANSPARENT",2);
define ("BackgroundType_DIAGONAL_CROSSHATCH",9);
define ("BackgroundType_DIAGONAL_STRIPE",8);
define ("BackgroundType_GRAY_12",17);
define ("BackgroundType_GRAY_25",4);
define ("BackgroundType_GRAY_50",2);
define ("BackgroundType_GRAY_6",18);
define ("BackgroundType_GRAY_75",3);
define ("BackgroundType_HORIZONTAL_STRIPE",5);
define ("BackgroundType_NONE",0);
define ("BackgroundType_REVERSE_DIAGONAL_STRIPE",7);
define ("BackgroundType_SOLID",1);
define ("BackgroundType_THICK_DIAGONAL_CROSSHATCH",10);
define ("BackgroundType_THIN_DIAGONAL_CROSSHATCH",16);
define ("BackgroundType_THIN_DIAGONAL_STRIPE",14);
define ("BackgroundType_THIN_HORIZONTAL_CROSSHATCH",15);
define ("BackgroundType_THIN_HORIZONTAL_STRIPE",11);
define ("BackgroundType_THIN_REVERSE_DIAGONAL_STRIPE",13);
define ("BackgroundType_THIN_VERTICAL_STRIPE",12);
define ("BackgroundType_VERTICAL_STRIPE",6);
define ("Bar3DShapeType_BOX",0);
define ("Bar3DShapeType_CONE_TO_MAX",5);
define ("Bar3DShapeType_CONE_TO_POINT",4);
define ("Bar3DShapeType_CYLINDER",3);
define ("Bar3DShapeType_PYRAMID_TO_MAX",2);
define ("Bar3DShapeType_PYRAMID_TO_POINT",1);
define ("BevelPresetType_ANGLE",1);
define ("BevelPresetType_ART_DECO",2);
define ("BevelPresetType_CIRCLE",3);
define ("BevelPresetType_CONVEX",4);
define ("BevelPresetType_COOL_SLANT",5);
define ("BevelPresetType_CROSS",6);
define ("BevelPresetType_DIVOT",7);
define ("BevelPresetType_HARD_EDGE",8);
define ("BevelPresetType_NONE",0);
define ("BevelPresetType_RELAXED_INSET",9);
define ("BevelPresetType_RIBLET",10);
define ("BevelPresetType_SLOPE",11);
define ("BevelPresetType_SOFT_ROUND",12);
define ("BorderType_BOTTOM_BORDER",8);
define ("BorderType_DIAGONAL_DOWN",16);
define ("BorderType_DIAGONAL_UP",32);
define ("BorderType_HORIZONTAL",128);
define ("BorderType_LEFT_BORDER",1);
define ("BorderType_RIGHT_BORDER",2);
define ("BorderType_TOP_BORDER",4);
define ("BorderType_VERTICAL",64);
define ("BubbleSizeRepresents_SIZE_IS_AREA",0);
define ("BubbleSizeRepresents_SIZE_IS_WIDTH",1);
define ("BuiltinStyleType_ACCENT_1",29);
define ("BuiltinStyleType_ACCENT_2",33);
define ("BuiltinStyleType_ACCENT_3",37);
define ("BuiltinStyleType_ACCENT_4",41);
define ("BuiltinStyleType_ACCENT_5",45);
define ("BuiltinStyleType_ACCENT_6",49);
define ("BuiltinStyleType_BAD",27);
define ("BuiltinStyleType_CALCULATION",22);
define ("BuiltinStyleType_CHECK_CELL",23);
define ("BuiltinStyleType_COLUMN_LEVEL",2);
define ("BuiltinStyleType_COMMA",3);
define ("BuiltinStyleType_COMMA_1",6);
define ("BuiltinStyleType_CURRENCY",4);
define ("BuiltinStyleType_CURRENCY_1",7);
define ("BuiltinStyleType_EXPLANATORY_TEXT",53);
define ("BuiltinStyleType_FOLLOWED_HYPERLINK",9);
define ("BuiltinStyleType_FORTY_PERCENT_ACCENT_1",31);
define ("BuiltinStyleType_FORTY_PERCENT_ACCENT_2",35);
define ("BuiltinStyleType_FORTY_PERCENT_ACCENT_3",39);
define ("BuiltinStyleType_FORTY_PERCENT_ACCENT_4",43);
define ("BuiltinStyleType_FORTY_PERCENT_ACCENT_5",47);
define ("BuiltinStyleType_FORTY_PERCENT_ACCENT_6",51);
define ("BuiltinStyleType_GOOD",26);
define ("BuiltinStyleType_HEADER_1",16);
define ("BuiltinStyleType_HEADER_2",17);
define ("BuiltinStyleType_HEADER_3",18);
define ("BuiltinStyleType_HEADER_4",19);
define ("BuiltinStyleType_HYPERLINK",8);
define ("BuiltinStyleType_INPUT",20);
define ("BuiltinStyleType_LINKED_CELL",24);
define ("BuiltinStyleType_NEUTRAL",28);
define ("BuiltinStyleType_NORMAL",0);
define ("BuiltinStyleType_NOTE",10);
define ("BuiltinStyleType_OUTPUT",21);
define ("BuiltinStyleType_PERCENT",5);
define ("BuiltinStyleType_ROW_LEVEL",1);
define ("BuiltinStyleType_SIXTY_PERCENT_ACCENT_1",32);
define ("BuiltinStyleType_SIXTY_PERCENT_ACCENT_2",36);
define ("BuiltinStyleType_SIXTY_PERCENT_ACCENT_3",40);
define ("BuiltinStyleType_SIXTY_PERCENT_ACCENT_4",44);
define ("BuiltinStyleType_SIXTY_PERCENT_ACCENT_5",48);
define ("BuiltinStyleType_SIXTY_PERCENT_ACCENT_6",52);
define ("BuiltinStyleType_TITLE",15);
define ("BuiltinStyleType_TOTAL",25);
define ("BuiltinStyleType_TWENTY_PERCENT_ACCENT_1",30);
define ("BuiltinStyleType_TWENTY_PERCENT_ACCENT_2",34);
define ("BuiltinStyleType_TWENTY_PERCENT_ACCENT_3",38);
define ("BuiltinStyleType_TWENTY_PERCENT_ACCENT_4",42);
define ("BuiltinStyleType_TWENTY_PERCENT_ACCENT_5",46);
define ("BuiltinStyleType_TWENTY_PERCENT_ACCENT_6",50);
define ("BuiltinStyleType_WARNING_TEXT",11);
define ("CalcModeType_AUTOMATIC",0);
define ("CalcModeType_AUTOMATIC_EXCEPT_TABLE",1);
define ("CalcModeType_MANUAL",2);
define ("CategoryType_AUTOMATIC_SCALE",0);
define ("CategoryType_CATEGORY_SCALE",1);
define ("CategoryType_TIME_SCALE",2);
define ("CellBorderType_DASH_DOT",9);
define ("CellBorderType_DASH_DOT_DOT",11);
define ("CellBorderType_DASHED",3);
define ("CellBorderType_DOTTED",4);
define ("CellBorderType_DOUBLE",6);
define ("CellBorderType_HAIR",7);
define ("CellBorderType_MEDIUM",2);
define ("CellBorderType_MEDIUM_DASH_DOT",10);
define ("CellBorderType_MEDIUM_DASH_DOT_DOT",12);
define ("CellBorderType_MEDIUM_DASHED",8);
define ("CellBorderType_NONE",0);
define ("CellBorderType_SLANTED_DASH_DOT",13);
define ("CellBorderType_THICK",5);
define ("CellBorderType_THIN",1);
define ("CellValueType_IS_BOOL",0);
define ("CellValueType_IS_DATE_TIME",1);
define ("CellValueType_IS_ERROR",2);
define ("CellValueType_IS_NULL",3);
define ("CellValueType_IS_NUMERIC",4);
define ("CellValueType_IS_STRING",5);
define ("CellValueType_IS_UNKNOWN",6);
define ("ChartLineFormattingType_AUTOMATIC",0);
define ("ChartLineFormattingType_GRADIENT",3);
define ("ChartLineFormattingType_NONE",2);
define ("ChartLineFormattingType_SOLID",1);
define ("ChartMarkerType_AUTOMATIC",0);
define ("ChartMarkerType_CIRCLE",1);
define ("ChartMarkerType_DASH",2);
define ("ChartMarkerType_DIAMOND",3);
define ("ChartMarkerType_DOT",4);
define ("ChartMarkerType_NONE",5);
define ("ChartMarkerType_PICTURE",11);
define ("ChartMarkerType_SQUARE",7);
define ("ChartMarkerType_SQUARE_PLUS",6);
define ("ChartMarkerType_SQUARE_STAR",8);
define ("ChartMarkerType_SQUARE_X",10);
define ("ChartMarkerType_TRIANGLE",9);
define ("ChartSplitType_CUSTOM",3);
define ("ChartSplitType_PERCENT_VALUE",2);
define ("ChartSplitType_POSITION",0);
define ("ChartSplitType_VALUE",1);
define ("ChartType_AREA",0);
define ("ChartType_AREA_100_PERCENT_STACKED",2);
define ("ChartType_AREA_3_D",3);
define ("ChartType_AREA_3_D_100_PERCENT_STACKED",5);
define ("ChartType_AREA_3_D_STACKED",4);
define ("ChartType_AREA_STACKED",1);
define ("ChartType_BAR",6);
define ("ChartType_BAR_100_PERCENT_STACKED",8);
define ("ChartType_BAR_3_D_100_PERCENT_STACKED",11);
define ("ChartType_BAR_3_D_CLUSTERED",9);
define ("ChartType_BAR_3_D_STACKED",10);
define ("ChartType_BAR_STACKED",7);
define ("ChartType_BUBBLE",12);
define ("ChartType_BUBBLE_3_D",13);
define ("ChartType_COLUMN",14);
define ("ChartType_COLUMN_100_PERCENT_STACKED",16);
define ("ChartType_COLUMN_3_D",17);
define ("ChartType_COLUMN_3_D_100_PERCENT_STACKED",20);
define ("ChartType_COLUMN_3_D_CLUSTERED",18);
define ("ChartType_COLUMN_3_D_STACKED",19);
define ("ChartType_COLUMN_STACKED",15);
define ("ChartType_CONE",21);
define ("ChartType_CONE_100_PERCENT_STACKED",23);
define ("ChartType_CONE_STACKED",22);
define ("ChartType_CONICAL_BAR",24);
define ("ChartType_CONICAL_BAR_100_PERCENT_STACKED",26);
define ("ChartType_CONICAL_BAR_STACKED",25);
define ("ChartType_CONICAL_COLUMN_3_D",27);
define ("ChartType_CYLINDER",28);
define ("ChartType_CYLINDER_100_PERCENT_STACKED",30);
define ("ChartType_CYLINDER_STACKED",29);
define ("ChartType_CYLINDRICAL_BAR",31);
define ("ChartType_CYLINDRICAL_BAR_100_PERCENT_STACKED",33);
define ("ChartType_CYLINDRICAL_BAR_STACKED",32);
define ("ChartType_CYLINDRICAL_COLUMN_3_D",34);
define ("ChartType_DOUGHNUT",35);
define ("ChartType_DOUGHNUT_EXPLODED",36);
define ("ChartType_LINE",37);
define ("ChartType_LINE_100_PERCENT_STACKED",39);
define ("ChartType_LINE_100_PERCENT_STACKED_WITH_DATA_MARKERS",42);
define ("ChartType_LINE_3_D",43);
define ("ChartType_LINE_STACKED",38);
define ("ChartType_LINE_STACKED_WITH_DATA_MARKERS",41);
define ("ChartType_LINE_WITH_DATA_MARKERS",40);
define ("ChartType_PIE",44);
define ("ChartType_PIE_3_D",45);
define ("ChartType_PIE_3_D_EXPLODED",48);
define ("ChartType_PIE_BAR",49);
define ("ChartType_PIE_EXPLODED",47);
define ("ChartType_PIE_PIE",46);
define ("ChartType_PYRAMID",50);
define ("ChartType_PYRAMID_100_PERCENT_STACKED",52);
define ("ChartType_PYRAMID_BAR",53);
define ("ChartType_PYRAMID_BAR_100_PERCENT_STACKED",55);
define ("ChartType_PYRAMID_BAR_STACKED",54);
define ("ChartType_PYRAMID_COLUMN_3_D",56);
define ("ChartType_PYRAMID_STACKED",51);
define ("ChartType_RADAR",57);
define ("ChartType_RADAR_FILLED",59);
define ("ChartType_RADAR_WITH_DATA_MARKERS",58);
define ("ChartType_SCATTER",60);
define ("ChartType_SCATTER_CONNECTED_BY_CURVES_WITH_DATA_MARKER",61);
define ("ChartType_SCATTER_CONNECTED_BY_CURVES_WITHOUT_DATA_MARKER",62);
define ("ChartType_SCATTER_CONNECTED_BY_LINES_WITH_DATA_MARKER",63);
define ("ChartType_SCATTER_CONNECTED_BY_LINES_WITHOUT_DATA_MARKER",64);
define ("ChartType_STOCK_HIGH_LOW_CLOSE",65);
define ("ChartType_STOCK_OPEN_HIGH_LOW_CLOSE",66);
define ("ChartType_STOCK_VOLUME_HIGH_LOW_CLOSE",67);
define ("ChartType_STOCK_VOLUME_OPEN_HIGH_LOW_CLOSE",68);
define ("ChartType_SURFACE_3_D",69);
define ("ChartType_SURFACE_CONTOUR",71);
define ("ChartType_SURFACE_CONTOUR_WIREFRAME",72);
define ("ChartType_SURFACE_WIREFRAME_3_D",70);
define ("CheckValueType_CHECKED",1);
define ("CheckValueType_MIXED",2);
define ("CheckValueType_UN_CHECKED",0);
define ("ColorType_AUTOMATIC",0);
define ("ColorType_AUTOMATIC_INDEX",1);
define ("ColorType_INDEXED_COLOR",3);
define ("ColorType_RGB",2);
define ("ColorType_THEME",4);
define ("ConnectionDataSourceType_ADO_RECORD_SET",7);
define ("ConnectionDataSourceType_DAO_BASED_SOURCE",2);
define ("ConnectionDataSourceType_DSP",8);
define ("ConnectionDataSourceType_FILE_BASED_DATA_BASE_SOURCE",3);
define ("ConnectionDataSourceType_ODBC_BASED_SOURCE",1);
define ("ConnectionDataSourceType_OLEDB_BASED_SOURCE",5);
define ("ConnectionDataSourceType_TEXT_BASED_SOURCE",6);
define ("ConnectionDataSourceType_UNKNOWN",255);
define ("ConnectionDataSourceType_WEB_QUERY",4);
define ("ConnectionParameterType_CELL",0);
define ("ConnectionParameterType_PROMPT",1);
define ("ConnectionParameterType_VALUE",2);
define ("ConsolidationFunction_AVERAGE",2);
define ("ConsolidationFunction_COUNT",1);
define ("ConsolidationFunction_COUNT_NUMS",6);
define ("ConsolidationFunction_MAX",3);
define ("ConsolidationFunction_MIN",4);
define ("ConsolidationFunction_PRODUCT",5);
define ("ConsolidationFunction_STD_DEV",7);
define ("ConsolidationFunction_STD_DEVP",8);
define ("ConsolidationFunction_SUM",0);
define ("ConsolidationFunction_VAR",9);
define ("ConsolidationFunction_VARP",10);
define ("CountryCode_ALGERIA",213);
define ("CountryCode_AUSTRALIA",61);
define ("CountryCode_AUSTRIA",43);
define ("CountryCode_BELGIUM",32);
define ("CountryCode_BRAZIL",55);
define ("CountryCode_CANADA",2);
define ("CountryCode_CHINA",86);
define ("CountryCode_CZECH",420);
define ("CountryCode_DEFAULT",0);
define ("CountryCode_DENMARK",45);
define ("CountryCode_EGYPT",20);
define ("CountryCode_FINLAND",358);
define ("CountryCode_FRANCE",33);
define ("CountryCode_GERMANY",49);
define ("CountryCode_GREECE",30);
define ("CountryCode_HUNGARY",36);
define ("CountryCode_ICELAND",354);
define ("CountryCode_INDIA",91);
define ("CountryCode_IRAN",981);
define ("CountryCode_IRAQ",964);
define ("CountryCode_ISRAEL",972);
define ("CountryCode_ITALY",39);
define ("CountryCode_JAPAN",81);
define ("CountryCode_JORDAN",962);
define ("CountryCode_KUWAIT",965);
define ("CountryCode_LATIN_AMERIC",3);
define ("CountryCode_LEBANON",961);
define ("CountryCode_LIBYA",218);
define ("CountryCode_MEXICO",52);
define ("CountryCode_MOROCCO",216);
define ("CountryCode_NETHERLANDS",31);
define ("CountryCode_NEW_ZEALAND",64);
define ("CountryCode_NORWAY",47);
define ("CountryCode_POLAND",48);
define ("CountryCode_PORTUGAL",351);
define ("CountryCode_QATAR",974);
define ("CountryCode_RUSSIA",7);
define ("CountryCode_SAUDI",966);
define ("CountryCode_SOUTH_KOREA",82);
define ("CountryCode_SPAIN",34);
define ("CountryCode_SWEDEN",46);
define ("CountryCode_SWITZERLAND",41);
define ("CountryCode_SYRIA",963);
define ("CountryCode_TAIWAN",886);
define ("CountryCode_THAILAND",66);
define ("CountryCode_TURKEY",90);
define ("CountryCode_UNITED_ARAB_EMIRATES",971);
define ("CountryCode_UNITED_KINGDOM",44);
define ("CountryCode_USA",1);
define ("CountryCode_VIET_NAM",84);
define ("CredentialsMethodType_INTEGRATED",0);
define ("CredentialsMethodType_NONE",1);
define ("CredentialsMethodType_PROMPT",2);
define ("CredentialsMethodType_STORED",3);
define ("CrossType_AUTOMATIC",0);
define ("CrossType_CUSTOM",2);
define ("CrossType_MAXIMUM",1);
define ("DataBarAxisPosition_AUTOMATIC",0);
define ("DataBarAxisPosition_DATA_BAR_AXIS_AUTOMATIC",0);
define ("DataBarAxisPosition_DATA_BAR_AXIS_MIDPOINT",1);
define ("DataBarAxisPosition_DATA_BAR_AXIS_NONE",2);
define ("DataBarAxisPosition_MIDPOINT",1);
define ("DataBarAxisPosition_NONE",2);
define ("DataBarBorderType_DATA_BAR_BORDER_NONE",0);
define ("DataBarBorderType_DATA_BAR_BORDER_SOLID",1);
define ("DataBarBorderType_NONE",0);
define ("DataBarBorderType_SOLID",1);
define ("DataBarFillType_DATA_BAR_FILL_GRADIENT",1);
define ("DataBarFillType_DATA_BAR_FILL_SOLID",0);
define ("DataBarFillType_GRADIENT",1);
define ("DataBarFillType_SOLID",0);
define ("DataBarNegativeColorType_COLOR",0);
define ("DataBarNegativeColorType_DATA_BAR_COLOR",0);
define ("DataBarNegativeColorType_DATA_BAR_SAME_AS_POSITIVE",1);
define ("DataBarNegativeColorType_SAME_AS_POSITIVE",1);
define ("DataLablesSeparatorType_AUTO",0);
define ("DataLablesSeparatorType_COMMA",2);
define ("DataLablesSeparatorType_CUSTOM",6);
define ("DataLablesSeparatorType_NEW_LINE",5);
define ("DataLablesSeparatorType_PERIOD",4);
define ("DataLablesSeparatorType_SEMICOLON",3);
define ("DataLablesSeparatorType_SPACE",1);
define ("DateTimeGroupingType_DAY",0);
define ("DateTimeGroupingType_HOUR",1);
define ("DateTimeGroupingType_MINUTE",2);
define ("DateTimeGroupingType_MONTH",3);
define ("DateTimeGroupingType_SECOND",4);
define ("DateTimeGroupingType_YEAR",5);
define ("DirectoryType_DOWN_DIRECTORY",2);
define ("DirectoryType_SAME_VOLUME",1);
define ("DirectoryType_UP_DIRECTORY",3);
define ("DirectoryType_VOLUME",0);
define ("DisplayDrawingObjects_DISPLAY_SHAPES",0);
define ("DisplayDrawingObjects_HIDE",2);
define ("DisplayDrawingObjects_PLACEHOLDERS",1);
define ("DisplayUnitType_BILLIONS",8);
define ("DisplayUnitType_HUNDRED_MILLIONS",7);
define ("DisplayUnitType_HUNDRED_THOUSANDS",4);
define ("DisplayUnitType_HUNDREDS",1);
define ("DisplayUnitType_MILLIONS",5);
define ("DisplayUnitType_NONE",0);
define ("DisplayUnitType_TEN_MILLIONS",6);
define ("DisplayUnitType_TEN_THOUSANDS",3);
define ("DisplayUnitType_THOUSANDS",2);
define ("DisplayUnitType_TRILLIONS",9);
define ("DrawObjectEnum_CELL",1);
define ("DrawObjectEnum_IMAGE",0);
define ("DynamicFilterType_ABOVE_AVERAGE",0);
define ("DynamicFilterType_APRIL",12);
define ("DynamicFilterType_AUGUST",16);
define ("DynamicFilterType_BELOW_AVERAGE",1);
define ("DynamicFilterType_DECEMBER",9);
define ("DynamicFilterType_FEBRURAY",10);
define ("DynamicFilterType_JANUARY",6);
define ("DynamicFilterType_JULY",15);
define ("DynamicFilterType_JUNE",14);
define ("DynamicFilterType_LAST_MONTH",2);
define ("DynamicFilterType_LAST_QUARTER",3);
define ("DynamicFilterType_LAST_WEEK",4);
define ("DynamicFilterType_LAST_YEAR",5);
define ("DynamicFilterType_MARCH",11);
define ("DynamicFilterType_MAY",13);
define ("DynamicFilterType_NEXT_MONTH",18);
define ("DynamicFilterType_NEXT_QUARTER",19);
define ("DynamicFilterType_NEXT_WEEK",20);
define ("DynamicFilterType_NEXT_YEAR",21);
define ("DynamicFilterType_NONE",22);
define ("DynamicFilterType_NOVEMBER",8);
define ("DynamicFilterType_OCTOBER",7);
define ("DynamicFilterType_QUARTER_1",23);
define ("DynamicFilterType_QUARTER_2",24);
define ("DynamicFilterType_QUARTER_3",25);
define ("DynamicFilterType_QUARTER_4",26);
define ("DynamicFilterType_SEPTEMBER",17);
define ("DynamicFilterType_THIS_MONTH",27);
define ("DynamicFilterType_THIS_QUARTER",28);
define ("DynamicFilterType_THIS_WEEK",29);
define ("DynamicFilterType_THIS_YEAR",30);
define ("DynamicFilterType_TODAY",31);
define ("DynamicFilterType_TOMORROW",32);
define ("DynamicFilterType_YEAR_TO_DATE",33);
define ("DynamicFilterType_YESTERDAY",34);
define ("EncryptionType_ENHANCED_CRYPTOGRAPHIC_PROVIDER_V_1",1);
define ("EncryptionType_STRONG_CRYPTOGRAPHIC_PROVIDER",2);
define ("EncryptionType_XOR",0);
define ("ErrorBarDisplayType_BOTH",0);
define ("ErrorBarDisplayType_MINUS",1);
define ("ErrorBarDisplayType_NONE",2);
define ("ErrorBarDisplayType_PLUS",3);
define ("ErrorBarType_CUSTOM",0);
define ("ErrorBarType_FIXED_VALUE",1);
define ("ErrorBarType_PERCENT",2);
define ("ErrorBarType_ST_DEV",3);
define ("ErrorBarType_ST_ERROR",4);
define ("ErrorCheckType_CALC",1);
define ("ErrorCheckType_CALCULATED_COLUMN",129);
define ("ErrorCheckType_EMPTY_CELL_REF",2);
define ("ErrorCheckType_INCONSIST_FORMULA",16);
define ("ErrorCheckType_INCONSIST_RANGE",8);
define ("ErrorCheckType_TEXT_DATE",32);
define ("ErrorCheckType_TEXT_NUMBER",4);
define ("ErrorCheckType_UNPROCTED_FORMULA",64);
define ("ErrorCheckType_VALIDATION",128);
define ("ExceptionType_CHART",0);
define ("ExceptionType_CONDITIONAL_FORMATTING",3);
define ("ExceptionType_DATA_TYPE",1);
define ("ExceptionType_DATA_VALIDATION",2);
define ("ExceptionType_FILE_FORMAT",4);
define ("ExceptionType_FORMULA",5);
define ("ExceptionType_INCORRECT_PASSWORD",8);
define ("ExceptionType_INTERRUPTED",17);
define ("ExceptionType_INVALID_DATA",6);
define ("ExceptionType_INVALID_OPERATOR",7);
define ("ExceptionType_IO",18);
define ("ExceptionType_LICENSE",9);
define ("ExceptionType_LIMITATION",10);
define ("ExceptionType_PAGE_SETUP",11);
define ("ExceptionType_PIVOT_TABLE",12);
define ("ExceptionType_SHAPE",13);
define ("ExceptionType_SHEET_NAME",15);
define ("ExceptionType_SHEET_TYPE",16);
define ("ExceptionType_SPARKLINE",14);
define ("ExceptionType_UNDISCLOSED_INFORMATION",21);
define ("ExceptionType_UNSUPPORTED_FEATURE",19);
define ("ExceptionType_UNSUPPORTED_STREAM",20);
define ("FileFormatType_ASPOSE_PDF",0);
define ("FileFormatType_CSV",1);
define ("FileFormatType_DEFAULT",5);
define ("FileFormatType_DIF",30);
define ("FileFormatType_DOC",31);
define ("FileFormatType_DOCM",38);
define ("FileFormatType_DOCX",27);
define ("FileFormatType_DOTM",40);
define ("FileFormatType_DOTX",39);
define ("FileFormatType_EXCEL_2",25);
define ("FileFormatType_EXCEL_2003_XML",15);
define ("FileFormatType_EXCEL_2007_XLSB",16);
define ("FileFormatType_EXCEL_2007_XLSM",7);
define ("FileFormatType_EXCEL_2007_XLSX",6);
define ("FileFormatType_EXCEL_2007_XLTM",9);
define ("FileFormatType_EXCEL_2007_XLTX",8);
define ("FileFormatType_EXCEL_3",24);
define ("FileFormatType_EXCEL_4",23);
define ("FileFormatType_EXCEL_95",22);
define ("FileFormatType_EXCEL_97_TO_2003",5);
define ("FileFormatType_HTML",12);
define ("FileFormatType_M_HTML",17);
define ("FileFormatType_MAPI_MESSAGE",33);
define ("FileFormatType_MS_EQUATION",34);
define ("FileFormatType_ODS",14);
define ("FileFormatType_OLE_10_NATIVE",35);
define ("FileFormatType_OOXML",46);
define ("FileFormatType_PDF",13);
define ("FileFormatType_POTM",43);
define ("FileFormatType_POTX",42);
define ("FileFormatType_PPSM",45);
define ("FileFormatType_PPSX",44);
define ("FileFormatType_PPT",32);
define ("FileFormatType_PPTM",41);
define ("FileFormatType_PPTX",26);
define ("FileFormatType_SVG",28);
define ("FileFormatType_TAB_DELIMITED",11);
define ("FileFormatType_TIFF",21);
define ("FileFormatType_UNKNOWN",255);
define ("FileFormatType_VSD",36);
define ("FileFormatType_VSDX",37);
define ("FileFormatType_XLAM",10);
define ("FileFormatType_XLSB",16);
define ("FileFormatType_XLSM",7);
define ("FileFormatType_XLSX",6);
define ("FileFormatType_XLTM",9);
define ("FileFormatType_XLTX",8);
define ("FileFormatType_XPS",20);
define ("FillPattern_DARK_DOWNWARD_DIAGONAL",16);
define ("FillPattern_DARK_HORIZONTAL",25);
define ("FillPattern_DARK_UPWARD_DIAGONAL",17);
define ("FillPattern_DARK_VERTICAL",24);
define ("FillPattern_DASHED_DOWNWARD_DIAGONAL",26);
define ("FillPattern_DASHED_HORIZONTAL",29);
define ("FillPattern_DASHED_UPWARD_DIAGONAL",27);
define ("FillPattern_DASHED_VERTICAL",28);
define ("FillPattern_DIAGONAL_BRICK",34);
define ("FillPattern_DIVOT",38);
define ("FillPattern_DOTTED_DIAMOND",40);
define ("FillPattern_DOTTED_GRID",39);
define ("FillPattern_GRAY_10",3);
define ("FillPattern_GRAY_20",4);
define ("FillPattern_GRAY_25",13);
define ("FillPattern_GRAY_30",5);
define ("FillPattern_GRAY_40",6);
define ("FillPattern_GRAY_5",2);
define ("FillPattern_GRAY_50",7);
define ("FillPattern_GRAY_60",8);
define ("FillPattern_GRAY_70",9);
define ("FillPattern_GRAY_75",10);
define ("FillPattern_GRAY_80",11);
define ("FillPattern_GRAY_90",12);
define ("FillPattern_HORIZONTAL_BRICK",35);
define ("FillPattern_LARGE_CHECKER_BOARD",47);
define ("FillPattern_LARGE_CONFETTI",31);
define ("FillPattern_LARGE_GRID",45);
define ("FillPattern_LIGHT_DOWNWARD_DIAGONAL",14);
define ("FillPattern_LIGHT_HORIZONTAL",21);
define ("FillPattern_LIGHT_UPWARD_DIAGONAL",15);
define ("FillPattern_LIGHT_VERTICAL",20);
define ("FillPattern_NARROW_HORIZONTAL",23);
define ("FillPattern_NARROW_VERTICAL",22);
define ("FillPattern_NONE",0);
define ("FillPattern_OUTLINED_DIAMOND",48);
define ("FillPattern_PLAID",37);
define ("FillPattern_SHINGLE",41);
define ("FillPattern_SMALL_CHECKER_BOARD",46);
define ("FillPattern_SMALL_CONFETTI",30);
define ("FillPattern_SMALL_GRID",44);
define ("FillPattern_SOLID",1);
define ("FillPattern_SOLID_DIAMOND",49);
define ("FillPattern_SPHERE",43);
define ("FillPattern_TRELLIS",42);
define ("FillPattern_UNKNOWN",50);
define ("FillPattern_WAVE",33);
define ("FillPattern_WEAVE",36);
define ("FillPattern_WIDE_DOWNWARD_DIAGONAL",18);
define ("FillPattern_WIDE_UPWARD_DIAGONAL",19);
define ("FillPattern_ZIG_ZAG",32);
define ("FillPictureType_STACK",1);
define ("FillPictureType_STACK_AND_SCALE",2);
define ("FillPictureType_STRETCH",0);
define ("FillType_DARK",4);
define ("FillType_EXTRA_DARK",5);
define ("FillType_EXTRA_LIGHT",1);
define ("FillType_LIGHT",2);
define ("FillType_NO_FILL",0);
define ("FillType_NORMAL",3);
define ("FillType_AUTOMATIC",0);
define ("FillType_GRADIENT",3);
define ("FillType_NONE",1);
define ("FillType_PATTERN",5);
define ("FillType_SOLID",2);
define ("FillType_TEXTURE",4);
define ("FilterOperatorType_EQUAL",2);
define ("FilterOperatorType_GREATER_OR_EQUAL",5);
define ("FilterOperatorType_GREATER_THAN",3);
define ("FilterOperatorType_LESS_OR_EQUAL",0);
define ("FilterOperatorType_LESS_THAN",1);
define ("FilterOperatorType_NONE",6);
define ("FilterOperatorType_NOT_EQUAL",4);
define ("FilterType_COLOR_FILTER",0);
define ("FilterType_CUSTOM_FILTERS",1);
define ("FilterType_DYNAMIC_FILTER",2);
define ("FilterType_ICON_FILTER",4);
define ("FilterType_MULTIPLE_FILTERS",3);
define ("FilterType_NONE",6);
define ("FilterType_TOP_10",5);
define ("FontUnderlineType_ACCOUNTING",3);
define ("FontUnderlineType_DASH",5);
define ("FontUnderlineType_DASH_DOT_DOT_HEAVY",6);
define ("FontUnderlineType_DASH_DOT_HEAVY",7);
define ("FontUnderlineType_DASH_LONG",9);
define ("FontUnderlineType_DASH_LONG_HEAVY",10);
define ("FontUnderlineType_DASHED_HEAVY",8);
define ("FontUnderlineType_DOT_DASH",11);
define ("FontUnderlineType_DOT_DOT_DASH",12);
define ("FontUnderlineType_DOTTED",13);
define ("FontUnderlineType_DOTTED_HEAVY",14);
define ("FontUnderlineType_DOUBLE",2);
define ("FontUnderlineType_DOUBLE_ACCOUNTING",4);
define ("FontUnderlineType_HEAVY",15);
define ("FontUnderlineType_NONE",0);
define ("FontUnderlineType_SINGLE",1);
define ("FontUnderlineType_WAVE",16);
define ("FontUnderlineType_WAVY_DOUBLE",17);
define ("FontUnderlineType_WAVY_HEAVY",18);
define ("FontUnderlineType_WORDS",19);
define ("FormatConditionType_ABOVE_AVERAGE",17);
define ("FormatConditionType_BEGINS_WITH",10);
define ("FormatConditionType_CELL_VALUE",0);
define ("FormatConditionType_COLOR_SCALE",2);
define ("FormatConditionType_CONTAINS_BLANKS",12);
define ("FormatConditionType_CONTAINS_ERRORS",14);
define ("FormatConditionType_CONTAINS_TEXT",8);
define ("FormatConditionType_DATA_BAR",3);
define ("FormatConditionType_DUPLICATE_VALUES",7);
define ("FormatConditionType_ENDS_WITH",11);
define ("FormatConditionType_EXPRESSION",1);
define ("FormatConditionType_ICON_SET",4);
define ("FormatConditionType_NOT_CONTAINS_BLANKS",13);
define ("FormatConditionType_NOT_CONTAINS_ERRORS",15);
define ("FormatConditionType_NOT_CONTAINS_TEXT",9);
define ("FormatConditionType_TIME_PERIOD",16);
define ("FormatConditionType_TOP_10",5);
define ("FormatConditionType_UNIQUE_VALUES",6);
define ("FormatConditionValueType_AUTOMATIC_MAX",6);
define ("FormatConditionValueType_AUTOMATIC_MIN",7);
define ("FormatConditionValueType_FORMULA",0);
define ("FormatConditionValueType_MAX",1);
define ("FormatConditionValueType_MIN",2);
define ("FormatConditionValueType_NUMBER",3);
define ("FormatConditionValueType_PERCENT",4);
define ("FormatConditionValueType_PERCENTILE",5);
define ("FormatSetType_IS_GRADIENT_SET",1);
define ("FormatSetType_IS_PATTERN_SET",3);
define ("FormatSetType_IS_TEXTURE_SET",2);
define ("FormatSetType_NONE",0);
define ("FormattingType_AUTOMATIC",0);
define ("FormattingType_CUSTOM",2);
define ("FormattingType_NONE",1);
define ("FormulaType_ARRAY",1);
define ("FormulaType_FORMULA_TYPE_ARRAY",1);
define ("FormulaType_FORMULA_TYPE_NONE",-1);
define ("FormulaType_FORMULA_TYPE_NORMAL",0);
define ("FormulaType_FORMULA_TYPE_SHARED",2);
define ("FormulaType_FORMULA_TYPE_TABLE",3);
define ("FormulaType_NONE",-1);
define ("FormulaType_NORMAL",0);
define ("FormulaType_SHARED",2);
define ("FormulaType_TABLE",3);
define ("GradientColorType_NONE",0);
define ("GradientColorType_ONE_COLOR",1);
define ("GradientColorType_PRESET_COLORS",2);
define ("GradientColorType_TWO_COLORS",3);
define ("GradientDirectionType_FROM_CENTER",4);
define ("GradientDirectionType_FROM_LOWER_LEFT_CORNER",2);
define ("GradientDirectionType_FROM_LOWER_RIGHT_CORNER",3);
define ("GradientDirectionType_FROM_UPPER_LEFT_CORNER",0);
define ("GradientDirectionType_FROM_UPPER_RIGHT_CORNER",1);
define ("GradientDirectionType_UNKNOWN",5);
define ("GradientFillType_LINEAR",0);
define ("GradientFillType_PATH",3);
define ("GradientFillType_RADIAL",1);
define ("GradientFillType_RECTANGLE",2);
define ("GradientPresetType_BRASS",0);
define ("GradientPresetType_CALM_WATER",1);
define ("GradientPresetType_CHROME",2);
define ("GradientPresetType_CHROME_II",3);
define ("GradientPresetType_DAYBREAK",4);
define ("GradientPresetType_DESERT",5);
define ("GradientPresetType_EARLY_SUNSET",6);
define ("GradientPresetType_FIRE",7);
define ("GradientPresetType_FOG",8);
define ("GradientPresetType_GOLD",9);
define ("GradientPresetType_GOLD_II",10);
define ("GradientPresetType_HORIZON",11);
define ("GradientPresetType_LATE_SUNSET",12);
define ("GradientPresetType_MAHOGANY",13);
define ("GradientPresetType_MOSS",14);
define ("GradientPresetType_NIGHTFALL",15);
define ("GradientPresetType_OCEAN",16);
define ("GradientPresetType_PARCHMENT",17);
define ("GradientPresetType_PEACOCK",18);
define ("GradientPresetType_RAINBOW",19);
define ("GradientPresetType_RAINBOW_II",20);
define ("GradientPresetType_SAPPHIRE",21);
define ("GradientPresetType_SILVER",22);
define ("GradientPresetType_UNKNOWN",24);
define ("GradientPresetType_WHEAT",23);
define ("GradientStyleType_DIAGONAL_DOWN",0);
define ("GradientStyleType_DIAGONAL_UP",1);
define ("GradientStyleType_FROM_CENTER",2);
define ("GradientStyleType_FROM_CORNER",3);
define ("GradientStyleType_HORIZONTAL",4);
define ("GradientStyleType_UNKNOWN",6);
define ("GradientStyleType_VERTICAL",5);
define ("HeaderFooterCommandType_CURRENT_DATE",3);
define ("HeaderFooterCommandType_CURRENT_PAGE",1);
define ("HeaderFooterCommandType_CURRENT_TIME",4);
define ("HeaderFooterCommandType_FILE_NAME",6);
define ("HeaderFooterCommandType_FILE_PATH",7);
define ("HeaderFooterCommandType_PAGECOUNT",2);
define ("HeaderFooterCommandType_PICTURE",8);
define ("HeaderFooterCommandType_SHEET_NAME",5);
define ("HeaderFooterCommandType_TEXT",0);
define ("HeaderFooterSectionType_CENTER",1);
define ("HeaderFooterSectionType_LEFT",0);
define ("HeaderFooterSectionType_RIGHT",2);
define ("HtmlCrossType_CROSS",1);
define ("HtmlCrossType_DEFAULT",0);
define ("HtmlCrossType_FIT_TO_CELL",2);
define ("HtmlHiddenColDisplayType_HIDDEN",0);
define ("HtmlHiddenColDisplayType_REMOVE",1);
define ("HtmlHiddenRowDisplayType_HIDDEN",0);
define ("HtmlHiddenRowDisplayType_REMOVE",1);
define ("IconSetType_ARROWS_3",0);
define ("IconSetType_ARROWS_4",8);
define ("IconSetType_ARROWS_5",13);
define ("IconSetType_ARROWS_GRAY_3",1);
define ("IconSetType_ARROWS_GRAY_4",9);
define ("IconSetType_ARROWS_GRAY_5",14);
define ("IconSetType_BOXES_5",18);
define ("IconSetType_CUSTOM_SET",21);
define ("IconSetType_FLAGS_3",2);
define ("IconSetType_NONE",20);
define ("IconSetType_QUARTERS_5",15);
define ("IconSetType_RATING_4",10);
define ("IconSetType_RATING_5",16);
define ("IconSetType_RED_TO_BLACK_4",11);
define ("IconSetType_SIGNS_3",3);
define ("IconSetType_STARS_3",17);
define ("IconSetType_SYMBOLS_3",4);
define ("IconSetType_SYMBOLS_32",5);
define ("IconSetType_TRAFFIC_LIGHTS_31",6);
define ("IconSetType_TRAFFIC_LIGHTS_32",7);
define ("IconSetType_TRAFFIC_LIGHTS_4",12);
define ("IconSetType_TRIANGLES_3",19);
define ("LabelPositionType_ABOVE",4);
define ("LabelPositionType_BELOW",5);
define ("LabelPositionType_BEST_FIT",8);
define ("LabelPositionType_CENTER",0);
define ("LabelPositionType_INSIDE_BASE",1);
define ("LabelPositionType_INSIDE_END",2);
define ("LabelPositionType_LEFT",6);
define ("LabelPositionType_MOVED",9);
define ("LabelPositionType_OUTSIDE_END",3);
define ("LabelPositionType_RIGHT",7);
define ("LegendPositionType_BOTTOM",0);
define ("LegendPositionType_CORNER",1);
define ("LegendPositionType_LEFT",4);
define ("LegendPositionType_NOT_DOCKED",7);
define ("LegendPositionType_RIGHT",3);
define ("LegendPositionType_TOP",2);
define ("LightRigType_BALANCED",0);
define ("LightRigType_BRIGHT_ROOM",1);
define ("LightRigType_CHILLY",2);
define ("LightRigType_CONTRASTING",3);
define ("LightRigType_FLAT",4);
define ("LightRigType_FLOOD",5);
define ("LightRigType_FREEZING",6);
define ("LightRigType_GLOW",7);
define ("LightRigType_HARSH",8);
define ("LightRigType_LEGACY_FLAT_1",9);
define ("LightRigType_LEGACY_FLAT_2",10);
define ("LightRigType_LEGACY_FLAT_3",11);
define ("LightRigType_LEGACY_FLAT_4",12);
define ("LightRigType_LEGACY_HARSH_1",13);
define ("LightRigType_LEGACY_HARSH_2",14);
define ("LightRigType_LEGACY_HARSH_3",15);
define ("LightRigType_LEGACY_HARSH_4",16);
define ("LightRigType_LEGACY_NORMAL_1",17);
define ("LightRigType_LEGACY_NORMAL_2",18);
define ("LightRigType_LEGACY_NORMAL_3",19);
define ("LightRigType_LEGACY_NORMAL_4",20);
define ("LightRigType_MORNING",21);
define ("LightRigType_SOFT",22);
define ("LightRigType_SUNRISE",23);
define ("LightRigType_SUNSET",24);
define ("LightRigType_THREE_POINT",25);
define ("LightRigType_TWO_POINT",26);
define ("LineCapType_FLAT",2);
define ("LineCapType_NONE",3);
define ("LineCapType_ROUND",1);
define ("LineCapType_SQUARE",0);
define ("LineJoinType_BEVEL",1);
define ("LineJoinType_MITER",2);
define ("LineJoinType_NONE",3);
define ("LineJoinType_ROUND",0);
define ("LineType_DARK_GRAY",6);
define ("LineType_DASH",1);
define ("LineType_DASH_DOT",3);
define ("LineType_DASH_DOT_DOT",4);
define ("LineType_DOT",2);
define ("LineType_LIGHT_GRAY",8);
define ("LineType_MEDIUM_GRAY",7);
define ("LineType_SOLID",0);
define ("LoadFormat_AUTO",0);
define ("LoadFormat_CSV",1);
define ("LoadFormat_EXCEL_97_TO_2003",5);
define ("LoadFormat_HTML",12);
define ("LoadFormat_M_HTML",13);
define ("LoadFormat_ODS",14);
define ("LoadFormat_SPREADSHEET_ML",15);
define ("LoadFormat_TAB_DELIMITED",11);
define ("LoadFormat_UNKNOWN",255);
define ("LoadFormat_XLSB",16);
define ("LoadFormat_XLSX",6);
define ("LookAtType_CONTAINS",0);
define ("LookAtType_END_WITH",2);
define ("LookAtType_ENTIRE_CONTENT",3);
define ("LookAtType_START_WITH",1);
define ("LookInType_COMMENTS",3);
define ("LookInType_FORMULAS",0);
define ("LookInType_ONLY_FORMULAS",4);
define ("LookInType_VALUES",1);
define ("LookInType_VALUES_EXCLUDE_FORMULA_CELL",2);
define ("MemorySetting_MEMORY_PREFERENCE",1);
define ("MemorySetting_NORMAL",0);
define ("MirrorType_BOTH",3);
define ("MirrorType_HORIZONAL",1);
define ("MirrorType_NONE",0);
define ("MirrorType_VERTICAL",2);
define ("MsoArrowheadLength_LONG",2);
define ("MsoArrowheadLength_MEDIUM",1);
define ("MsoArrowheadLength_SHORT",0);
define ("MsoArrowheadStyle_ARROW",1);
define ("MsoArrowheadStyle_ARROW_DIAMOND",3);
define ("MsoArrowheadStyle_ARROW_OPEN",5);
define ("MsoArrowheadStyle_ARROW_OVAL",4);
define ("MsoArrowheadStyle_ARROW_STEALTH",2);
define ("MsoArrowheadStyle_NONE",0);
define ("MsoArrowheadWidth_MEDIUM",1);
define ("MsoArrowheadWidth_NARROW",0);
define ("MsoArrowheadWidth_WIDE",2);
define ("MsoDrawingType_ARC",4);
define ("MsoDrawingType_BUTTON",7);
define ("MsoDrawingType_CELLS_DRAWING",30);
define ("MsoDrawingType_CHART",5);
define ("MsoDrawingType_CHECK_BOX",11);
define ("MsoDrawingType_COMBO_BOX",20);
define ("MsoDrawingType_COMMENT",25);
define ("MsoDrawingType_DIALOG_BOX",15);
define ("MsoDrawingType_GROUP",0);
define ("MsoDrawingType_GROUP_BOX",19);
define ("MsoDrawingType_LABEL",14);
define ("MsoDrawingType_LINE",1);
define ("MsoDrawingType_LIST_BOX",18);
define ("MsoDrawingType_OLE_OBJECT",24);
define ("MsoDrawingType_OVAL",3);
define ("MsoDrawingType_PICTURE",8);
define ("MsoDrawingType_POLYGON",9);
define ("MsoDrawingType_RADIO_BUTTON",12);
define ("MsoDrawingType_RECTANGLE",2);
define ("MsoDrawingType_SCROLL_BAR",17);
define ("MsoDrawingType_SPINNER",16);
define ("MsoDrawingType_TEXT_BOX",6);
define ("MsoDrawingType_UNKNOWN",29);
define ("MsoLineDashStyle_DASH",0);
define ("MsoLineDashStyle_DASH_DOT",1);
define ("MsoLineDashStyle_DASH_DOT_DOT",2);
define ("MsoLineDashStyle_DASH_LONG_DASH",3);
define ("MsoLineDashStyle_DASH_LONG_DASH_DOT",4);
define ("MsoLineDashStyle_ROUND_DOT",5);
define ("MsoLineDashStyle_SOLID",6);
define ("MsoLineDashStyle_SQUARE_DOT",7);
define ("MsoLineStyle_SINGLE",0);
define ("MsoLineStyle_THICK_BETWEEN_THIN",1);
define ("MsoLineStyle_THICK_THIN",3);
define ("MsoLineStyle_THIN_THICK",2);
define ("MsoLineStyle_THIN_THIN",4);
define ("MsoPresetTextEffect_TEXT_EFFECT_1",0);
define ("MsoPresetTextEffect_TEXT_EFFECT_10",9);
define ("MsoPresetTextEffect_TEXT_EFFECT_11",10);
define ("MsoPresetTextEffect_TEXT_EFFECT_12",11);
define ("MsoPresetTextEffect_TEXT_EFFECT_13",12);
define ("MsoPresetTextEffect_TEXT_EFFECT_14",13);
define ("MsoPresetTextEffect_TEXT_EFFECT_15",14);
define ("MsoPresetTextEffect_TEXT_EFFECT_16",15);
define ("MsoPresetTextEffect_TEXT_EFFECT_17",16);
define ("MsoPresetTextEffect_TEXT_EFFECT_18",17);
define ("MsoPresetTextEffect_TEXT_EFFECT_19",18);
define ("MsoPresetTextEffect_TEXT_EFFECT_2",1);
define ("MsoPresetTextEffect_TEXT_EFFECT_20",19);
define ("MsoPresetTextEffect_TEXT_EFFECT_21",20);
define ("MsoPresetTextEffect_TEXT_EFFECT_22",21);
define ("MsoPresetTextEffect_TEXT_EFFECT_23",22);
define ("MsoPresetTextEffect_TEXT_EFFECT_24",23);
define ("MsoPresetTextEffect_TEXT_EFFECT_25",24);
define ("MsoPresetTextEffect_TEXT_EFFECT_26",25);
define ("MsoPresetTextEffect_TEXT_EFFECT_27",26);
define ("MsoPresetTextEffect_TEXT_EFFECT_28",27);
define ("MsoPresetTextEffect_TEXT_EFFECT_29",28);
define ("MsoPresetTextEffect_TEXT_EFFECT_3",2);
define ("MsoPresetTextEffect_TEXT_EFFECT_30",29);
define ("MsoPresetTextEffect_TEXT_EFFECT_4",3);
define ("MsoPresetTextEffect_TEXT_EFFECT_5",4);
define ("MsoPresetTextEffect_TEXT_EFFECT_6",5);
define ("MsoPresetTextEffect_TEXT_EFFECT_7",6);
define ("MsoPresetTextEffect_TEXT_EFFECT_8",7);
define ("MsoPresetTextEffect_TEXT_EFFECT_9",8);
define ("MsoPresetTextEffectShape_ARCH_DOWN_CURVE",145);
define ("MsoPresetTextEffectShape_ARCH_DOWN_POUR",149);
define ("MsoPresetTextEffectShape_ARCH_UP_CURVE",144);
define ("MsoPresetTextEffectShape_ARCH_UP_POUR",148);
define ("MsoPresetTextEffectShape_BUTTON_CURVE",147);
define ("MsoPresetTextEffectShape_BUTTON_POUR",151);
define ("MsoPresetTextEffectShape_CAN_DOWN",175);
define ("MsoPresetTextEffectShape_CAN_UP",174);
define ("MsoPresetTextEffectShape_CASCADE_DOWN",155);
define ("MsoPresetTextEffectShape_CASCADE_UP",154);
define ("MsoPresetTextEffectShape_CHEVRON_DOWN",141);
define ("MsoPresetTextEffectShape_CHEVRON_UP",140);
define ("MsoPresetTextEffectShape_CIRCLE_CURVE",146);
define ("MsoPresetTextEffectShape_CIRCLE_POUR",150);
define ("MsoPresetTextEffectShape_CURVE_DOWN",153);
define ("MsoPresetTextEffectShape_CURVE_UP",152);
define ("MsoPresetTextEffectShape_DEFLATE",161);
define ("MsoPresetTextEffectShape_DEFLATE_BOTTOM",163);
define ("MsoPresetTextEffectShape_DEFLATE_INFLATE",166);
define ("MsoPresetTextEffectShape_DEFLATE_INFLATE_DEFLATE",167);
define ("MsoPresetTextEffectShape_DEFLATE_TOP",165);
define ("MsoPresetTextEffectShape_DOUBLE_WAVE_1",158);
define ("MsoPresetTextEffectShape_DOUBLE_WAVE_2",159);
define ("MsoPresetTextEffectShape_FADE_DOWN",171);
define ("MsoPresetTextEffectShape_FADE_LEFT",169);
define ("MsoPresetTextEffectShape_FADE_RIGHT",168);
define ("MsoPresetTextEffectShape_FADE_UP",170);
define ("MsoPresetTextEffectShape_INFLATE",160);
define ("MsoPresetTextEffectShape_INFLATE_BOTTOM",162);
define ("MsoPresetTextEffectShape_INFLATE_TOP",164);
define ("MsoPresetTextEffectShape_MIXED",255);
define ("MsoPresetTextEffectShape_PLAIN_TEXT",136);
define ("MsoPresetTextEffectShape_RING_INSIDE",142);
define ("MsoPresetTextEffectShape_RING_OUTSIDE",143);
define ("MsoPresetTextEffectShape_SLANT_DOWN",173);
define ("MsoPresetTextEffectShape_SLANT_UP",172);
define ("MsoPresetTextEffectShape_STOP",137);
define ("MsoPresetTextEffectShape_TRIANGLE_DOWN",139);
define ("MsoPresetTextEffectShape_TRIANGLE_UP",138);
define ("MsoPresetTextEffectShape_WAVE_1",156);
define ("MsoPresetTextEffectShape_WAVE_2",157);
define ("NumberCategoryType_DATE",3);
define ("NumberCategoryType_FRACTION",5);
define ("NumberCategoryType_GENERAL",0);
define ("NumberCategoryType_NUMBER",2);
define ("NumberCategoryType_SCIENTIFIC",6);
define ("NumberCategoryType_TEXT",1);
define ("NumberCategoryType_TIME",4);
define ("OLEDBCommandType_CUBE_NAME",1);
define ("OLEDBCommandType_DEFAULT_INFORMATION",4);
define ("OLEDBCommandType_SQL_STATEMENT",2);
define ("OLEDBCommandType_TABLE_NAME",3);
define ("OLEDBCommandType_WEB_BASED_LIST",5);
define ("OleFileType_DOC",1);
define ("OleFileType_DOCX",8);
define ("OleFileType_MAPI_MESSAGE",5);
define ("OleFileType_MS_EQUATION",4);
define ("OleFileType_PDF",3);
define ("OleFileType_PPT",2);
define ("OleFileType_PPTX",9);
define ("OleFileType_UNKNOWN",10);
define ("OleFileType_XLS",0);
define ("OleFileType_XLSB",7);
define ("OleFileType_XLSX",6);
define ("OperatorType_BETWEEN",0);
define ("OperatorType_EQUAL",1);
define ("OperatorType_GREATER_OR_EQUAL",3);
define ("OperatorType_GREATER_THAN",2);
define ("OperatorType_LESS_OR_EQUAL",5);
define ("OperatorType_LESS_THAN",4);
define ("OperatorType_NONE",6);
define ("OperatorType_NOT_BETWEEN",7);
define ("OperatorType_NOT_EQUAL",8);
define ("PageOrientationType_LANDSCAPE",0);
define ("PageOrientationType_PORTRAIT",1);
define ("PaperSizeType_PAPER_10_X_11",45);
define ("PaperSizeType_PAPER_10_X_14",16);
define ("PaperSizeType_PAPER_11_X_17",17);
define ("PaperSizeType_PAPER_12_X_11",90);
define ("PaperSizeType_PAPER_15_X_11",46);
define ("PaperSizeType_PAPER_9_X_11",44);
define ("PaperSizeType_PAPER_A_2",66);
define ("PaperSizeType_PAPER_A_3",8);
define ("PaperSizeType_PAPER_A_3_EXTRA",63);
define ("PaperSizeType_PAPER_A_3_EXTRA_TRANSVERSE",68);
define ("PaperSizeType_PAPER_A_3_ROTATED",76);
define ("PaperSizeType_PAPER_A_3_TRANSVERSE",67);
define ("PaperSizeType_PAPER_A_4",9);
define ("PaperSizeType_PAPER_A_4_EXTRA",53);
define ("PaperSizeType_PAPER_A_4_PLUS",60);
define ("PaperSizeType_PAPER_A_4_ROTATED",77);
define ("PaperSizeType_PAPER_A_4_SMALL",10);
define ("PaperSizeType_PAPER_A_4_TRANSVERSE",55);
define ("PaperSizeType_PAPER_A_5",11);
define ("PaperSizeType_PAPER_A_5_EXTRA",64);
define ("PaperSizeType_PAPER_A_5_ROTATED",78);
define ("PaperSizeType_PAPER_A_5_TRANSVERSE",61);
define ("PaperSizeType_PAPER_A_6",70);
define ("PaperSizeType_PAPER_A_6_ROTATED",83);
define ("PaperSizeType_PAPER_B_3",200);
define ("PaperSizeType_PAPER_B_4",12);
define ("PaperSizeType_PAPER_B_5",13);
define ("PaperSizeType_PAPER_BUSINESS_CARD",201);
define ("PaperSizeType_PAPER_C_SHEET",24);
define ("PaperSizeType_PAPER_D_SHEET",25);
define ("PaperSizeType_PAPER_E_SHEET",26);
define ("PaperSizeType_PAPER_ENVELOPE_10",20);
define ("PaperSizeType_PAPER_ENVELOPE_11",21);
define ("PaperSizeType_PAPER_ENVELOPE_12",22);
define ("PaperSizeType_PAPER_ENVELOPE_14",23);
define ("PaperSizeType_PAPER_ENVELOPE_9",19);
define ("PaperSizeType_PAPER_ENVELOPE_B_4",33);
define ("PaperSizeType_PAPER_ENVELOPE_B_5",34);
define ("PaperSizeType_PAPER_ENVELOPE_B_6",35);
define ("PaperSizeType_PAPER_ENVELOPE_C_3",29);
define ("PaperSizeType_PAPER_ENVELOPE_C_4",30);
define ("PaperSizeType_PAPER_ENVELOPE_C_5",28);
define ("PaperSizeType_PAPER_ENVELOPE_C_6",31);
define ("PaperSizeType_PAPER_ENVELOPE_C_65",32);
define ("PaperSizeType_PAPER_ENVELOPE_DL",27);
define ("PaperSizeType_PAPER_ENVELOPE_INVITE",47);
define ("PaperSizeType_PAPER_ENVELOPE_ITALY",36);
define ("PaperSizeType_PAPER_ENVELOPE_MONARCH",37);
define ("PaperSizeType_PAPER_ENVELOPE_PERSONAL",38);
define ("PaperSizeType_PAPER_EXECUTIVE",7);
define ("PaperSizeType_PAPER_FANFOLD_LEGAL_GERMAN",41);
define ("PaperSizeType_PAPER_FANFOLD_STD_GERMAN",40);
define ("PaperSizeType_PAPER_FANFOLD_US",39);
define ("PaperSizeType_PAPER_FOLIO",14);
define ("PaperSizeType_PAPER_ISOB_4",42);
define ("PaperSizeType_PAPER_ISOB_5_EXTRA",65);
define ("PaperSizeType_PAPER_JAPANESE_DOUBLE_POSTCARD",69);
define ("PaperSizeType_PAPER_JAPANESE_DOUBLE_POSTCARD_ROTATED",82);
define ("PaperSizeType_PAPER_JAPANESE_ENVELOPE_CHOU_3",73);
define ("PaperSizeType_PAPER_JAPANESE_ENVELOPE_CHOU_3_ROTATED",86);
define ("PaperSizeType_PAPER_JAPANESE_ENVELOPE_CHOU_4",74);
define ("PaperSizeType_PAPER_JAPANESE_ENVELOPE_CHOU_4_ROTATED",87);
define ("PaperSizeType_PAPER_JAPANESE_ENVELOPE_KAKU_2",71);
define ("PaperSizeType_PAPER_JAPANESE_ENVELOPE_KAKU_2_ROTATED",84);
define ("PaperSizeType_PAPER_JAPANESE_ENVELOPE_KAKU_3",72);
define ("PaperSizeType_PAPER_JAPANESE_ENVELOPE_KAKU_3_ROTATED",85);
define ("PaperSizeType_PAPER_JAPANESE_ENVELOPE_YOU_4",91);
define ("PaperSizeType_PAPER_JAPANESE_ENVELOPE_YOU_4_ROTATED",92);
define ("PaperSizeType_PAPER_JAPANESE_POSTCARD",43);
define ("PaperSizeType_PAPER_JAPANESE_POSTCARD_ROTATED",81);
define ("PaperSizeType_PAPER_JISB_4_ROTATED",79);
define ("PaperSizeType_PAPER_JISB_5_ROTATED",80);
define ("PaperSizeType_PAPER_JISB_5_TRANSVERSE",62);
define ("PaperSizeType_PAPER_JISB_6",88);
define ("PaperSizeType_PAPER_JISB_6_ROTATED",89);
define ("PaperSizeType_PAPER_LEDGER",4);
define ("PaperSizeType_PAPER_LEGAL",5);
define ("PaperSizeType_PAPER_LEGAL_EXTRA",51);
define ("PaperSizeType_PAPER_LETTER",1);
define ("PaperSizeType_PAPER_LETTER_EXTRA",50);
define ("PaperSizeType_PAPER_LETTER_EXTRA_TRANSVERSE",56);
define ("PaperSizeType_PAPER_LETTER_PLUS",59);
define ("PaperSizeType_PAPER_LETTER_ROTATED",75);
define ("PaperSizeType_PAPER_LETTER_SMALL",2);
define ("PaperSizeType_PAPER_LETTER_TRANSVERSE",54);
define ("PaperSizeType_PAPER_NOTE",18);
define ("PaperSizeType_PAPER_PRC_16_K",93);
define ("PaperSizeType_PAPER_PRC_16_K_ROTATED",106);
define ("PaperSizeType_PAPER_PRC_32_K",94);
define ("PaperSizeType_PAPER_PRC_32_K_ROTATED",107);
define ("PaperSizeType_PAPER_PRC_BIG_32_K",95);
define ("PaperSizeType_PAPER_PRC_BIG_32_K_ROTATED",108);
define ("PaperSizeType_PAPER_PRC_ENVELOPE_1",96);
define ("PaperSizeType_PAPER_PRC_ENVELOPE_10",105);
define ("PaperSizeType_PAPER_PRC_ENVELOPE_10_ROTATED",118);
define ("PaperSizeType_PAPER_PRC_ENVELOPE_1_ROTATED",109);
define ("PaperSizeType_PAPER_PRC_ENVELOPE_2",97);
define ("PaperSizeType_PAPER_PRC_ENVELOPE_2_ROTATED",110);
define ("PaperSizeType_PAPER_PRC_ENVELOPE_3",98);
define ("PaperSizeType_PAPER_PRC_ENVELOPE_3_ROTATED",111);
define ("PaperSizeType_PAPER_PRC_ENVELOPE_4",99);
define ("PaperSizeType_PAPER_PRC_ENVELOPE_4_ROTATED",112);
define ("PaperSizeType_PAPER_PRC_ENVELOPE_5",100);
define ("PaperSizeType_PAPER_PRC_ENVELOPE_5_ROTATED",113);
define ("PaperSizeType_PAPER_PRC_ENVELOPE_6",101);
define ("PaperSizeType_PAPER_PRC_ENVELOPE_6_ROTATED",114);
define ("PaperSizeType_PAPER_PRC_ENVELOPE_7",102);
define ("PaperSizeType_PAPER_PRC_ENVELOPE_7_ROTATED",115);
define ("PaperSizeType_PAPER_PRC_ENVELOPE_8",103);
define ("PaperSizeType_PAPER_PRC_ENVELOPE_8_ROTATED",116);
define ("PaperSizeType_PAPER_PRC_ENVELOPE_9",104);
define ("PaperSizeType_PAPER_PRC_ENVELOPE_9_ROTATED",117);
define ("PaperSizeType_PAPER_QUARTO",15);
define ("PaperSizeType_PAPER_STATEMENT",6);
define ("PaperSizeType_PAPER_SUPER_A",57);
define ("PaperSizeType_PAPER_SUPER_B",58);
define ("PaperSizeType_PAPER_TABLOID",3);
define ("PaperSizeType_PAPER_TABLOID_EXTRA",52);
define ("ParameterType_ARRAY",2);
define ("ParameterType_REFERENCE",0);
define ("ParameterType_VALUE",1);
define ("PasteType_ALL",0);
define ("PasteType_ALL_EXCEPT_BORDERS",1);
define ("PasteType_COLUMN_WIDTHS",2);
define ("PasteType_COMMENTS",3);
define ("PasteType_FORMATS",4);
define ("PasteType_FORMULAS",5);
define ("PasteType_FORMULAS_AND_NUMBER_FORMATS",6);
define ("PasteType_VALIDATION",7);
define ("PasteType_VALUES",8);
define ("PasteType_VALUES_AND_NUMBER_FORMATS",9);
define ("PdfCompliance_NONE",0);
define ("PdfCompliance_PDF_A_1_B",1);
define ("PdfCompressionCore_FLATE",3);
define ("PdfCompressionCore_LZW",2);
define ("PdfCompressionCore_NONE",0);
define ("PdfCompressionCore_RLE",1);
define ("PivotConditionFormatRuleType_ALL",1);
define ("PivotConditionFormatRuleType_COLUMN",3);
define ("PivotConditionFormatRuleType_NONE",0);
define ("PivotConditionFormatRuleType_ROW",2);
define ("PivotConditionFormatScopeType_DATA",0);
define ("PivotConditionFormatScopeType_FIELD",1);
define ("PivotConditionFormatScopeType_SELECTION",2);
define ("PivotFieldDataDisplayFormat_DIFFERENCE_FROM",1);
define ("PivotFieldDataDisplayFormat_INDEX",8);
define ("PivotFieldDataDisplayFormat_NORMAL",0);
define ("PivotFieldDataDisplayFormat_PERCENTAGE_DIFFERENCE_FROM",3);
define ("PivotFieldDataDisplayFormat_PERCENTAGE_OF",2);
define ("PivotFieldDataDisplayFormat_PERCENTAGE_OF_COLUMN",6);
define ("PivotFieldDataDisplayFormat_PERCENTAGE_OF_PARENT_COLUMN_TOTAL",10);
define ("PivotFieldDataDisplayFormat_PERCENTAGE_OF_PARENT_ROW_TOTAL",9);
define ("PivotFieldDataDisplayFormat_PERCENTAGE_OF_PARENT_TOTAL",11);
define ("PivotFieldDataDisplayFormat_PERCENTAGE_OF_ROW",5);
define ("PivotFieldDataDisplayFormat_PERCENTAGE_OF_RUNNING_TOTAL_IN",12);
define ("PivotFieldDataDisplayFormat_PERCENTAGE_OF_TOTAL",7);
define ("PivotFieldDataDisplayFormat_RANK_LARGEST_TO_SMALLEST",14);
define ("PivotFieldDataDisplayFormat_RANK_SMALLEST_TO_LARGEST",13);
define ("PivotFieldDataDisplayFormat_RUNNING_TOTAL_IN",4);
define ("PivotFieldSubtotalType_AUTOMATIC",1);
define ("PivotFieldSubtotalType_AVERAGE",8);
define ("PivotFieldSubtotalType_COUNT",4);
define ("PivotFieldSubtotalType_COUNT_NUMS",128);
define ("PivotFieldSubtotalType_MAX",16);
define ("PivotFieldSubtotalType_MIN",32);
define ("PivotFieldSubtotalType_NONE",0);
define ("PivotFieldSubtotalType_PRODUCT",64);
define ("PivotFieldSubtotalType_STDEV",256);
define ("PivotFieldSubtotalType_STDEVP",512);
define ("PivotFieldSubtotalType_SUM",2);
define ("PivotFieldSubtotalType_VAR",1024);
define ("PivotFieldSubtotalType_VARP",2048);
define ("PivotFieldType_COLUMN",2);
define ("PivotFieldType_DATA",8);
define ("PivotFieldType_PAGE",4);
define ("PivotFieldType_ROW",1);
define ("PivotFieldType_UNDEFINED",0);
define ("PivotFilterType_CAPTION_BEGINS_WITH",0);
define ("PivotFilterType_CAPTION_BETWEEN",1);
define ("PivotFilterType_CAPTION_CONTAINS",2);
define ("PivotFilterType_CAPTION_ENDS_WITH",3);
define ("PivotFilterType_CAPTION_EQUAL",4);
define ("PivotFilterType_CAPTION_GREATER_THAN",5);
define ("PivotFilterType_CAPTION_GREATER_THAN_OR_EQUAL",6);
define ("PivotFilterType_CAPTION_LESS_THAN",7);
define ("PivotFilterType_CAPTION_LESS_THAN_OR_EQUAL",8);
define ("PivotFilterType_CAPTION_NOT_BEGINS_WITH",9);
define ("PivotFilterType_CAPTION_NOT_BETWEEN",10);
define ("PivotFilterType_CAPTION_NOT_CONTAINS",11);
define ("PivotFilterType_CAPTION_NOT_ENDS_WITH",12);
define ("PivotFilterType_CAPTION_NOT_EQUAL",13);
define ("PivotFilterType_COUNT",14);
define ("PivotFilterType_DATE_BETWEEN",15);
define ("PivotFilterType_DATE_EQUAL",16);
define ("PivotFilterType_DATE_NEWER_THAN",17);
define ("PivotFilterType_DATE_NEWER_THAN_OR_EQUAL",18);
define ("PivotFilterType_DATE_NOT_BETWEEN",19);
define ("PivotFilterType_DATE_NOT_EQUAL",20);
define ("PivotFilterType_DATE_OLDER_THAN",21);
define ("PivotFilterType_DATE_OLDER_THAN_OR_EQUAL",22);
define ("PivotFilterType_LAST_MONTH",23);
define ("PivotFilterType_LAST_QUARTER",24);
define ("PivotFilterType_LAST_WEEK",25);
define ("PivotFilterType_LAST_YEAR",26);
define ("PivotFilterType_M_1",27);
define ("PivotFilterType_M_10",36);
define ("PivotFilterType_M_11",37);
define ("PivotFilterType_M_12",38);
define ("PivotFilterType_M_2",28);
define ("PivotFilterType_M_3",29);
define ("PivotFilterType_M_4",30);
define ("PivotFilterType_M_5",31);
define ("PivotFilterType_M_6",32);
define ("PivotFilterType_M_7",33);
define ("PivotFilterType_M_8",34);
define ("PivotFilterType_M_9",35);
define ("PivotFilterType_NEXT_MONTH",39);
define ("PivotFilterType_NEXT_QUARTER",40);
define ("PivotFilterType_NEXT_WEEK",41);
define ("PivotFilterType_NEXT_YEAR",42);
define ("PivotFilterType_PERCENT",43);
define ("PivotFilterType_Q_1",44);
define ("PivotFilterType_Q_2",45);
define ("PivotFilterType_Q_3",46);
define ("PivotFilterType_Q_4",47);
define ("PivotFilterType_SUM",48);
define ("PivotFilterType_THIS_MONTH",49);
define ("PivotFilterType_THIS_QUARTER",50);
define ("PivotFilterType_THIS_WEEK",51);
define ("PivotFilterType_THIS_YEAR",52);
define ("PivotFilterType_TODAY",53);
define ("PivotFilterType_TOMORROW",54);
define ("PivotFilterType_UNKNOWN",55);
define ("PivotFilterType_VALUE_BETWEEN",56);
define ("PivotFilterType_VALUE_EQUAL",57);
define ("PivotFilterType_VALUE_GREATER_THAN",58);
define ("PivotFilterType_VALUE_GREATER_THAN_OR_EQUAL",59);
define ("PivotFilterType_VALUE_LESS_THAN",60);
define ("PivotFilterType_VALUE_LESS_THAN_OR_EQUAL",61);
define ("PivotFilterType_VALUE_NOT_BETWEEN",62);
define ("PivotFilterType_VALUE_NOT_EQUAL",63);
define ("PivotFilterType_YEAR_TO_DATE",64);
define ("PivotFilterType_YESTERDAY",65);
define ("PivotGroupByType_DAYS",4);
define ("PivotGroupByType_HOURS",3);
define ("PivotGroupByType_MINUTES",2);
define ("PivotGroupByType_MONTHS",5);
define ("PivotGroupByType_QUARTERS",6);
define ("PivotGroupByType_RANGE_OF_VALUES",0);
define ("PivotGroupByType_SECONDS",1);
define ("PivotGroupByType_YEARS",7);
define ("PivotItemPosition_ALL",32765);
define ("PivotItemPosition_NEXT",32764);
define ("PivotItemPosition_PREVIOUS",32763);
define ("PivotMissingItemLimitType_AUTOMATIC",0);
define ("PivotMissingItemLimitType_MAX",1);
define ("PivotMissingItemLimitType_NONE",2);
define ("PivotTableAutoFormatType_CLASSIC",1);
define ("PivotTableAutoFormatType_NONE",0);
define ("PivotTableAutoFormatType_REPORT_1",2);
define ("PivotTableAutoFormatType_REPORT_10",11);
define ("PivotTableAutoFormatType_REPORT_2",3);
define ("PivotTableAutoFormatType_REPORT_3",4);
define ("PivotTableAutoFormatType_REPORT_4",5);
define ("PivotTableAutoFormatType_REPORT_5",6);
define ("PivotTableAutoFormatType_REPORT_6",7);
define ("PivotTableAutoFormatType_REPORT_7",8);
define ("PivotTableAutoFormatType_REPORT_8",9);
define ("PivotTableAutoFormatType_REPORT_9",10);
define ("PivotTableAutoFormatType_TABLE_1",12);
define ("PivotTableAutoFormatType_TABLE_10",21);
define ("PivotTableAutoFormatType_TABLE_2",13);
define ("PivotTableAutoFormatType_TABLE_3",14);
define ("PivotTableAutoFormatType_TABLE_4",15);
define ("PivotTableAutoFormatType_TABLE_5",16);
define ("PivotTableAutoFormatType_TABLE_6",17);
define ("PivotTableAutoFormatType_TABLE_7",18);
define ("PivotTableAutoFormatType_TABLE_8",19);
define ("PivotTableAutoFormatType_TABLE_9",20);
define ("PivotTableSourceType_CONSILIDATION",4);
define ("PivotTableSourceType_EXTERNAL",2);
define ("PivotTableSourceType_LIST_DATABASE",1);
define ("PivotTableSourceType_PIVOT_TABLE",8);
define ("PivotTableStyleType_CUSTOM",85);
define ("PivotTableStyleType_NONE",0);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_1",57);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_10",66);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_11",67);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_12",68);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_13",69);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_14",70);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_15",71);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_16",72);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_17",73);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_18",74);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_19",75);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_2",58);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_20",76);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_21",77);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_22",78);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_23",79);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_24",80);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_25",81);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_26",82);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_27",83);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_28",84);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_3",59);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_4",60);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_5",61);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_6",62);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_7",63);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_8",64);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_DARK_9",65);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_1",1);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_10",10);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_11",11);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_12",12);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_13",13);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_14",14);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_15",15);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_16",16);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_17",17);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_18",18);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_19",19);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_2",2);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_20",20);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_21",21);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_22",22);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_23",23);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_24",24);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_25",25);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_26",26);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_27",27);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_28",28);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_3",3);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_4",4);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_5",5);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_6",6);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_7",7);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_8",8);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_LIGHT_9",9);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_1",29);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_10",38);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_11",39);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_12",40);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_13",41);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_14",42);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_15",43);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_16",44);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_17",45);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_18",46);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_19",47);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_2",30);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_20",48);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_21",49);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_22",50);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_23",51);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_24",52);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_25",53);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_26",54);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_27",55);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_28",56);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_3",31);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_4",32);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_5",33);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_6",34);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_7",35);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_8",36);
define ("PivotTableStyleType_PIVOT_TABLE_STYLE_MEDIUM_9",37);
define ("PlacementType_FREE_FLOATING",0);
define ("PlacementType_MOVE",1);
define ("PlacementType_MOVE_AND_SIZE",2);
define ("PlotEmptyCellsType_INTERPOLATED",2);
define ("PlotEmptyCellsType_NOT_PLOTTED",0);
define ("PlotEmptyCellsType_ZERO",1);
define ("PresetMaterialType_CLEAR",0);
define ("PresetMaterialType_DARK_EDGE",1);
define ("PresetMaterialType_FLAT",2);
define ("PresetMaterialType_LEGACY_MATTE",3);
define ("PresetMaterialType_LEGACY_METAL",4);
define ("PresetMaterialType_LEGACY_PLASTIC",5);
define ("PresetMaterialType_LEGACY_WIREFRAME",6);
define ("PresetMaterialType_MATTE",7);
define ("PresetMaterialType_METAL",8);
define ("PresetMaterialType_PLASTIC",9);
define ("PresetMaterialType_POWDER",10);
define ("PresetMaterialType_SOFT_EDGE",11);
define ("PresetMaterialType_SOFT_METAL",12);
define ("PresetMaterialType_TRANSLUCENT_POWDER",13);
define ("PresetMaterialType_WARM_MATTE",14);
define ("PresetShadowType_BELOW",22);
define ("PresetShadowType_CUSTOM",1);
define ("PresetShadowType_INSIDE_BOTTOM",18);
define ("PresetShadowType_INSIDE_CENTER",15);
define ("PresetShadowType_INSIDE_DIAGONAL_BOTTOM_LEFT",17);
define ("PresetShadowType_INSIDE_DIAGONAL_BOTTOM_RIGHT",19);
define ("PresetShadowType_INSIDE_DIAGONAL_TOP_LEFT",11);
define ("PresetShadowType_INSIDE_DIAGONAL_TOP_RIGHT",13);
define ("PresetShadowType_INSIDE_LEFT",14);
define ("PresetShadowType_INSIDE_RIGHT",16);
define ("PresetShadowType_INSIDE_TOP",12);
define ("PresetShadowType_NO_SHADOW",0);
define ("PresetShadowType_OFFSET_BOTTOM",3);
define ("PresetShadowType_OFFSET_CENTER",6);
define ("PresetShadowType_OFFSET_DIAGONAL_BOTTOM_LEFT",4);
define ("PresetShadowType_OFFSET_DIAGONAL_BOTTOM_RIGHT",2);
define ("PresetShadowType_OFFSET_DIAGONAL_TOP_LEFT",10);
define ("PresetShadowType_OFFSET_DIAGONAL_TOP_RIGHT",8);
define ("PresetShadowType_OFFSET_LEFT",7);
define ("PresetShadowType_OFFSET_RIGHT",5);
define ("PresetShadowType_OFFSET_TOP",9);
define ("PresetShadowType_PERSPECTIVE_DIAGONAL_LOWER_LEFT",23);
define ("PresetShadowType_PERSPECTIVE_DIAGONAL_LOWER_RIGHT",24);
define ("PresetShadowType_PERSPECTIVE_DIAGONAL_UPPER_LEFT",20);
define ("PresetShadowType_PERSPECTIVE_DIAGONAL_UPPER_RIGHT",21);
define ("PrintCommentsType_PRINT_IN_PLACE",0);
define ("PrintCommentsType_PRINT_NO_COMMENTS",1);
define ("PrintCommentsType_PRINT_SHEET_END",2);
define ("PrintErrorsType_PRINT_ERRORS_BLANK",0);
define ("PrintErrorsType_PRINT_ERRORS_DASH",1);
define ("PrintErrorsType_PRINT_ERRORS_DISPLAYED",2);
define ("PrintErrorsType_PRINT_ERRORS_NA",3);
define ("PrintingPageType_DEFAULT",0);
define ("PrintingPageType_IGNORE_BLANK",1);
define ("PrintingPageType_IGNORE_STYLE",2);
define ("PrintOrderType_DOWN_THEN_OVER",0);
define ("PrintOrderType_OVER_THEN_DOWN",1);
define ("PrintSizeType_CUSTOM",2);
define ("PrintSizeType_FIT",1);
define ("PrintSizeType_FULL",0);
define ("PropertyType_BLOB",5);
define ("PropertyType_BOOLEAN",0);
define ("PropertyType_DATE_TIME",1);
define ("PropertyType_DOUBLE",2);
define ("PropertyType_NUMBER",3);
define ("PropertyType_STRING",4);
define ("ProtectionType_ALL",0);
define ("ProtectionType_CONTENTS",1);
define ("ProtectionType_NONE",6);
define ("ProtectionType_OBJECTS",2);
define ("ProtectionType_SCENARIOS",3);
define ("ProtectionType_STRUCTURE",4);
define ("ProtectionType_WINDOWS",5);
define ("ReConnectionMethodType_ALWAYS",2);
define ("ReConnectionMethodType_NEVER",3);
define ("ReConnectionMethodType_REQUIRED",1);
define ("RectangleAlignmentType_BOTTOM",0);
define ("RectangleAlignmentType_BOTTOM_LEFT",1);
define ("RectangleAlignmentType_BOTTOM_RIGHT",2);
define ("RectangleAlignmentType_CENTER",3);
define ("RectangleAlignmentType_LEFT",4);
define ("RectangleAlignmentType_RIGHT",5);
define ("RectangleAlignmentType_TOP",6);
define ("RectangleAlignmentType_TOP_LEFT",7);
define ("RectangleAlignmentType_TOP_RIGHT",8);
define ("SaveFormat_AUTO",0);
define ("SaveFormat_CSV",1);
define ("SaveFormat_DIF",30);
define ("SaveFormat_EXCEL_97_TO_2003",5);
define ("SaveFormat_HTML",12);
define ("SaveFormat_M_HTML",17);
define ("SaveFormat_ODS",14);
define ("SaveFormat_PDF",13);
define ("SaveFormat_SPREADSHEET_ML",15);
define ("SaveFormat_SVG",22);
define ("SaveFormat_TAB_DELIMITED",11);
define ("SaveFormat_TIFF",21);
define ("SaveFormat_UNKNOWN",255);
define ("SaveFormat_XLAM",10);
define ("SaveFormat_XLSB",16);
define ("SaveFormat_XLSM",7);
define ("SaveFormat_XLSX",6);
define ("SaveFormat_XLTM",9);
define ("SaveFormat_XLTX",8);
define ("SaveFormat_XPS",20);
define ("SelectionType_EXTEND",2);
define ("SelectionType_MULTI",1);
define ("SelectionType_SINGLE",0);
define ("ShapeLockType_ADJUST_HANDLES",1);
define ("ShapeLockType_ARROWHEAD",12);
define ("ShapeLockType_ASPECT_RATIO",7);
define ("ShapeLockType_CROP",4);
define ("ShapeLockType_GROUP",0);
define ("ShapeLockType_MOVE",6);
define ("ShapeLockType_POINTS",3);
define ("ShapeLockType_RESIZE",10);
define ("ShapeLockType_ROTATION",8);
define ("ShapeLockType_SELECTION",5);
define ("ShapeLockType_SHAPE_TYPE",11);
define ("ShapeLockType_TEXT",2);
define ("ShapeLockType_UNGROUP",9);
define ("ShapePathType_ARC_TO",6);
define ("ShapePathType_CLOSE",3);
define ("ShapePathType_CUBIC_BEZIER_CURVE_TO",1);
define ("ShapePathType_END",4);
define ("ShapePathType_ESCAPE",5);
define ("ShapePathType_LINE_TO",0);
define ("ShapePathType_MOVE_TO",2);
define ("ShapePathType_UNKNOWN",7);
define ("SheetType_BIFF_4_MACRO",3);
define ("SheetType_CHART",2);
define ("SheetType_OTHER",4);
define ("SheetType_VB",0);
define ("SheetType_WORKSHEET",1);
define ("ShiftType_DOWN",0);
define ("ShiftType_LEFT",1);
define ("ShiftType_NONE",2);
define ("ShiftType_RIGHT",3);
define ("ShiftType_UP",4);
define ("SmartTagShowType_ALL",0);
define ("SmartTagShowType_NO_SMART_TAG_INDICATOR",1);
define ("SmartTagShowType_NONE",2);
define ("SortOrder_ASCENDING",0);
define ("SortOrder_DESCENDING",1);
define ("SparklineAxisMinMaxType_AUTO_INDIVIDUAL",0);
define ("SparklineAxisMinMaxType_CUSTOM",2);
define ("SparklineAxisMinMaxType_GROUP",1);
define ("SparklinePresetStyleType_CUSTOM",36);
define ("SparklinePresetStyleType_STYLE_1",0);
define ("SparklinePresetStyleType_STYLE_10",9);
define ("SparklinePresetStyleType_STYLE_11",10);
define ("SparklinePresetStyleType_STYLE_12",11);
define ("SparklinePresetStyleType_STYLE_13",12);
define ("SparklinePresetStyleType_STYLE_14",13);
define ("SparklinePresetStyleType_STYLE_15",14);
define ("SparklinePresetStyleType_STYLE_16",15);
define ("SparklinePresetStyleType_STYLE_17",16);
define ("SparklinePresetStyleType_STYLE_18",17);
define ("SparklinePresetStyleType_STYLE_19",18);
define ("SparklinePresetStyleType_STYLE_2",1);
define ("SparklinePresetStyleType_STYLE_20",19);
define ("SparklinePresetStyleType_STYLE_21",20);
define ("SparklinePresetStyleType_STYLE_22",21);
define ("SparklinePresetStyleType_STYLE_23",22);
define ("SparklinePresetStyleType_STYLE_24",23);
define ("SparklinePresetStyleType_STYLE_25",24);
define ("SparklinePresetStyleType_STYLE_26",25);
define ("SparklinePresetStyleType_STYLE_27",26);
define ("SparklinePresetStyleType_STYLE_28",27);
define ("SparklinePresetStyleType_STYLE_29",28);
define ("SparklinePresetStyleType_STYLE_3",2);
define ("SparklinePresetStyleType_STYLE_30",29);
define ("SparklinePresetStyleType_STYLE_31",30);
define ("SparklinePresetStyleType_STYLE_32",31);
define ("SparklinePresetStyleType_STYLE_33",32);
define ("SparklinePresetStyleType_STYLE_34",33);
define ("SparklinePresetStyleType_STYLE_35",34);
define ("SparklinePresetStyleType_STYLE_36",35);
define ("SparklinePresetStyleType_STYLE_4",3);
define ("SparklinePresetStyleType_STYLE_5",4);
define ("SparklinePresetStyleType_STYLE_6",5);
define ("SparklinePresetStyleType_STYLE_7",6);
define ("SparklinePresetStyleType_STYLE_8",7);
define ("SparklinePresetStyleType_STYLE_9",8);
define ("SparklineType_COLUMN",1);
define ("SparklineType_LINE",0);
define ("SparklineType_STACKED",2);
define ("SqlDataType_SQL_BIG_INT",-5);
define ("SqlDataType_SQL_BINARY",-2);
define ("SqlDataType_SQL_BIT",-7);
define ("SqlDataType_SQL_CHAR",1);
define ("SqlDataType_SQL_DECIMAL",3);
define ("SqlDataType_SQL_DOUBLE",8);
define ("SqlDataType_SQL_FLOAT",6);
define ("SqlDataType_SQL_GUID",-11);
define ("SqlDataType_SQL_INTEGER",4);
define ("SqlDataType_SQL_INTERVAL_DAY",103);
define ("SqlDataType_SQL_INTERVAL_DAY_TO_HOUR",108);
define ("SqlDataType_SQL_INTERVAL_DAY_TO_MINUTE",109);
define ("SqlDataType_SQL_INTERVAL_DAY_TO_SECOND",110);
define ("SqlDataType_SQL_INTERVAL_HOUR",104);
define ("SqlDataType_SQL_INTERVAL_HOUR_TO_MINUTE",111);
define ("SqlDataType_SQL_INTERVAL_HOUR_TO_SECOND",112);
define ("SqlDataType_SQL_INTERVAL_MINUTE",105);
define ("SqlDataType_SQL_INTERVAL_MINUTE_TO_SECOND",113);
define ("SqlDataType_SQL_INTERVAL_MONTH",102);
define ("SqlDataType_SQL_INTERVAL_SECOND",106);
define ("SqlDataType_SQL_INTERVAL_YEAR",101);
define ("SqlDataType_SQL_INTERVAL_YEAR_TO_MONTH",107);
define ("SqlDataType_SQL_LONG_VAR_BINARY",-4);
define ("SqlDataType_SQL_LONG_VAR_CHAR",-1);
define ("SqlDataType_SQL_NUMERIC",2);
define ("SqlDataType_SQL_REAL",7);
define ("SqlDataType_SQL_SIGNED_OFFSET",-20);
define ("SqlDataType_SQL_SMALL_INT",5);
define ("SqlDataType_SQL_TINY_INT",-6);
define ("SqlDataType_SQL_TYPE_DATE",9);
define ("SqlDataType_SQL_TYPE_TIME",10);
define ("SqlDataType_SQL_TYPE_TIMESTAMP",11);
define ("SqlDataType_SQL_UNKNOWN_TYPE",0);
define ("SqlDataType_SQL_UNSIGNED_OFFSET",-22);
define ("SqlDataType_SQL_VAR_BINARY",-3);
define ("SqlDataType_SQL_VAR_CHAR",12);
define ("SqlDataType_SQL_W_CHAR",-8);
define ("SqlDataType_SQL_W_LONG_VARCHAR",-10);
define ("SqlDataType_SQL_W_VARCHAR",-9);
define ("StrokeType_CAPLESS",2);
define ("StrokeType_NO_STROKE",0);
define ("StrokeType_NORMAL",1);
define ("StyleModifyFlag_ALIGNMENT_SETTINGS",38);
define ("StyleModifyFlag_ALL",0);
define ("StyleModifyFlag_BACKGROUND_COLOR",35);
define ("StyleModifyFlag_BORDERS",1);
define ("StyleModifyFlag_BOTTOM_BORDER",5);
define ("StyleModifyFlag_CELL_SHADING",32);
define ("StyleModifyFlag_DIAGONAL",8);
define ("StyleModifyFlag_DIAGONAL_DOWN_BORDER",9);
define ("StyleModifyFlag_DIAGONAL_UP_BORDER",10);
define ("StyleModifyFlag_FONT",11);
define ("StyleModifyFlag_FONT_CHARSET",15);
define ("StyleModifyFlag_FONT_COLOR",16);
define ("StyleModifyFlag_FONT_CONDENSE",41);
define ("StyleModifyFlag_FONT_EXTEND",42);
define ("StyleModifyFlag_FONT_FAMILY",14);
define ("StyleModifyFlag_FONT_ITALIC",18);
define ("StyleModifyFlag_FONT_NAME",13);
define ("StyleModifyFlag_FONT_SCHEME",39);
define ("StyleModifyFlag_FONT_SCRIPT",23);
define ("StyleModifyFlag_FONT_SHADOW",40);
define ("StyleModifyFlag_FONT_SIZE",12);
define ("StyleModifyFlag_FONT_STRIKE",20);
define ("StyleModifyFlag_FONT_SUBSCRIPT",21);
define ("StyleModifyFlag_FONT_SUPERSCRIPT",22);
define ("StyleModifyFlag_FONT_UNDERLINE",19);
define ("StyleModifyFlag_FONT_WEIGHT",17);
define ("StyleModifyFlag_FOREGROUND_COLOR",34);
define ("StyleModifyFlag_HIDE_FORMULA",37);
define ("StyleModifyFlag_HORIZONTAL_ALIGNMENT",25);
define ("StyleModifyFlag_HORIZONTAL_BORDER",6);
define ("StyleModifyFlag_INDENT",27);
define ("StyleModifyFlag_LEFT_BORDER",2);
define ("StyleModifyFlag_LOCKED",36);
define ("StyleModifyFlag_NUMBER_FORMAT",24);
define ("StyleModifyFlag_PATTERN",33);
define ("StyleModifyFlag_RIGHT_BORDER",3);
define ("StyleModifyFlag_ROTATION",28);
define ("StyleModifyFlag_SHRINK_TO_FIT",30);
define ("StyleModifyFlag_TEXT_DIRECTION",31);
define ("StyleModifyFlag_TOP_BORDER",4);
define ("StyleModifyFlag_VERTICAL_ALIGNMENT",26);
define ("StyleModifyFlag_VERTICAL_BORDER",7);
define ("StyleModifyFlag_WRAP_TEXT",29);
define ("TableStyleElementType_BLANK_ROW",18);
define ("TableStyleElementType_FIRST_COLUMN",8);
define ("TableStyleElementType_FIRST_COLUMN_STRIPE",3);
define ("TableStyleElementType_FIRST_COLUMN_SUBHEADING",22);
define ("TableStyleElementType_FIRST_HEADER_CELL",11);
define ("TableStyleElementType_FIRST_ROW_STRIPE",5);
define ("TableStyleElementType_FIRST_ROW_SUBHEADING",25);
define ("TableStyleElementType_FIRST_SUBTOTAL_COLUMN",15);
define ("TableStyleElementType_FIRST_SUBTOTAL_ROW",19);
define ("TableStyleElementType_FIRST_TOTAL_CELL",13);
define ("TableStyleElementType_GRAND_TOTAL_COLUMN",28);
define ("TableStyleElementType_GRAND_TOTAL_ROW",29);
define ("TableStyleElementType_HEADER_ROW",9);
define ("TableStyleElementType_LAST_COLUMN",7);
define ("TableStyleElementType_LAST_HEADER_CELL",12);
define ("TableStyleElementType_LAST_TOTAL_CELL",14);
define ("TableStyleElementType_PAGE_FIELD_LABELS",1);
define ("TableStyleElementType_PAGE_FIELD_VALUES",2);
define ("TableStyleElementType_SECOND_COLUMN_STRIPE",4);
define ("TableStyleElementType_SECOND_COLUMN_SUBHEADING",23);
define ("TableStyleElementType_SECOND_ROW_STRIPE",6);
define ("TableStyleElementType_SECOND_ROW_SUBHEADING",26);
define ("TableStyleElementType_SECOND_SUBTOTAL_COLUMN",16);
define ("TableStyleElementType_SECOND_SUBTOTAL_ROW",20);
define ("TableStyleElementType_THIRD_COLUMN_SUBHEADING",24);
define ("TableStyleElementType_THIRD_ROW_SUBHEADING",27);
define ("TableStyleElementType_THIRD_SUBTOTAL_COLUMN",17);
define ("TableStyleElementType_THIRD_SUBTOTAL_ROW",21);
define ("TableStyleElementType_TOTAL_ROW",10);
define ("TableStyleElementType_WHOLE_TABLE",0);
define ("TableStyleType_CUSTOM",61);
define ("TableStyleType_NONE",0);
define ("TableStyleType_TABLE_STYLE_DARK_1",50);
define ("TableStyleType_TABLE_STYLE_DARK_10",59);
define ("TableStyleType_TABLE_STYLE_DARK_11",60);
define ("TableStyleType_TABLE_STYLE_DARK_2",51);
define ("TableStyleType_TABLE_STYLE_DARK_3",52);
define ("TableStyleType_TABLE_STYLE_DARK_4",53);
define ("TableStyleType_TABLE_STYLE_DARK_5",54);
define ("TableStyleType_TABLE_STYLE_DARK_6",55);
define ("TableStyleType_TABLE_STYLE_DARK_7",56);
define ("TableStyleType_TABLE_STYLE_DARK_8",57);
define ("TableStyleType_TABLE_STYLE_DARK_9",58);
define ("TableStyleType_TABLE_STYLE_LIGHT_1",1);
define ("TableStyleType_TABLE_STYLE_LIGHT_10",10);
define ("TableStyleType_TABLE_STYLE_LIGHT_11",11);
define ("TableStyleType_TABLE_STYLE_LIGHT_12",12);
define ("TableStyleType_TABLE_STYLE_LIGHT_13",13);
define ("TableStyleType_TABLE_STYLE_LIGHT_14",14);
define ("TableStyleType_TABLE_STYLE_LIGHT_15",15);
define ("TableStyleType_TABLE_STYLE_LIGHT_16",16);
define ("TableStyleType_TABLE_STYLE_LIGHT_17",17);
define ("TableStyleType_TABLE_STYLE_LIGHT_18",18);
define ("TableStyleType_TABLE_STYLE_LIGHT_19",19);
define ("TableStyleType_TABLE_STYLE_LIGHT_2",2);
define ("TableStyleType_TABLE_STYLE_LIGHT_20",20);
define ("TableStyleType_TABLE_STYLE_LIGHT_21",21);
define ("TableStyleType_TABLE_STYLE_LIGHT_3",3);
define ("TableStyleType_TABLE_STYLE_LIGHT_4",4);
define ("TableStyleType_TABLE_STYLE_LIGHT_5",5);
define ("TableStyleType_TABLE_STYLE_LIGHT_6",6);
define ("TableStyleType_TABLE_STYLE_LIGHT_7",7);
define ("TableStyleType_TABLE_STYLE_LIGHT_8",8);
define ("TableStyleType_TABLE_STYLE_LIGHT_9",9);
define ("TableStyleType_TABLE_STYLE_MEDIUM_1",22);
define ("TableStyleType_TABLE_STYLE_MEDIUM_10",31);
define ("TableStyleType_TABLE_STYLE_MEDIUM_11",32);
define ("TableStyleType_TABLE_STYLE_MEDIUM_12",33);
define ("TableStyleType_TABLE_STYLE_MEDIUM_13",34);
define ("TableStyleType_TABLE_STYLE_MEDIUM_14",35);
define ("TableStyleType_TABLE_STYLE_MEDIUM_15",36);
define ("TableStyleType_TABLE_STYLE_MEDIUM_16",37);
define ("TableStyleType_TABLE_STYLE_MEDIUM_17",38);
define ("TableStyleType_TABLE_STYLE_MEDIUM_18",39);
define ("TableStyleType_TABLE_STYLE_MEDIUM_19",40);
define ("TableStyleType_TABLE_STYLE_MEDIUM_2",23);
define ("TableStyleType_TABLE_STYLE_MEDIUM_20",41);
define ("TableStyleType_TABLE_STYLE_MEDIUM_21",42);
define ("TableStyleType_TABLE_STYLE_MEDIUM_22",43);
define ("TableStyleType_TABLE_STYLE_MEDIUM_23",44);
define ("TableStyleType_TABLE_STYLE_MEDIUM_24",45);
define ("TableStyleType_TABLE_STYLE_MEDIUM_25",46);
define ("TableStyleType_TABLE_STYLE_MEDIUM_26",47);
define ("TableStyleType_TABLE_STYLE_MEDIUM_27",48);
define ("TableStyleType_TABLE_STYLE_MEDIUM_28",49);
define ("TableStyleType_TABLE_STYLE_MEDIUM_3",24);
define ("TableStyleType_TABLE_STYLE_MEDIUM_4",25);
define ("TableStyleType_TABLE_STYLE_MEDIUM_5",26);
define ("TableStyleType_TABLE_STYLE_MEDIUM_6",27);
define ("TableStyleType_TABLE_STYLE_MEDIUM_7",28);
define ("TableStyleType_TABLE_STYLE_MEDIUM_8",29);
define ("TableStyleType_TABLE_STYLE_MEDIUM_9",30);
define ("TextAlignmentType_BOTTOM",0);
define ("TextAlignmentType_CENTER",1);
define ("TextAlignmentType_CENTER_ACROSS",2);
define ("TextAlignmentType_DISTRIBUTED",3);
define ("TextAlignmentType_FILL",4);
define ("TextAlignmentType_GENERAL",5);
define ("TextAlignmentType_JUSTIFY",6);
define ("TextAlignmentType_LEFT",7);
define ("TextAlignmentType_RIGHT",8);
define ("TextAlignmentType_TOP",9);
define ("TextCapsType_ALL",1);
define ("TextCapsType_NONE",0);
define ("TextCapsType_SMALL",2);
define ("TextDirectionType_CONTEXT",0);
define ("TextDirectionType_LEFT_TO_RIGHT",1);
define ("TextDirectionType_RIGHT_TO_LEFT",2);
define ("TextOrientationType_CLOCK_WISE",0);
define ("TextOrientationType_COUNTER_CLOCK_WISE",1);
define ("TextOrientationType_NO_ROTATION",2);
define ("TextOrientationType_TOP_TO_BOTTOM",3);
define ("TextOverflowType_CLIP",0);
define ("TextOverflowType_ELLIPSIS",1);
define ("TextOverflowType_OVERFLOW",2);
define ("TextStrikeType_DOUBLE",1);
define ("TextStrikeType_NONE",2);
define ("TextStrikeType_SINGLE",0);
define ("TextureType_BLUE_TISSUE_PAPER",0);
define ("TextureType_BOUQUET",1);
define ("TextureType_BROWN_MARBLE",2);
define ("TextureType_CANVAS",3);
define ("TextureType_CORK",4);
define ("TextureType_DENIM",5);
define ("TextureType_FISH_FOSSIL",6);
define ("TextureType_GRANITE",7);
define ("TextureType_GREEN_MARBLE",8);
define ("TextureType_MEDIUM_WOOD",9);
define ("TextureType_NEWSPRINT",10);
define ("TextureType_OAK",11);
define ("TextureType_PAPER_BAG",12);
define ("TextureType_PAPYRUS",13);
define ("TextureType_PARCHMENT",14);
define ("TextureType_PINK_TISSUE_PAPER",15);
define ("TextureType_PURPLE_MESH",16);
define ("TextureType_RECYCLED_PAPER",17);
define ("TextureType_SAND",18);
define ("TextureType_STATIONERY",19);
define ("TextureType_UNKNOWN",24);
define ("TextureType_WALNUT",20);
define ("TextureType_WATER_DROPLETS",21);
define ("TextureType_WHITE_MARBLE",22);
define ("TextureType_WOVEN_MAT",23);
define ("ThemeColorType_ACCENT_1",4);
define ("ThemeColorType_ACCENT_2",5);
define ("ThemeColorType_ACCENT_3",6);
define ("ThemeColorType_ACCENT_4",7);
define ("ThemeColorType_ACCENT_5",8);
define ("ThemeColorType_ACCENT_6",9);
define ("ThemeColorType_BACKGROUND_1",0);
define ("ThemeColorType_BACKGROUND_2",2);
define ("ThemeColorType_FOLLOWED_HYPERLINK",11);
define ("ThemeColorType_HYPERLINK",10);
define ("ThemeColorType_TEXT_1",1);
define ("ThemeColorType_TEXT_2",3);
define ("TickLabelPositionType_HIGH",0);
define ("TickLabelPositionType_LOW",1);
define ("TickLabelPositionType_NEXT_TO_AXIS",2);
define ("TickLabelPositionType_NONE",3);
define ("TickMarkType_CROSS",0);
define ("TickMarkType_INSIDE",1);
define ("TickMarkType_NONE",2);
define ("TickMarkType_OUTSIDE",3);
define ("TiffCompression_COMPRESSION_CCITT_3",3);
define ("TiffCompression_COMPRESSION_CCITT_4",4);
define ("TiffCompression_COMPRESSION_LZW",2);
define ("TiffCompression_COMPRESSION_NONE",0);
define ("TiffCompression_COMPRESSION_RLE",1);
define ("TiffPhotometricInterpretation_BLACKISZERO",1);
define ("TiffPhotometricInterpretation_WHITEISZERO",0);
define ("TimePeriodType_LAST_7_DAYS",3);
define ("TimePeriodType_LAST_MONTH",5);
define ("TimePeriodType_LAST_WEEK",8);
define ("TimePeriodType_NEXT_MONTH",6);
define ("TimePeriodType_NEXT_WEEK",9);
define ("TimePeriodType_THIS_MONTH",4);
define ("TimePeriodType_THIS_WEEK",7);
define ("TimePeriodType_TODAY",0);
define ("TimePeriodType_TOMORROW",2);
define ("TimePeriodType_YESTERDAY",1);
define ("TimeUnit_DAYS",0);
define ("TimeUnit_MONTHS",1);
define ("TimeUnit_YEARS",2);
define ("TotalsCalculation_AVERAGE",1);
define ("TotalsCalculation_COUNT",2);
define ("TotalsCalculation_COUNT_NUMS",3);
define ("TotalsCalculation_CUSTOM",9);
define ("TotalsCalculation_MAX",4);
define ("TotalsCalculation_MIN",5);
define ("TotalsCalculation_NONE",0);
define ("TotalsCalculation_STD_DEV",7);
define ("TotalsCalculation_SUM",6);
define ("TotalsCalculation_VAR",8);
define ("TrendlineType_EXPONENTIAL",0);
define ("TrendlineType_LINEAR",1);
define ("TrendlineType_LOGARITHMIC",2);
define ("TrendlineType_MOVING_AVERAGE",3);
define ("TrendlineType_POLYNOMIAL",4);
define ("TrendlineType_POWER",5);
define ("TxtValueQuoteType_ALWAYS",1);
define ("TxtValueQuoteType_MINIMUM",2);
define ("TxtValueQuoteType_NEVER",3);
define ("TxtValueQuoteType_NORMAL",0);
define ("ValidationAlertType_INFORMATION",0);
define ("ValidationAlertType_STOP",1);
define ("ValidationAlertType_WARNING",2);
define ("ValidationType_ANY_VALUE",0);
define ("ValidationType_CUSTOM",7);
define ("ValidationType_DATE",4);
define ("ValidationType_DECIMAL",2);
define ("ValidationType_LIST",3);
define ("ValidationType_TEXT_LENGTH",6);
define ("ValidationType_TIME",5);
define ("ValidationType_WHOLE_NUMBER",1);
define ("ViewType_NORMAL_VIEW",0);
define ("ViewType_PAGE_BREAK_PREVIEW",1);
define ("ViewType_PAGE_LAYOUT_VIEW",2);
define ("VisibilityType_HIDDEN",1);
define ("VisibilityType_VERY_HIDDEN",2);
define ("VisibilityType_VISIBLE",0);
define ("WarningType_FONT_SUBSTITUTION",0);
define ("WeightType_HAIR_LINE",-1);
define ("WeightType_MEDIUM_LINE",1);
define ("WeightType_SINGLE_LINE",0);
define ("WeightType_WIDE_LINE",2);


/*
  Wrapper for java version Class [com.aspose.cells.AboveAverage]
  
 */
class AboveAverage
{
    public $m_AboveAverage;
    
    function __construct($aboveAverage)
    {
    	$this->m_AboveAverage = $aboveAverage;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.AboveAverage.getStdDev()]

      @return int
     */
    function getStdDev()
    {
        return $this->m_AboveAverage->getStdDev();
    }

    /*
      Wrapper for java version method [com.aspose.cells.AboveAverage.isAboveAverage()]

      @return boolean
     */
    function isAboveAverage()
    {
        return $this->m_AboveAverage->isAboveAverage();
    }

    /*
      Wrapper for java version method [com.aspose.cells.AboveAverage.isEqualAverage()]

      @return boolean
     */
    function isEqualAverage()
    {
        return $this->m_AboveAverage->isEqualAverage();
    }

    /*
      Wrapper for java version method [com.aspose.cells.AboveAverage.setAboveAverage(boolean)]

      @param pBoolean0  boolean
     */
    function setAboveAverage($pBoolean0)
    {
        $this->m_AboveAverage->setAboveAverage($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.AboveAverage.setEqualAverage(boolean)]

      @param pBoolean0  boolean
     */
    function setEqualAverage($pBoolean0)
    {
        $this->m_AboveAverage->setEqualAverage($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.AboveAverage.setStdDev(int)]

      @param pInt0  int
     */
    function setStdDev($pInt0)
    {
        $this->m_AboveAverage->setStdDev($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ArcShape]
  
 */
class ArcShape extends Shape
{
    public $m_ArcShape;
    
    function __construct($arcShape)
    {
    	$this->m_ArcShape = $arcShape;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ArcShape.getBeginArrowheadLength()]

      @return int
     */
    function getBeginArrowheadLength()
    {
        return $this->m_ArcShape->getBeginArrowheadLength();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ArcShape.getBeginArrowheadStyle()]

      @return int
     */
    function getBeginArrowheadStyle()
    {
        return $this->m_ArcShape->getBeginArrowheadStyle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ArcShape.getBeginArrowheadWidth()]

      @return int
     */
    function getBeginArrowheadWidth()
    {
        return $this->m_ArcShape->getBeginArrowheadWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ArcShape.getEndArrowheadLength()]

      @return int
     */
    function getEndArrowheadLength()
    {
        return $this->m_ArcShape->getEndArrowheadLength();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ArcShape.getEndArrowheadStyle()]

      @return int
     */
    function getEndArrowheadStyle()
    {
        return $this->m_ArcShape->getEndArrowheadStyle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ArcShape.getEndArrowheadWidth()]

      @return int
     */
    function getEndArrowheadWidth()
    {
        return $this->m_ArcShape->getEndArrowheadWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ArcShape.setBeginArrowheadLength(int)]

      @param pInt0  int
     */
    function setBeginArrowheadLength($pInt0)
    {
        $this->m_ArcShape->setBeginArrowheadLength($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ArcShape.setBeginArrowheadStyle(int)]

      @param pInt0  int
     */
    function setBeginArrowheadStyle($pInt0)
    {
        $this->m_ArcShape->setBeginArrowheadStyle($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ArcShape.setBeginArrowheadWidth(int)]

      @param pInt0  int
     */
    function setBeginArrowheadWidth($pInt0)
    {
        $this->m_ArcShape->setBeginArrowheadWidth($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ArcShape.setEndArrowheadLength(int)]

      @param pInt0  int
     */
    function setEndArrowheadLength($pInt0)
    {
        $this->m_ArcShape->setEndArrowheadLength($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ArcShape.setEndArrowheadStyle(int)]

      @param pInt0  int
     */
    function setEndArrowheadStyle($pInt0)
    {
        $this->m_ArcShape->setEndArrowheadStyle($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ArcShape.setEndArrowheadWidth(int)]

      @param pInt0  int
     */
    function setEndArrowheadWidth($pInt0)
    {
        $this->m_ArcShape->setEndArrowheadWidth($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.Area]
  
 */
class Area
{
    public $m_Area;
    
    function __construct($area)
    {
    	$this->m_Area = $area;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Area.getBackgroundColor()]

      @return com.aspose.cells.Color
     */
    function getBackgroundColor()
    {
        return ClassFactory::_t2($this->m_Area->getBackgroundColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Area.getFillFormat()]

      @return com.aspose.cells.FillFormat
     */
    function getFillFormat()
    {
        return ClassFactory::_t2($this->m_Area->getFillFormat());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Area.getForegroundColor()]

      @return com.aspose.cells.Color
     */
    function getForegroundColor()
    {
        return ClassFactory::_t2($this->m_Area->getForegroundColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Area.getFormatting()]

      @return int
     */
    function getFormatting()
    {
        return $this->m_Area->getFormatting();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Area.getInvertIfNegative()]

      @return boolean
     */
    function getInvertIfNegative()
    {
        return $this->m_Area->getInvertIfNegative();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Area.getTransparency()]

      @return double
     */
    function getTransparency()
    {
        return $this->m_Area->getTransparency();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Area.isAuto()]

      @return boolean
     */
    function isAuto()
    {
        return $this->m_Area->isAuto();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Area.isVisible()]

      @return boolean
     */
    function isVisible()
    {
        return $this->m_Area->isVisible();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Area.setAuto(boolean)]

      @param pBoolean0  boolean
     */
    function setAuto($pBoolean0)
    {
        $this->m_Area->setAuto($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Area.setBackgroundColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setBackgroundColor($oColor0)
    {
        $this->m_Area->setBackgroundColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Area.setForegroundColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setForegroundColor($oColor0)
    {
        $this->m_Area->setForegroundColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Area.setFormatting(int)]

      @param pInt0  int
     */
    function setFormatting($pInt0)
    {
        $this->m_Area->setFormatting($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Area.setInvertIfNegative(boolean)]

      @param pBoolean0  boolean
     */
    function setInvertIfNegative($pBoolean0)
    {
        $this->m_Area->setInvertIfNegative($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Area.setTransparency(double)]

      @param pDouble0  double
     */
    function setTransparency($pDouble0)
    {
        $this->m_Area->setTransparency($pDouble0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.AutoFilter]
  
 */
class AutoFilter
{
    public $m_AutoFilter;
    
    function __construct($autoFilter)
    {
    	$this->m_AutoFilter = $autoFilter;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.AutoFilter.addDateFilter(int, int, int, int, int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pInt4  int
      @param pInt5  int
      @param pInt6  int
      @param pInt7  int
     */
    function addDateFilter($pInt0, $pInt1, $pInt2, $pInt3, $pInt4, $pInt5, $pInt6, $pInt7)
    {
        $this->m_AutoFilter->addDateFilter($pInt0, $pInt1, $pInt2, $pInt3, $pInt4, $pInt5, $pInt6, $pInt7);
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFilter.addFillColorFilter(int, int, com.aspose.cells.CellsColor, com.aspose.cells.CellsColor)]

      @param pInt0  int
      @param pInt1  int
      @param oCellsColor2  com.aspose.cells.CellsColor
      @param oCellsColor3  com.aspose.cells.CellsColor
     */
    function addFillColorFilter($pInt0, $pInt1, $oCellsColor2, $oCellsColor3)
    {
        $this->m_AutoFilter->addFillColorFilter($pInt0, $pInt1, ClassFactory::_t1($oCellsColor2), ClassFactory::_t1($oCellsColor3));
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFilter.addFilter(int, java.lang.String)]

      @param pInt0  int
      @param oString1  String
     */
    function addFilter($pInt0, $oString1)
    {
        $this->m_AutoFilter->addFilter($pInt0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFilter.addFontColorFilter(int, com.aspose.cells.CellsColor)]

      @param pInt0  int
      @param oCellsColor1  com.aspose.cells.CellsColor
     */
    function addFontColorFilter($pInt0, $oCellsColor1)
    {
        $this->m_AutoFilter->addFontColorFilter($pInt0, ClassFactory::_t1($oCellsColor1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFilter.addIconFilter(int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
     */
    function addIconFilter($pInt0, $pInt1, $pInt2)
    {
        $this->m_AutoFilter->addIconFilter($pInt0, $pInt1, $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFilter.custom(int, int, java.lang.Object)]

      @param pInt0  int
      @param pInt1  int
      @param oObject2  corresponding java type is {java.lang.Object}
     */
    function customIIO($pInt0, $pInt1, $oObject2)
    {
        $this->m_AutoFilter->custom($pInt0, $pInt1, ClassFactory::_t1($oObject2));
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFilter.custom(int, int, java.lang.Object, boolean, int, java.lang.Object)]

      @param pInt0  int
      @param pInt1  int
      @param oObject2  corresponding java type is {java.lang.Object}
      @param pBoolean3  boolean
      @param pInt4  int
      @param oObject5  corresponding java type is {java.lang.Object}
     */
    function customIIOBIO($pInt0, $pInt1, $oObject2, $pBoolean3, $pInt4, $oObject5)
    {
        $this->m_AutoFilter->custom($pInt0, $pInt1, ClassFactory::_t1($oObject2), $pBoolean3, $pInt4, ClassFactory::_t1($oObject5));
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFilter.dynamicFilter(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function dynamicFilter($pInt0, $pInt1)
    {
        $this->m_AutoFilter->dynamicFilter($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFilter.filter(int, java.lang.String)]

      @param pInt0  int
      @param oString1  String
     */
    function filter($pInt0, $oString1)
    {
        $this->m_AutoFilter->filter($pInt0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFilter.filterTop10(int, boolean, boolean, int)]

      @param pInt0  int
      @param pBoolean1  boolean
      @param pBoolean2  boolean
      @param pInt3  int
     */
    function filterTop10($pInt0, $pBoolean1, $pBoolean2, $pInt3)
    {
        $this->m_AutoFilter->filterTop10($pInt0, $pBoolean1, $pBoolean2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFilter.getFilterColumnCollection()]

      @return com.aspose.cells.FilterColumnCollection
     */
    function getFilterColumnCollection()
    {
        return ClassFactory::_t2($this->m_AutoFilter->getFilterColumnCollection());
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFilter.getFilterColumns()]

      @return com.aspose.cells.FilterColumnCollection
     */
    function getFilterColumns()
    {
        return ClassFactory::_t2($this->m_AutoFilter->getFilterColumns());
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFilter.getRange()]

      @return String
     */
    function getRange()
    {
        return $this->m_AutoFilter->getRange();
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFilter.getSorter()]

      @return com.aspose.cells.DataSorter
     */
    function getSorter()
    {
        return ClassFactory::_t2($this->m_AutoFilter->getSorter());
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFilter.matchBlanks(int)]

      @param pInt0  int
     */
    function matchBlanks($pInt0)
    {
        $this->m_AutoFilter->matchBlanks($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFilter.matchNonBlanks(int)]

      @param pInt0  int
     */
    function matchNonBlanks($pInt0)
    {
        $this->m_AutoFilter->matchNonBlanks($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFilter.refresh()]

     */
    function refresh()
    {
        $this->m_AutoFilter->refresh();
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFilter.removeDateFilter(int, int, int, int, int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pInt4  int
      @param pInt5  int
      @param pInt6  int
      @param pInt7  int
     */
    function removeDateFilter($pInt0, $pInt1, $pInt2, $pInt3, $pInt4, $pInt5, $pInt6, $pInt7)
    {
        $this->m_AutoFilter->removeDateFilter($pInt0, $pInt1, $pInt2, $pInt3, $pInt4, $pInt5, $pInt6, $pInt7);
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFilter.removeFilter(int)]

      @param pInt0  int
     */
    function removeFilterI($pInt0)
    {
        $this->m_AutoFilter->removeFilter($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFilter.removeFilter(int, java.lang.String)]

      @param pInt0  int
      @param oString1  String
     */
    function removeFilterIS($pInt0, $oString1)
    {
        $this->m_AutoFilter->removeFilter($pInt0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFilter.setRange(java.lang.String)]

      @param oString0  String
     */
    function setRangeS($oString0)
    {
        $this->m_AutoFilter->setRange($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFilter.setRange(int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
     */
    function setRangeIII($pInt0, $pInt1, $pInt2)
    {
        $this->m_AutoFilter->setRange($pInt0, $pInt1, $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFilter.showAll()]

     */
    function showAll()
    {
        $this->m_AutoFilter->showAll();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.AutoFitterOptions]
  
 */
class AutoFitterOptions
{
    public $m_AutoFitterOptions;
    
    function __construct($autoFitterOptions)
    {
    	$this->m_AutoFitterOptions = $autoFitterOptions;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.AutoFitterOptions.getAutoFitMergedCells()]

      @return boolean
     */
    function getAutoFitMergedCells()
    {
        return $this->m_AutoFitterOptions->getAutoFitMergedCells();
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFitterOptions.getIgnoreHidden()]

      @return boolean
     */
    function getIgnoreHidden()
    {
        return $this->m_AutoFitterOptions->getIgnoreHidden();
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFitterOptions.getMaxRowHeight()]

      @return double
     */
    function getMaxRowHeight()
    {
        return $this->m_AutoFitterOptions->getMaxRowHeight();
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFitterOptions.getOnlyAuto()]

      @return boolean
     */
    function getOnlyAuto()
    {
        return $this->m_AutoFitterOptions->getOnlyAuto();
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFitterOptions.setAutoFitMergedCells(boolean)]

      @param pBoolean0  boolean
     */
    function setAutoFitMergedCells($pBoolean0)
    {
        $this->m_AutoFitterOptions->setAutoFitMergedCells($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFitterOptions.setIgnoreHidden(boolean)]

      @param pBoolean0  boolean
     */
    function setIgnoreHidden($pBoolean0)
    {
        $this->m_AutoFitterOptions->setIgnoreHidden($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFitterOptions.setMaxRowHeight(double)]

      @param pDouble0  double
     */
    function setMaxRowHeight($pDouble0)
    {
        $this->m_AutoFitterOptions->setMaxRowHeight($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.AutoFitterOptions.setOnlyAuto(boolean)]

      @param pBoolean0  boolean
     */
    function setOnlyAuto($pBoolean0)
    {
        $this->m_AutoFitterOptions->setOnlyAuto($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.AutoShapeType]
  
 */
class AutoShapeType
{
    public $m_AutoShapeType;
    
    function __construct($autoShapeType)
    {
    	$this->m_AutoShapeType = $autoShapeType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Axis]
  
 */
class Axis
{
    public $m_Axis;
    
    function __construct($axis)
    {
    	$this->m_Axis = $axis;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Axis.getArea()]

      @return com.aspose.cells.Area
     */
    function getArea()
    {
        return ClassFactory::_t2($this->m_Axis->getArea());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getAxisBetweenCategories()]

      @return boolean
     */
    function getAxisBetweenCategories()
    {
        return $this->m_Axis->getAxisBetweenCategories();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getAxisLine()]

      @return com.aspose.cells.Line
     */
    function getAxisLine()
    {
        return ClassFactory::_t2($this->m_Axis->getAxisLine());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getBaseUnitScale()]

      @return int
     */
    function getBaseUnitScale()
    {
        return $this->m_Axis->getBaseUnitScale();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getCategoryType()]

      @return int
     */
    function getCategoryType()
    {
        return $this->m_Axis->getCategoryType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getCrossAt()]

      @return double
     */
    function getCrossAt()
    {
        return $this->m_Axis->getCrossAt();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getCrossType()]

      @return int
     */
    function getCrossType()
    {
        return $this->m_Axis->getCrossType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getCrosses()]

      @return int
     */
    function getCrosses()
    {
        return $this->m_Axis->getCrosses();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getDisplayUnit()]

      @return int
     */
    function getDisplayUnit()
    {
        return $this->m_Axis->getDisplayUnit();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getDisplayUnitLabel()]

      @return com.aspose.cells.DisplayUnitLabel
     */
    function getDisplayUnitLabel()
    {
        return ClassFactory::_t2($this->m_Axis->getDisplayUnitLabel());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getLogBase()]

      @return double
     */
    function getLogBase()
    {
        return $this->m_Axis->getLogBase();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getMajorGridLines()]

      @return com.aspose.cells.Line
     */
    function getMajorGridLines()
    {
        return ClassFactory::_t2($this->m_Axis->getMajorGridLines());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getMajorTickMark()]

      @return int
     */
    function getMajorTickMark()
    {
        return $this->m_Axis->getMajorTickMark();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getMajorUnit()]

      @return double
     */
    function getMajorUnit()
    {
        return $this->m_Axis->getMajorUnit();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getMajorUnitScale()]

      @return int
     */
    function getMajorUnitScale()
    {
        return $this->m_Axis->getMajorUnitScale();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getMaxValue()]

      @return corresponding java type is {java.lang.Object}
     */
    function getMaxValue()
    {
        return ClassFactory::_t2($this->m_Axis->getMaxValue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getMinValue()]

      @return corresponding java type is {java.lang.Object}
     */
    function getMinValue()
    {
        return ClassFactory::_t2($this->m_Axis->getMinValue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getMinorGridLines()]

      @return com.aspose.cells.Line
     */
    function getMinorGridLines()
    {
        return ClassFactory::_t2($this->m_Axis->getMinorGridLines());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getMinorTickMark()]

      @return int
     */
    function getMinorTickMark()
    {
        return $this->m_Axis->getMinorTickMark();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getMinorUnit()]

      @return double
     */
    function getMinorUnit()
    {
        return $this->m_Axis->getMinorUnit();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getMinorUnitScale()]

      @return int
     */
    function getMinorUnitScale()
    {
        return $this->m_Axis->getMinorUnitScale();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getTickLabelPosition()]

      @return int
     */
    function getTickLabelPosition()
    {
        return $this->m_Axis->getTickLabelPosition();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getTickLabelSpacing()]

      @return int
     */
    function getTickLabelSpacing()
    {
        return $this->m_Axis->getTickLabelSpacing();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getTickLabels()]

      @return com.aspose.cells.TickLabels
     */
    function getTickLabels()
    {
        return ClassFactory::_t2($this->m_Axis->getTickLabels());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getTickMarkSpacing()]

      @return int
     */
    function getTickMarkSpacing()
    {
        return $this->m_Axis->getTickMarkSpacing();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.getTitle()]

      @return com.aspose.cells.Title
     */
    function getTitle()
    {
        return ClassFactory::_t2($this->m_Axis->getTitle());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.hasMultiLevelLabels()]

      @return boolean
     */
    function hasMultiLevelLabels()
    {
        return $this->m_Axis->hasMultiLevelLabels();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.isAutoCross()]

      @return boolean
     */
    function isAutoCross()
    {
        return $this->m_Axis->isAutoCross();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.isAutomaticMajorUnit()]

      @return boolean
     */
    function isAutomaticMajorUnit()
    {
        return $this->m_Axis->isAutomaticMajorUnit();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.isAutomaticMaxValue()]

      @return boolean
     */
    function isAutomaticMaxValue()
    {
        return $this->m_Axis->isAutomaticMaxValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.isAutomaticMinValue()]

      @return boolean
     */
    function isAutomaticMinValue()
    {
        return $this->m_Axis->isAutomaticMinValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.isAutomaticMinorUnit()]

      @return boolean
     */
    function isAutomaticMinorUnit()
    {
        return $this->m_Axis->isAutomaticMinorUnit();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.isBaseUnitAuto()]

      @return boolean
     */
    function isBaseUnitAuto()
    {
        return $this->m_Axis->isBaseUnitAuto();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.isCrossAtMax()]

      @return boolean
     */
    function isCrossAtMax()
    {
        return $this->m_Axis->isCrossAtMax();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.isDisplayUnitLabelShown()]

      @return boolean
     */
    function isDisplayUnitLabelShown()
    {
        return $this->m_Axis->isDisplayUnitLabelShown();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.isLogarithmic()]

      @return boolean
     */
    function isLogarithmic()
    {
        return $this->m_Axis->isLogarithmic();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.isPlotOrderReversed()]

      @return boolean
     */
    function isPlotOrderReversed()
    {
        return $this->m_Axis->isPlotOrderReversed();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.isVisible()]

      @return boolean
     */
    function isVisible()
    {
        return $this->m_Axis->isVisible();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setAutoCross()]

     */
    function setAutoCross()
    {
        $this->m_Axis->setAutoCross();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setAutomaticMajorUnit(boolean)]

      @param pBoolean0  boolean
     */
    function setAutomaticMajorUnit($pBoolean0)
    {
        $this->m_Axis->setAutomaticMajorUnit($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setAutomaticMaxValue(boolean)]

      @param pBoolean0  boolean
     */
    function setAutomaticMaxValue($pBoolean0)
    {
        $this->m_Axis->setAutomaticMaxValue($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setAutomaticMinValue(boolean)]

      @param pBoolean0  boolean
     */
    function setAutomaticMinValue($pBoolean0)
    {
        $this->m_Axis->setAutomaticMinValue($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setAutomaticMinorUnit(boolean)]

      @param pBoolean0  boolean
     */
    function setAutomaticMinorUnit($pBoolean0)
    {
        $this->m_Axis->setAutomaticMinorUnit($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setAxisBetweenCategories(boolean)]

      @param pBoolean0  boolean
     */
    function setAxisBetweenCategories($pBoolean0)
    {
        $this->m_Axis->setAxisBetweenCategories($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setBaseUnitAuto(boolean)]

      @param pBoolean0  boolean
     */
    function setBaseUnitAuto($pBoolean0)
    {
        $this->m_Axis->setBaseUnitAuto($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setBaseUnitScale(int)]

      @param pInt0  int
     */
    function setBaseUnitScale($pInt0)
    {
        $this->m_Axis->setBaseUnitScale($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setCategoryType(int)]

      @param pInt0  int
     */
    function setCategoryType($pInt0)
    {
        $this->m_Axis->setCategoryType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setCrossAt(double)]

      @param pDouble0  double
     */
    function setCrossAt($pDouble0)
    {
        $this->m_Axis->setCrossAt($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setCrossAtMax(boolean)]

      @param pBoolean0  boolean
     */
    function setCrossAtMax($pBoolean0)
    {
        $this->m_Axis->setCrossAtMax($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setCrossType(int)]

      @param pInt0  int
     */
    function setCrossType($pInt0)
    {
        $this->m_Axis->setCrossType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setCrosses(int)]

      @param pInt0  int
     */
    function setCrosses($pInt0)
    {
        $this->m_Axis->setCrosses($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setDisplayUnit(int)]

      @param pInt0  int
     */
    function setDisplayUnit($pInt0)
    {
        $this->m_Axis->setDisplayUnit($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setDisplayUnitLabelShown(boolean)]

      @param pBoolean0  boolean
     */
    function setDisplayUnitLabelShown($pBoolean0)
    {
        $this->m_Axis->setDisplayUnitLabelShown($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setHasMultiLevelLabels(boolean)]

      @param pBoolean0  boolean
     */
    function setHasMultiLevelLabels($pBoolean0)
    {
        $this->m_Axis->setHasMultiLevelLabels($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setLogBase(double)]

      @param pDouble0  double
     */
    function setLogBase($pDouble0)
    {
        $this->m_Axis->setLogBase($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setLogarithmic(boolean)]

      @param pBoolean0  boolean
     */
    function setLogarithmic($pBoolean0)
    {
        $this->m_Axis->setLogarithmic($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setMajorTickMark(int)]

      @param pInt0  int
     */
    function setMajorTickMark($pInt0)
    {
        $this->m_Axis->setMajorTickMark($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setMajorUnit(double)]

      @param pDouble0  double
     */
    function setMajorUnit($pDouble0)
    {
        $this->m_Axis->setMajorUnit($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setMajorUnitScale(int)]

      @param pInt0  int
     */
    function setMajorUnitScale($pInt0)
    {
        $this->m_Axis->setMajorUnitScale($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setMaxValue(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
     */
    function setMaxValue($oObject0)
    {
        $this->m_Axis->setMaxValue(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setMinValue(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
     */
    function setMinValue($oObject0)
    {
        $this->m_Axis->setMinValue(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setMinorTickMark(int)]

      @param pInt0  int
     */
    function setMinorTickMark($pInt0)
    {
        $this->m_Axis->setMinorTickMark($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setMinorUnit(double)]

      @param pDouble0  double
     */
    function setMinorUnit($pDouble0)
    {
        $this->m_Axis->setMinorUnit($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setMinorUnitScale(int)]

      @param pInt0  int
     */
    function setMinorUnitScale($pInt0)
    {
        $this->m_Axis->setMinorUnitScale($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setPlotOrderReversed(boolean)]

      @param pBoolean0  boolean
     */
    function setPlotOrderReversed($pBoolean0)
    {
        $this->m_Axis->setPlotOrderReversed($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setTickLabelPosition(int)]

      @param pInt0  int
     */
    function setTickLabelPosition($pInt0)
    {
        $this->m_Axis->setTickLabelPosition($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setTickLabelSpacing(int)]

      @param pInt0  int
     */
    function setTickLabelSpacing($pInt0)
    {
        $this->m_Axis->setTickLabelSpacing($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setTickMarkSpacing(int)]

      @param pInt0  int
     */
    function setTickMarkSpacing($pInt0)
    {
        $this->m_Axis->setTickMarkSpacing($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Axis.setVisible(boolean)]

      @param pBoolean0  boolean
     */
    function setVisible($pBoolean0)
    {
        $this->m_Axis->setVisible($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.BackgroundMode]
  
 */
class BackgroundMode
{
    public $m_BackgroundMode;
    
    function __construct($backgroundMode)
    {
    	$this->m_BackgroundMode = $backgroundMode;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.BackgroundType]
  
 */
class BackgroundType
{
    public $m_BackgroundType;
    
    function __construct($backgroundType)
    {
    	$this->m_BackgroundType = $backgroundType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Bar3DShapeType]
  
 */
class Bar3DShapeType
{
    public $m_Bar3DShapeType;
    
    function __construct($bar3DShapeType)
    {
    	$this->m_Bar3DShapeType = $bar3DShapeType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Bevel]
  
 */
class Bevel
{
    public $m_Bevel;
    
    function __construct($bevel)
    {
    	$this->m_Bevel = $bevel;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Bevel.getHeight()]

      @return double
     */
    function getHeight()
    {
        return $this->m_Bevel->getHeight();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Bevel.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_Bevel->getType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Bevel.getWidth()]

      @return double
     */
    function getWidth()
    {
        return $this->m_Bevel->getWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Bevel.setHeight(double)]

      @param pDouble0  double
     */
    function setHeight($pDouble0)
    {
        $this->m_Bevel->setHeight($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Bevel.setType(int)]

      @param pInt0  int
     */
    function setType($pInt0)
    {
        $this->m_Bevel->setType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Bevel.setWidth(double)]

      @param pDouble0  double
     */
    function setWidth($pDouble0)
    {
        $this->m_Bevel->setWidth($pDouble0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.BevelPresetType]
  
 */
class BevelPresetType
{
    public $m_BevelPresetType;
    
    function __construct($bevelPresetType)
    {
    	$this->m_BevelPresetType = $bevelPresetType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Border]
  
 */
class Border
{
    public $m_Border;
    
    function __construct($border)
    {
    	$this->m_Border = $border;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Border.getArgbColor()]

      @return int
     */
    function getArgbColor()
    {
        return $this->m_Border->getArgbColor();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Border.getColor()]

      @return com.aspose.cells.Color
     */
    function getColor()
    {
        return ClassFactory::_t2($this->m_Border->getColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Border.getLineStyle()]

      @return int
     */
    function getLineStyle()
    {
        return $this->m_Border->getLineStyle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Border.setArgbColor(int)]

      @param pInt0  int
     */
    function setArgbColor($pInt0)
    {
        $this->m_Border->setArgbColor($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Border.setColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setColor($oColor0)
    {
        $this->m_Border->setColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Border.setLineStyle(int)]

      @param pInt0  int
     */
    function setLineStyle($pInt0)
    {
        $this->m_Border->setLineStyle($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.BorderCollection]
  
 */
class BorderCollection
{
    public $m_BorderCollection;
    
    function __construct($borderCollection)
    {
    	$this->m_BorderCollection = $borderCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.BorderCollection.getByBorderType(int)]

      @param pInt0  int
      @return com.aspose.cells.Border
     */
    function getByBorderType($pInt0)
    {
        return ClassFactory::_t2($this->m_BorderCollection->getByBorderType($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.BorderCollection.getDiagonalColor()]

      @return com.aspose.cells.Color
     */
    function getDiagonalColor()
    {
        return ClassFactory::_t2($this->m_BorderCollection->getDiagonalColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.BorderCollection.getDiagonalStyle()]

      @return int
     */
    function getDiagonalStyle()
    {
        return $this->m_BorderCollection->getDiagonalStyle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BorderCollection.setColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setColor($oColor0)
    {
        $this->m_BorderCollection->setColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.BorderCollection.setDiagonalColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setDiagonalColor($oColor0)
    {
        $this->m_BorderCollection->setDiagonalColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.BorderCollection.setDiagonalStyle(int)]

      @param pInt0  int
     */
    function setDiagonalStyle($pInt0)
    {
        $this->m_BorderCollection->setDiagonalStyle($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BorderCollection.setStyle(int)]

      @param pInt0  int
     */
    function setStyle($pInt0)
    {
        $this->m_BorderCollection->setStyle($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.BorderType]
  
 */
class BorderType
{
    public $m_BorderType;
    
    function __construct($borderType)
    {
    	$this->m_BorderType = $borderType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.BubbleSizeRepresents]
  
 */
class BubbleSizeRepresents
{
    public $m_BubbleSizeRepresents;
    
    function __construct($bubbleSizeRepresents)
    {
    	$this->m_BubbleSizeRepresents = $bubbleSizeRepresents;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.BuiltInDocumentPropertyCollection]
  
 */
class BuiltInDocumentPropertyCollection extends DocumentPropertyCollection
{
    public $m_BuiltInDocumentPropertyCollection;
    
    function __construct($builtInDocumentPropertyCollection)
    {
    	$this->m_BuiltInDocumentPropertyCollection = $builtInDocumentPropertyCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.get(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.DocumentProperty
     */
    function get($oString0)
    {
        return ClassFactory::_t2($this->m_BuiltInDocumentPropertyCollection->get($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getAuthor()]

      @return String
     */
    function getAuthor()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getAuthor();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getBytes()]

      @return int
     */
    function getBytes()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getBytes();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getCategory()]

      @return String
     */
    function getCategory()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getCategory();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getCharacters()]

      @return int
     */
    function getCharacters()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getCharacters();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getCharactersWithSpaces()]

      @return int
     */
    function getCharactersWithSpaces()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getCharactersWithSpaces();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getComments()]

      @return String
     */
    function getComments()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getComments();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getCompany()]

      @return String
     */
    function getCompany()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getCompany();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getContentStatus()]

      @return String
     */
    function getContentStatus()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getContentStatus();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getContentType()]

      @return String
     */
    function getContentType()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getContentType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getCreatedTime()]

      @return corresponding java type is {com.aspose.cells.DateTime}
     */
    function getCreatedTime()
    {
        return ClassFactory::_t2($this->m_BuiltInDocumentPropertyCollection->getCreatedTime());
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getHyperlinkBase()]

      @return String
     */
    function getHyperlinkBase()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getHyperlinkBase();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getKeywords()]

      @return String
     */
    function getKeywords()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getKeywords();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getLastPrinted()]

      @return corresponding java type is {com.aspose.cells.DateTime}
     */
    function getLastPrinted()
    {
        return ClassFactory::_t2($this->m_BuiltInDocumentPropertyCollection->getLastPrinted());
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getLastSavedBy()]

      @return String
     */
    function getLastSavedBy()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getLastSavedBy();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getLastSavedTime()]

      @return corresponding java type is {com.aspose.cells.DateTime}
     */
    function getLastSavedTime()
    {
        return ClassFactory::_t2($this->m_BuiltInDocumentPropertyCollection->getLastSavedTime());
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getLines()]

      @return int
     */
    function getLines()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getLines();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getManager()]

      @return String
     */
    function getManager()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getManager();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getNameOfApplication()]

      @return String
     */
    function getNameOfApplication()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getNameOfApplication();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getPages()]

      @return int
     */
    function getPages()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getPages();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getParagraphs()]

      @return int
     */
    function getParagraphs()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getParagraphs();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getRevisionNumber()]

      @return int
     */
    function getRevisionNumber()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getRevisionNumber();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getSubject()]

      @return String
     */
    function getSubject()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getSubject();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getTemplate()]

      @return String
     */
    function getTemplate()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getTemplate();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getTitle()]

      @return String
     */
    function getTitle()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getTitle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getTotalEditingTime()]

      @return double
     */
    function getTotalEditingTime()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getTotalEditingTime();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getVersion()]

      @return int
     */
    function getVersion()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getVersion();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.getWords()]

      @return int
     */
    function getWords()
    {
        return $this->m_BuiltInDocumentPropertyCollection->getWords();
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setAuthor(java.lang.String)]

      @param oString0  String
     */
    function setAuthor($oString0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setAuthor($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setBytes(int)]

      @param pInt0  int
     */
    function setBytes($pInt0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setBytes($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setCategory(java.lang.String)]

      @param oString0  String
     */
    function setCategory($oString0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setCategory($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setCharacters(int)]

      @param pInt0  int
     */
    function setCharacters($pInt0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setCharacters($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setCharactersWithSpaces(int)]

      @param pInt0  int
     */
    function setCharactersWithSpaces($pInt0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setCharactersWithSpaces($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setComments(java.lang.String)]

      @param oString0  String
     */
    function setComments($oString0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setComments($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setCompany(java.lang.String)]

      @param oString0  String
     */
    function setCompany($oString0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setCompany($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setContentStatus(java.lang.String)]

      @param oString0  String
     */
    function setContentStatus($oString0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setContentStatus($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setContentType(java.lang.String)]

      @param oString0  String
     */
    function setContentType($oString0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setContentType($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setCreatedTime(com.aspose.cells.DateTime)]

      @param oCells_DateTime0  corresponding java type is {com.aspose.cells.DateTime}
     */
    function setCreatedTime($oCells_DateTime0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setCreatedTime(ClassFactory::_t1($oCells_DateTime0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setHyperlinkBase(java.lang.String)]

      @param oString0  String
     */
    function setHyperlinkBase($oString0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setHyperlinkBase($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setKeywords(java.lang.String)]

      @param oString0  String
     */
    function setKeywords($oString0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setKeywords($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setLastPrinted(com.aspose.cells.DateTime)]

      @param oCells_DateTime0  corresponding java type is {com.aspose.cells.DateTime}
     */
    function setLastPrinted($oCells_DateTime0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setLastPrinted(ClassFactory::_t1($oCells_DateTime0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setLastSavedBy(java.lang.String)]

      @param oString0  String
     */
    function setLastSavedBy($oString0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setLastSavedBy($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setLastSavedTime(com.aspose.cells.DateTime)]

      @param oCells_DateTime0  corresponding java type is {com.aspose.cells.DateTime}
     */
    function setLastSavedTime($oCells_DateTime0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setLastSavedTime(ClassFactory::_t1($oCells_DateTime0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setLines(int)]

      @param pInt0  int
     */
    function setLines($pInt0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setLines($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setManager(java.lang.String)]

      @param oString0  String
     */
    function setManager($oString0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setManager($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setNameOfApplication(java.lang.String)]

      @param oString0  String
     */
    function setNameOfApplication($oString0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setNameOfApplication($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setPages(int)]

      @param pInt0  int
     */
    function setPages($pInt0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setPages($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setParagraphs(int)]

      @param pInt0  int
     */
    function setParagraphs($pInt0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setParagraphs($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setRevisionNumber(int)]

      @param pInt0  int
     */
    function setRevisionNumber($pInt0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setRevisionNumber($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setSubject(java.lang.String)]

      @param oString0  String
     */
    function setSubject($oString0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setSubject($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setTemplate(java.lang.String)]

      @param oString0  String
     */
    function setTemplate($oString0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setTemplate($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setTitle(java.lang.String)]

      @param oString0  String
     */
    function setTitle($oString0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setTitle($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setTotalEditingTime(double)]

      @param pDouble0  double
     */
    function setTotalEditingTime($pDouble0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setTotalEditingTime($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setVersion(int)]

      @param pInt0  int
     */
    function setVersion($pInt0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setVersion($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.BuiltInDocumentPropertyCollection.setWords(int)]

      @param pInt0  int
     */
    function setWords($pInt0)
    {
        $this->m_BuiltInDocumentPropertyCollection->setWords($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.BuiltinStyleType]
  
 */
class BuiltinStyleType
{
    public $m_BuiltinStyleType;
    
    function __construct($builtinStyleType)
    {
    	$this->m_BuiltinStyleType = $builtinStyleType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Button]
  
 */
class Button extends Shape
{
    public $m_Button;
    
    function __construct($button)
    {
    	$this->m_Button = $button;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.CalcModeType]
  
 */
class CalcModeType
{
    public $m_CalcModeType;
    
    function __construct($calcModeType)
    {
    	$this->m_CalcModeType = $calcModeType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.CategoryType]
  
 */
class CategoryType
{
    public $m_CategoryType;
    
    function __construct($categoryType)
    {
    	$this->m_CategoryType = $categoryType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Cell]
  
 */
class Cell
{
    public $m_Cell;
    
    function __construct($cell)
    {
    	$this->m_Cell = $cell;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Cell.calculate(boolean, com.aspose.cells.ICustomFunction)]

      @param pBoolean0  boolean
      @param oICustomFunction1  com.aspose.cells.ICustomFunction
     */
    function calculate($pBoolean0, $oICustomFunction1)
    {
        $this->m_Cell->calculate($pBoolean0, ClassFactory::_t1($oICustomFunction1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.characters(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return com.aspose.cells.FontSetting
     */
    function characters($pInt0, $pInt1)
    {
        return ClassFactory::_t2($this->m_Cell->characters($pInt0, $pInt1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.containsExternalLink()]

      @return boolean
     */
    function containsExternalLink()
    {
        return $this->m_Cell->containsExternalLink();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.copy(com.aspose.cells.Cell)]

      @param oCell0  com.aspose.cells.Cell
     */
    function copy($oCell0)
    {
        $this->m_Cell->copy(ClassFactory::_t1($oCell0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.equals(com.aspose.cells.Cell)]

      @param oCell0  com.aspose.cells.Cell
      @return boolean
     */
    function equalsC($oCell0)
    {
        return $this->m_Cell->equals(ClassFactory::_t1($oCell0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.equals(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
      @return boolean
     */
    function equalsO($oObject0)
    {
        return $this->m_Cell->equals(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getArrayRange()]

      @return com.aspose.cells.CellArea
     */
    function getArrayRange()
    {
        return ClassFactory::_t2($this->m_Cell->getArrayRange());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getBoolValue()]

      @return boolean
     */
    function getBoolValue()
    {
        return $this->m_Cell->getBoolValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getCharacters()]

      @return com.aspose.cells.FontSetting[]
     */
    function getCharacters()
    {
        return ClassFactory::_t2($this->m_Cell->getCharacters());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getColumn()]

      @return int
     */
    function getColumn()
    {
        return $this->m_Cell->getColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getConditionalFormattingResult()]

      @return com.aspose.cells.ConditionalFormattingResult
     */
    function getConditionalFormattingResult()
    {
        return ClassFactory::_t2($this->m_Cell->getConditionalFormattingResult());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getConditionalStyle()]

      @return com.aspose.cells.Style
     */
    function getConditionalStyle()
    {
        return ClassFactory::_t2($this->m_Cell->getConditionalStyle());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getDateTimeValue()]

      @return corresponding java type is {com.aspose.cells.DateTime}
     */
    function getDateTimeValue()
    {
        return ClassFactory::_t2($this->m_Cell->getDateTimeValue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getDependents(boolean)]

      @param pBoolean0  boolean
      @return com.aspose.cells.Cell[]
     */
    function getDependents($pBoolean0)
    {
        return ClassFactory::_t2($this->m_Cell->getDependents($pBoolean0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getDisplayStringValue()]

      @return String
     */
    function getDisplayStringValue()
    {
        return $this->m_Cell->getDisplayStringValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getDisplayStyle()]

      @return com.aspose.cells.Style
     */
    function getDisplayStyle()
    {
        return ClassFactory::_t2($this->m_Cell->getDisplayStyle());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getDoubleValue()]

      @return double
     */
    function getDoubleValue()
    {
        return $this->m_Cell->getDoubleValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getFloatValue()]

      @return float
     */
    function getFloatValue()
    {
        return $this->m_Cell->getFloatValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getFormatConditions()]

      @return com.aspose.cells.FormatConditionCollection
     */
    function getFormatConditions()
    {
        return ClassFactory::_t2($this->m_Cell->getFormatConditions());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getFormula()]

      @return String
     */
    function getFormula()
    {
        return $this->m_Cell->getFormula();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getHtmlString()]

      @return String
     */
    function getHtmlString()
    {
        return $this->m_Cell->getHtmlString();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getIntValue()]

      @return int
     */
    function getIntValue()
    {
        return $this->m_Cell->getIntValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getLeafs()]

      @return corresponding java type is {java.util.Iterator}
     */
    function getLeafs()
    {
        return ClassFactory::_t2($this->m_Cell->getLeafs());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getMergedRange()]

      @return com.aspose.cells.Range
     */
    function getMergedRange()
    {
        return ClassFactory::_t2($this->m_Cell->getMergedRange());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_Cell->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getNumberCategoryType()]

      @return int
     */
    function getNumberCategoryType()
    {
        return $this->m_Cell->getNumberCategoryType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getPrecedents()]

      @return com.aspose.cells.ReferredAreaCollection
     */
    function getPrecedents()
    {
        return ClassFactory::_t2($this->m_Cell->getPrecedents());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getR1C1Formula()]

      @return String
     */
    function getR1C1Formula()
    {
        return $this->m_Cell->getR1C1Formula();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getRow()]

      @return int
     */
    function getRow()
    {
        return $this->m_Cell->getRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getSharedStyleIndex()]

      @return int
     */
    function getSharedStyleIndex()
    {
        return $this->m_Cell->getSharedStyleIndex();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getStringValue()]

      @return String
     */
    function getStringValue()
    {
        return $this->m_Cell->getStringValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getStringValueWithoutFormat()]

      @return String
     */
    function getStringValueWithoutFormat()
    {
        return $this->m_Cell->getStringValueWithoutFormat();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getStyle()]

      @return com.aspose.cells.Style
     */
    function getStyle()
    {
        return ClassFactory::_t2($this->m_Cell->getStyle());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getStyle(boolean)]

      @param pBoolean0  boolean
      @return com.aspose.cells.Style
     */
    function getStyleB($pBoolean0)
    {
        return ClassFactory::_t2($this->m_Cell->getStyle($pBoolean0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_Cell->getType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getValue()]

      @return corresponding java type is {java.lang.Object}
     */
    function getValue()
    {
        return ClassFactory::_t2($this->m_Cell->getValue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getWidthOfValue()]

      @return int
     */
    function getWidthOfValue()
    {
        return $this->m_Cell->getWidthOfValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.getWorksheet()]

      @return com.aspose.cells.Worksheet
     */
    function getWorksheet()
    {
        return ClassFactory::_t2($this->m_Cell->getWorksheet());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.hashCode()]

      @return int
     */
    function hashCode()
    {
        return $this->m_Cell->hashCode();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.isArrayHeader()]

      @return boolean
     */
    function isArrayHeader()
    {
        return $this->m_Cell->isArrayHeader();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.isErrorValue()]

      @return boolean
     */
    function isErrorValue()
    {
        return $this->m_Cell->isErrorValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.isFormula()]

      @return boolean
     */
    function isFormula()
    {
        return $this->m_Cell->isFormula();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.isInArray()]

      @return boolean
     */
    function isInArray()
    {
        return $this->m_Cell->isInArray();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.isInTable()]

      @return boolean
     */
    function isInTable()
    {
        return $this->m_Cell->isInTable();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.isMerged()]

      @return boolean
     */
    function isMerged()
    {
        return $this->m_Cell->isMerged();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.isRichText()]

      @return boolean
     */
    function isRichText()
    {
        return $this->m_Cell->isRichText();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.isStyleSet()]

      @return boolean
     */
    function isStyleSet()
    {
        return $this->m_Cell->isStyleSet();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.putValue(boolean)]

      @param pBoolean0  boolean
     */
    function putValueB($pBoolean0)
    {
        $this->m_Cell->putValue($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.putValue(com.aspose.cells.DateTime)]

      @param oCells_DateTime0  corresponding java type is {com.aspose.cells.DateTime}
     */
    function putValueD($oCells_DateTime0)
    {
        $this->m_Cell->putValue(ClassFactory::_t1($oCells_DateTime0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.putValue(double)]

      @param pDouble0  double
     */
    function putValueD1($pDouble0)
    {
        $this->m_Cell->putValue($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.putValue(int)]

      @param pInt0  int
     */
    function putValueI($pInt0)
    {
        $this->m_Cell->putValue($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.putValue(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
     */
    function putValueO($oObject0)
    {
        $this->m_Cell->putValue(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.putValue(java.lang.String)]

      @param oString0  String
     */
    function putValueS($oString0)
    {
        $this->m_Cell->putValue($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.putValue(java.lang.String, boolean)]

      @param oString0  String
      @param pBoolean1  boolean
     */
    function putValueSB($oString0, $pBoolean1)
    {
        $this->m_Cell->putValue($oString0, $pBoolean1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.putValue(java.lang.String, boolean, boolean)]

      @param oString0  String
      @param pBoolean1  boolean
      @param pBoolean2  boolean
     */
    function putValueSBB($oString0, $pBoolean1, $pBoolean2)
    {
        $this->m_Cell->putValue($oString0, $pBoolean1, $pBoolean2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.removeArrayFormula(boolean)]

      @param pBoolean0  boolean
     */
    function removeArrayFormula($pBoolean0)
    {
        $this->m_Cell->removeArrayFormula($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.setAddInFormula(java.lang.String, java.lang.String)]

      @param oString0  String
      @param oString1  String
     */
    function setAddInFormula($oString0, $oString1)
    {
        $this->m_Cell->setAddInFormula($oString0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.setArrayFormula(java.lang.String, int, int)]

      @param oString0  String
      @param pInt1  int
      @param pInt2  int
     */
    function setArrayFormula($oString0, $pInt1, $pInt2)
    {
        $this->m_Cell->setArrayFormula($oString0, $pInt1, $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.setFormula(java.lang.String)]

      @param oString0  String
     */
    function setFormulaS($oString0)
    {
        $this->m_Cell->setFormula($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.setFormula(java.lang.String, java.lang.Object)]

      @param oString0  String
      @param oObject1  corresponding java type is {java.lang.Object}
     */
    function setFormulaSO($oString0, $oObject1)
    {
        $this->m_Cell->setFormula($oString0, ClassFactory::_t1($oObject1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.setHtmlString(java.lang.String)]

      @param oString0  String
     */
    function setHtmlString($oString0)
    {
        $this->m_Cell->setHtmlString($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.setR1C1Formula(java.lang.String)]

      @param oString0  String
     */
    function setR1C1Formula($oString0)
    {
        $this->m_Cell->setR1C1Formula($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.setSharedFormula(java.lang.String, int, int)]

      @param oString0  String
      @param pInt1  int
      @param pInt2  int
     */
    function setSharedFormula($oString0, $pInt1, $pInt2)
    {
        $this->m_Cell->setSharedFormula($oString0, $pInt1, $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.setStyle(com.aspose.cells.Style)]

      @param oStyle0  com.aspose.cells.Style
     */
    function setStyleS($oStyle0)
    {
        $this->m_Cell->setStyle(ClassFactory::_t1($oStyle0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.setStyle(com.aspose.cells.Style, boolean)]

      @param oStyle0  com.aspose.cells.Style
      @param pBoolean1  boolean
     */
    function setStyleSB($oStyle0, $pBoolean1)
    {
        $this->m_Cell->setStyle(ClassFactory::_t1($oStyle0), $pBoolean1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.setStyle(com.aspose.cells.Style, com.aspose.cells.StyleFlag)]

      @param oStyle0  com.aspose.cells.Style
      @param oStyleFlag1  com.aspose.cells.StyleFlag
     */
    function setStyleSS($oStyle0, $oStyleFlag1)
    {
        $this->m_Cell->setStyle(ClassFactory::_t1($oStyle0), ClassFactory::_t1($oStyleFlag1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.setValue(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
     */
    function setValue($oObject0)
    {
        $this->m_Cell->setValue(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cell.toString()]

      @return String
     */
    function toString()
    {
        return $this->m_Cell->toString();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.CellArea]
  
 */
class CellArea
{
    public $m_CellArea;
    
    function __construct($cellArea)
    {
    	$this->m_CellArea = $cellArea;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.CellArea.compareTo(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
      @return int
     */
    function compareTo($oObject0)
    {
        return $this->m_CellArea->compareTo(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellArea.createCellArea(java.lang.String, java.lang.String)]

      @param oString0  String
      @param oString1  String
      @return com.aspose.cells.CellArea
     */
    function createCellAreaSS($oString0, $oString1)
    {
        return ClassFactory::_t2($this->m_CellArea->createCellArea($oString0, $oString1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellArea.createCellArea(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @return com.aspose.cells.CellArea
     */
    function createCellAreaIIII($pInt0, $pInt1, $pInt2, $pInt3)
    {
        return ClassFactory::_t2($this->m_CellArea->createCellArea($pInt0, $pInt1, $pInt2, $pInt3));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellArea.toString()]

      @return String
     */
    function toString()
    {
        return $this->m_CellArea->toString();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.CellBorderType]
  
 */
class CellBorderType
{
    public $m_CellBorderType;
    
    function __construct($cellBorderType)
    {
    	$this->m_CellBorderType = $cellBorderType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.CellHandler]
  
 */
class CellHandler
{
    public $m_CellHandler;
    
    function __construct($cellHandler)
    {
    	$this->m_CellHandler = $cellHandler;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.CellHandler.process(com.aspose.cells.LightCell)]

      @param oLightCell0  com.aspose.cells.LightCell
     */
    function process($oLightCell0)
    {
        $this->m_CellHandler->process(ClassFactory::_t1($oLightCell0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellHandler.startCell(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return boolean
     */
    function startCell($pInt0, $pInt1)
    {
        return $this->m_CellHandler->startCell($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellHandler.startSheet(int)]

      @param pInt0  int
      @return boolean
     */
    function startSheet($pInt0)
    {
        return $this->m_CellHandler->startSheet($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.Cells]
  
 */
class Cells
{
    public $m_Cells;
    
    function __construct($cells)
    {
    	$this->m_Cells = $cells;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Cells.addRange(com.aspose.cells.Range)]

      @param oRange0  com.aspose.cells.Range
     */
    function addRange($oRange0)
    {
        $this->m_Cells->addRange(ClassFactory::_t1($oRange0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.applyColumnStyle(int, com.aspose.cells.Style, com.aspose.cells.StyleFlag)]

      @param pInt0  int
      @param oStyle1  com.aspose.cells.Style
      @param oStyleFlag2  com.aspose.cells.StyleFlag
     */
    function applyColumnStyle($pInt0, $oStyle1, $oStyleFlag2)
    {
        $this->m_Cells->applyColumnStyle($pInt0, ClassFactory::_t1($oStyle1), ClassFactory::_t1($oStyleFlag2));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.applyRowStyle(int, com.aspose.cells.Style, com.aspose.cells.StyleFlag)]

      @param pInt0  int
      @param oStyle1  com.aspose.cells.Style
      @param oStyleFlag2  com.aspose.cells.StyleFlag
     */
    function applyRowStyle($pInt0, $oStyle1, $oStyleFlag2)
    {
        $this->m_Cells->applyRowStyle($pInt0, ClassFactory::_t1($oStyle1), ClassFactory::_t1($oStyleFlag2));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.applyStyle(com.aspose.cells.Style, com.aspose.cells.StyleFlag)]

      @param oStyle0  com.aspose.cells.Style
      @param oStyleFlag1  com.aspose.cells.StyleFlag
     */
    function applyStyle($oStyle0, $oStyleFlag1)
    {
        $this->m_Cells->applyStyle(ClassFactory::_t1($oStyle0), ClassFactory::_t1($oStyleFlag1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.checkCell(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return com.aspose.cells.Cell
     */
    function checkCell($pInt0, $pInt1)
    {
        return ClassFactory::_t2($this->m_Cells->checkCell($pInt0, $pInt1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.checkColumn(int)]

      @param pInt0  int
      @return com.aspose.cells.Column
     */
    function checkColumn($pInt0)
    {
        return ClassFactory::_t2($this->m_Cells->checkColumn($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.checkRow(int)]

      @param pInt0  int
      @return com.aspose.cells.Row
     */
    function checkRow($pInt0)
    {
        return ClassFactory::_t2($this->m_Cells->checkRow($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.clear()]

     */
    function clear()
    {
        $this->m_Cells->clear();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.clearContents(com.aspose.cells.CellArea)]

      @param oCellArea0  com.aspose.cells.CellArea
     */
    function clearContentsC($oCellArea0)
    {
        $this->m_Cells->clearContents(ClassFactory::_t1($oCellArea0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.clearContents(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
     */
    function clearContentsIIII($pInt0, $pInt1, $pInt2, $pInt3)
    {
        $this->m_Cells->clearContents($pInt0, $pInt1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.clearFormats(com.aspose.cells.CellArea)]

      @param oCellArea0  com.aspose.cells.CellArea
     */
    function clearFormatsC($oCellArea0)
    {
        $this->m_Cells->clearFormats(ClassFactory::_t1($oCellArea0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.clearFormats(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
     */
    function clearFormatsIIII($pInt0, $pInt1, $pInt2, $pInt3)
    {
        $this->m_Cells->clearFormats($pInt0, $pInt1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.clearRange(com.aspose.cells.CellArea)]

      @param oCellArea0  com.aspose.cells.CellArea
     */
    function clearRangeC($oCellArea0)
    {
        $this->m_Cells->clearRange(ClassFactory::_t1($oCellArea0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.clearRange(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
     */
    function clearRangeIIII($pInt0, $pInt1, $pInt2, $pInt3)
    {
        $this->m_Cells->clearRange($pInt0, $pInt1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.convertStringToNumericValue()]

     */
    function convertStringToNumericValue()
    {
        $this->m_Cells->convertStringToNumericValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.copyColumn(com.aspose.cells.Cells, int, int)]

      @param oCells0  com.aspose.cells.Cells
      @param pInt1  int
      @param pInt2  int
     */
    function copyColumn($oCells0, $pInt1, $pInt2)
    {
        $this->m_Cells->copyColumn(ClassFactory::_t1($oCells0), $pInt1, $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.copyColumns(com.aspose.cells.Cells, int, int, int)]

      @param oCells0  com.aspose.cells.Cells
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
     */
    function copyColumns($oCells0, $pInt1, $pInt2, $pInt3)
    {
        $this->m_Cells->copyColumns(ClassFactory::_t1($oCells0), $pInt1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.copyRow(com.aspose.cells.Cells, int, int)]

      @param oCells0  com.aspose.cells.Cells
      @param pInt1  int
      @param pInt2  int
     */
    function copyRow($oCells0, $pInt1, $pInt2)
    {
        $this->m_Cells->copyRow(ClassFactory::_t1($oCells0), $pInt1, $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.copyRows(com.aspose.cells.Cells, int, int, int)]

      @param oCells0  com.aspose.cells.Cells
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
     */
    function copyRows($oCells0, $pInt1, $pInt2, $pInt3)
    {
        $this->m_Cells->copyRows(ClassFactory::_t1($oCells0), $pInt1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.createRange(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.Range
     */
    function createRangeS($oString0)
    {
        return ClassFactory::_t2($this->m_Cells->createRange($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.createRange(java.lang.String, java.lang.String)]

      @param oString0  String
      @param oString1  String
      @return com.aspose.cells.Range
     */
    function createRangeSS($oString0, $oString1)
    {
        return ClassFactory::_t2($this->m_Cells->createRange($oString0, $oString1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.createRange(int, int, boolean)]

      @param pInt0  int
      @param pInt1  int
      @param pBoolean2  boolean
      @return com.aspose.cells.Range
     */
    function createRangeIIB($pInt0, $pInt1, $pBoolean2)
    {
        return ClassFactory::_t2($this->m_Cells->createRange($pInt0, $pInt1, $pBoolean2));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.createRange(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @return com.aspose.cells.Range
     */
    function createRangeIIII($pInt0, $pInt1, $pInt2, $pInt3)
    {
        return ClassFactory::_t2($this->m_Cells->createRange($pInt0, $pInt1, $pInt2, $pInt3));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.deleteBlankColumns()]

     */
    function deleteBlankColumns()
    {
        $this->m_Cells->deleteBlankColumns();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.deleteBlankRows()]

     */
    function deleteBlankRows()
    {
        $this->m_Cells->deleteBlankRows();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.deleteColumn(int)]

      @param pInt0  int
     */
    function deleteColumnI($pInt0)
    {
        $this->m_Cells->deleteColumn($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.deleteColumn(int, boolean)]

      @param pInt0  int
      @param pBoolean1  boolean
     */
    function deleteColumnIB($pInt0, $pBoolean1)
    {
        $this->m_Cells->deleteColumn($pInt0, $pBoolean1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.deleteColumns(int, int, boolean)]

      @param pInt0  int
      @param pInt1  int
      @param pBoolean2  boolean
     */
    function deleteColumns($pInt0, $pInt1, $pBoolean2)
    {
        $this->m_Cells->deleteColumns($pInt0, $pInt1, $pBoolean2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.deleteRange(int, int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pInt4  int
     */
    function deleteRange($pInt0, $pInt1, $pInt2, $pInt3, $pInt4)
    {
        $this->m_Cells->deleteRange($pInt0, $pInt1, $pInt2, $pInt3, $pInt4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.deleteRow(int)]

      @param pInt0  int
     */
    function deleteRow($pInt0)
    {
        $this->m_Cells->deleteRow($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.deleteRows(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return boolean
     */
    function deleteRowsII($pInt0, $pInt1)
    {
        return $this->m_Cells->deleteRows($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.deleteRows(int, int, boolean)]

      @param pInt0  int
      @param pInt1  int
      @param pBoolean2  boolean
      @return boolean
     */
    function deleteRowsIIB($pInt0, $pInt1, $pBoolean2)
    {
        return $this->m_Cells->deleteRows($pInt0, $pInt1, $pBoolean2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.endCellInColumn(short)]

      @param pShort0  short
      @return com.aspose.cells.Cell
     */
    function endCellInColumnS($pShort0)
    {
        return ClassFactory::_t2($this->m_Cells->endCellInColumn($pShort0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.endCellInColumn(int, int, short, short)]

      @param pInt0  int
      @param pInt1  int
      @param pShort2  short
      @param pShort3  short
      @return com.aspose.cells.Cell
     */
    function endCellInColumnIISS($pInt0, $pInt1, $pShort2, $pShort3)
    {
        return ClassFactory::_t2($this->m_Cells->endCellInColumn($pInt0, $pInt1, $pShort2, $pShort3));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.endCellInRow(int)]

      @param pInt0  int
      @return com.aspose.cells.Cell
     */
    function endCellInRowI($pInt0)
    {
        return ClassFactory::_t2($this->m_Cells->endCellInRow($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.endCellInRow(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @return com.aspose.cells.Cell
     */
    function endCellInRowIIII($pInt0, $pInt1, $pInt2, $pInt3)
    {
        return ClassFactory::_t2($this->m_Cells->endCellInRow($pInt0, $pInt1, $pInt2, $pInt3));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.exportArray(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @return array, corresponding java type is {java.lang.Object[][]}
     */
    function exportArray($pInt0, $pInt1, $pInt2, $pInt3)
    {
        return ClassFactory::_t2($this->m_Cells->exportArray($pInt0, $pInt1, $pInt2, $pInt3));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.exportTypeArray(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @return int[][]
     */
    function exportTypeArray($pInt0, $pInt1, $pInt2, $pInt3)
    {
        return $this->m_Cells->exportTypeArray($pInt0, $pInt1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.find(java.lang.Object, com.aspose.cells.Cell, com.aspose.cells.FindOptions)]

      @param oObject0  corresponding java type is {java.lang.Object}
      @param oCell1  com.aspose.cells.Cell
      @param oFindOptions2  com.aspose.cells.FindOptions
      @return com.aspose.cells.Cell
     */
    function find($oObject0, $oCell1, $oFindOptions2)
    {
        return ClassFactory::_t2($this->m_Cells->find(ClassFactory::_t1($oObject0), ClassFactory::_t1($oCell1), ClassFactory::_t1($oFindOptions2)));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.findFormula(java.lang.String, com.aspose.cells.Cell)]

      @param oString0  String
      @param oCell1  com.aspose.cells.Cell
      @return com.aspose.cells.Cell
     */
    function findFormula($oString0, $oCell1)
    {
        return ClassFactory::_t2($this->m_Cells->findFormula($oString0, ClassFactory::_t1($oCell1)));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.findFormulaContains(java.lang.String, com.aspose.cells.Cell)]

      @param oString0  String
      @param oCell1  com.aspose.cells.Cell
      @return com.aspose.cells.Cell
     */
    function findFormulaContains($oString0, $oCell1)
    {
        return ClassFactory::_t2($this->m_Cells->findFormulaContains($oString0, ClassFactory::_t1($oCell1)));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.findNumber(double, com.aspose.cells.Cell)]

      @param pDouble0  double
      @param oCell1  com.aspose.cells.Cell
      @return com.aspose.cells.Cell
     */
    function findNumberDC($pDouble0, $oCell1)
    {
        return ClassFactory::_t2($this->m_Cells->findNumber($pDouble0, ClassFactory::_t1($oCell1)));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.findNumber(int, com.aspose.cells.Cell)]

      @param pInt0  int
      @param oCell1  com.aspose.cells.Cell
      @return com.aspose.cells.Cell
     */
    function findNumberIC($pInt0, $oCell1)
    {
        return ClassFactory::_t2($this->m_Cells->findNumber($pInt0, ClassFactory::_t1($oCell1)));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.findString(java.lang.String, com.aspose.cells.Cell)]

      @param oString0  String
      @param oCell1  com.aspose.cells.Cell
      @return com.aspose.cells.Cell
     */
    function findStringSC($oString0, $oCell1)
    {
        return ClassFactory::_t2($this->m_Cells->findString($oString0, ClassFactory::_t1($oCell1)));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.findString(java.lang.String, com.aspose.cells.Cell, boolean)]

      @param oString0  String
      @param oCell1  com.aspose.cells.Cell
      @param pBoolean2  boolean
      @return com.aspose.cells.Cell
     */
    function findStringSCB($oString0, $oCell1, $pBoolean2)
    {
        return ClassFactory::_t2($this->m_Cells->findString($oString0, ClassFactory::_t1($oCell1), $pBoolean2));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.findString(java.lang.String, com.aspose.cells.Cell, com.aspose.cells.CellArea)]

      @param oString0  String
      @param oCell1  com.aspose.cells.Cell
      @param oCellArea2  com.aspose.cells.CellArea
      @return com.aspose.cells.Cell
     */
    function findStringSCC($oString0, $oCell1, $oCellArea2)
    {
        return ClassFactory::_t2($this->m_Cells->findString($oString0, ClassFactory::_t1($oCell1), ClassFactory::_t1($oCellArea2)));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.findString(java.lang.String, com.aspose.cells.Cell, com.aspose.cells.FindOptions)]

      @param oString0  String
      @param oCell1  com.aspose.cells.Cell
      @param oFindOptions2  com.aspose.cells.FindOptions
      @return com.aspose.cells.Cell
     */
    function findStringSCF($oString0, $oCell1, $oFindOptions2)
    {
        return ClassFactory::_t2($this->m_Cells->findString($oString0, ClassFactory::_t1($oCell1), ClassFactory::_t1($oFindOptions2)));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.findString(java.lang.String, com.aspose.cells.Cell, com.aspose.cells.CellArea, boolean)]

      @param oString0  String
      @param oCell1  com.aspose.cells.Cell
      @param oCellArea2  com.aspose.cells.CellArea
      @param pBoolean3  boolean
      @return com.aspose.cells.Cell
     */
    function findStringSCCB($oString0, $oCell1, $oCellArea2, $pBoolean3)
    {
        return ClassFactory::_t2($this->m_Cells->findString($oString0, ClassFactory::_t1($oCell1), ClassFactory::_t1($oCellArea2), $pBoolean3));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.findStringContains(java.lang.String, com.aspose.cells.Cell)]

      @param oString0  String
      @param oCell1  com.aspose.cells.Cell
      @return com.aspose.cells.Cell
     */
    function findStringContainsSC($oString0, $oCell1)
    {
        return ClassFactory::_t2($this->m_Cells->findStringContains($oString0, ClassFactory::_t1($oCell1)));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.findStringContains(java.lang.String, com.aspose.cells.Cell, boolean)]

      @param oString0  String
      @param oCell1  com.aspose.cells.Cell
      @param pBoolean2  boolean
      @return com.aspose.cells.Cell
     */
    function findStringContainsSCB($oString0, $oCell1, $pBoolean2)
    {
        return ClassFactory::_t2($this->m_Cells->findStringContains($oString0, ClassFactory::_t1($oCell1), $pBoolean2));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.findStringContains(java.lang.String, com.aspose.cells.Cell, boolean, com.aspose.cells.CellArea)]

      @param oString0  String
      @param oCell1  com.aspose.cells.Cell
      @param pBoolean2  boolean
      @param oCellArea3  com.aspose.cells.CellArea
      @return com.aspose.cells.Cell
     */
    function findStringContainsSCBC($oString0, $oCell1, $pBoolean2, $oCellArea3)
    {
        return ClassFactory::_t2($this->m_Cells->findStringContains($oString0, ClassFactory::_t1($oCell1), $pBoolean2, ClassFactory::_t1($oCellArea3)));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.findStringEndsWith(java.lang.String, com.aspose.cells.Cell)]

      @param oString0  String
      @param oCell1  com.aspose.cells.Cell
      @return com.aspose.cells.Cell
     */
    function findStringEndsWith($oString0, $oCell1)
    {
        return ClassFactory::_t2($this->m_Cells->findStringEndsWith($oString0, ClassFactory::_t1($oCell1)));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.findStringStartsWith(java.lang.String, com.aspose.cells.Cell)]

      @param oString0  String
      @param oCell1  com.aspose.cells.Cell
      @return com.aspose.cells.Cell
     */
    function findStringStartsWith($oString0, $oCell1)
    {
        return ClassFactory::_t2($this->m_Cells->findStringStartsWith($oString0, ClassFactory::_t1($oCell1)));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.get(int)]

      @param pInt0  int
      @return com.aspose.cells.Cell
     */
    function getI($pInt0)
    {
        return ClassFactory::_t2($this->m_Cells->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.get(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.Cell
     */
    function getS($oString0)
    {
        return ClassFactory::_t2($this->m_Cells->get($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.get(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return com.aspose.cells.Cell
     */
    function getII($pInt0, $pInt1)
    {
        return ClassFactory::_t2($this->m_Cells->get($pInt0, $pInt1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getCell(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return com.aspose.cells.Cell
     */
    function getCell($pInt0, $pInt1)
    {
        return ClassFactory::_t2($this->m_Cells->getCell($pInt0, $pInt1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getCellStyle(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return com.aspose.cells.Style
     */
    function getCellStyle($pInt0, $pInt1)
    {
        return ClassFactory::_t2($this->m_Cells->getCellStyle($pInt0, $pInt1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getColumn(int)]

      @param pInt0  int
      @return com.aspose.cells.Column
     */
    function getColumn($pInt0)
    {
        return ClassFactory::_t2($this->m_Cells->getColumn($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getColumnWidth(int)]

      @param pInt0  int
      @return double
     */
    function getColumnWidth($pInt0)
    {
        return $this->m_Cells->getColumnWidth($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getColumnWidthInch(int)]

      @param pInt0  int
      @return double
     */
    function getColumnWidthInch($pInt0)
    {
        return $this->m_Cells->getColumnWidthInch($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getColumnWidthPixel(int)]

      @param pInt0  int
      @return int
     */
    function getColumnWidthPixel($pInt0)
    {
        return $this->m_Cells->getColumnWidthPixel($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getColumns()]

      @return com.aspose.cells.ColumnCollection
     */
    function getColumns()
    {
        return ClassFactory::_t2($this->m_Cells->getColumns());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getCount()]

      @return int
     */
    function getCount()
    {
        return $this->m_Cells->getCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getDependents(boolean, int, int)]

      @param pBoolean0  boolean
      @param pInt1  int
      @param pInt2  int
      @return com.aspose.cells.Cell[]
     */
    function getDependents($pBoolean0, $pInt1, $pInt2)
    {
        return ClassFactory::_t2($this->m_Cells->getDependents($pBoolean0, $pInt1, $pInt2));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getEnd()]

      @return com.aspose.cells.Cell
     */
    function getEnd()
    {
        return ClassFactory::_t2($this->m_Cells->getEnd());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getFirstCell()]

      @return com.aspose.cells.Cell
     */
    function getFirstCell()
    {
        return ClassFactory::_t2($this->m_Cells->getFirstCell());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getGroupedColumnOutlineLevel(int)]

      @param pInt0  int
      @return int
     */
    function getGroupedColumnOutlineLevel($pInt0)
    {
        return $this->m_Cells->getGroupedColumnOutlineLevel($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getGroupedRowOutlineLevel(int)]

      @param pInt0  int
      @return int
     */
    function getGroupedRowOutlineLevel($pInt0)
    {
        return $this->m_Cells->getGroupedRowOutlineLevel($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getLastCell()]

      @return com.aspose.cells.Cell
     */
    function getLastCell()
    {
        return ClassFactory::_t2($this->m_Cells->getLastCell());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getLastDataRow(int)]

      @param pInt0  int
      @return int
     */
    function getLastDataRow($pInt0)
    {
        return $this->m_Cells->getLastDataRow($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getMaxColumn()]

      @return int
     */
    function getMaxColumn()
    {
        return $this->m_Cells->getMaxColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getMaxDataColumn()]

      @return int
     */
    function getMaxDataColumn()
    {
        return $this->m_Cells->getMaxDataColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getMaxDataRow()]

      @return int
     */
    function getMaxDataRow()
    {
        return $this->m_Cells->getMaxDataRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getMaxDisplayRange()]

      @return com.aspose.cells.Range
     */
    function getMaxDisplayRange()
    {
        return ClassFactory::_t2($this->m_Cells->getMaxDisplayRange());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getMaxGroupedColumnOutlineLevel()]

      @return int
     */
    function getMaxGroupedColumnOutlineLevel()
    {
        return $this->m_Cells->getMaxGroupedColumnOutlineLevel();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getMaxGroupedRowOutlineLevel()]

      @return int
     */
    function getMaxGroupedRowOutlineLevel()
    {
        return $this->m_Cells->getMaxGroupedRowOutlineLevel();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getMaxRow()]

      @return int
     */
    function getMaxRow()
    {
        return $this->m_Cells->getMaxRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getMemorySetting()]

      @return int
     */
    function getMemorySetting()
    {
        return $this->m_Cells->getMemorySetting();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getMergedCells()]

      @return array, corresponding java type is {java.util.ArrayList}
     */
    function getMergedCells()
    {
        return ClassFactory::_t2($this->m_Cells->getMergedCells());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getMinColumn()]

      @return int
     */
    function getMinColumn()
    {
        return $this->m_Cells->getMinColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getMinDataColumn()]

      @return int
     */
    function getMinDataColumn()
    {
        return $this->m_Cells->getMinDataColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getMinDataRow()]

      @return int
     */
    function getMinDataRow()
    {
        return $this->m_Cells->getMinDataRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getMinRow()]

      @return int
     */
    function getMinRow()
    {
        return $this->m_Cells->getMinRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getPreserveString()]

      @return boolean
     */
    function getPreserveString()
    {
        return $this->m_Cells->getPreserveString();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getRanges()]

      @return com.aspose.cells.RangeCollection
     */
    function getRanges()
    {
        return ClassFactory::_t2($this->m_Cells->getRanges());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getRow(int)]

      @param pInt0  int
      @return com.aspose.cells.Row
     */
    function getRow($pInt0)
    {
        return ClassFactory::_t2($this->m_Cells->getRow($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getRowEnumerator()]

      @return corresponding java type is {java.util.Iterator}
     */
    function getRowEnumerator()
    {
        return ClassFactory::_t2($this->m_Cells->getRowEnumerator());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getRowHeight(int)]

      @param pInt0  int
      @return double
     */
    function getRowHeight($pInt0)
    {
        return $this->m_Cells->getRowHeight($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getRowHeightInch(int)]

      @param pInt0  int
      @return double
     */
    function getRowHeightInch($pInt0)
    {
        return $this->m_Cells->getRowHeightInch($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getRowHeightPixel(int)]

      @param pInt0  int
      @return int
     */
    function getRowHeightPixel($pInt0)
    {
        return $this->m_Cells->getRowHeightPixel($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getRows()]

      @return com.aspose.cells.RowCollection
     */
    function getRows()
    {
        return ClassFactory::_t2($this->m_Cells->getRows());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getStandardHeight()]

      @return double
     */
    function getStandardHeight()
    {
        return $this->m_Cells->getStandardHeight();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getStandardHeightPixels()]

      @return int
     */
    function getStandardHeightPixels()
    {
        return $this->m_Cells->getStandardHeightPixels();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getStandardWidth()]

      @return double
     */
    function getStandardWidth()
    {
        return $this->m_Cells->getStandardWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getStandardWidthInch()]

      @return double
     */
    function getStandardWidthInch()
    {
        return $this->m_Cells->getStandardWidthInch();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getStandardWidthPixels()]

      @return int
     */
    function getStandardWidthPixels()
    {
        return $this->m_Cells->getStandardWidthPixels();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getStart()]

      @return com.aspose.cells.Cell
     */
    function getStart()
    {
        return ClassFactory::_t2($this->m_Cells->getStart());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.getViewColumnWidthPixel(int)]

      @param pInt0  int
      @return int
     */
    function getViewColumnWidthPixel($pInt0)
    {
        return $this->m_Cells->getViewColumnWidthPixel($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.groupColumns(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function groupColumnsII($pInt0, $pInt1)
    {
        $this->m_Cells->groupColumns($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.groupColumns(int, int, boolean)]

      @param pInt0  int
      @param pInt1  int
      @param pBoolean2  boolean
     */
    function groupColumnsIIB($pInt0, $pInt1, $pBoolean2)
    {
        $this->m_Cells->groupColumns($pInt0, $pInt1, $pBoolean2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.groupRows(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function groupRowsII($pInt0, $pInt1)
    {
        $this->m_Cells->groupRows($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.groupRows(int, int, boolean)]

      @param pInt0  int
      @param pInt1  int
      @param pBoolean2  boolean
     */
    function groupRowsIIB($pInt0, $pInt1, $pBoolean2)
    {
        $this->m_Cells->groupRows($pInt0, $pInt1, $pBoolean2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.hideColumn(int)]

      @param pInt0  int
     */
    function hideColumn($pInt0)
    {
        $this->m_Cells->hideColumn($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.hideColumns(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function hideColumns($pInt0, $pInt1)
    {
        $this->m_Cells->hideColumns($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.hideGroupDetail(boolean, int)]

      @param pBoolean0  boolean
      @param pInt1  int
     */
    function hideGroupDetail($pBoolean0, $pInt1)
    {
        $this->m_Cells->hideGroupDetail($pBoolean0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.hideRow(int)]

      @param pInt0  int
     */
    function hideRow($pInt0)
    {
        $this->m_Cells->hideRow($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.hideRows(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function hideRows($pInt0, $pInt1)
    {
        $this->m_Cells->hideRows($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importArray(double[][], int, int)]

      @param arrP2DDouble0  double[][]
      @param pInt1  int
      @param pInt2  int
     */
    function importArrayDII($arrP2DDouble0, $pInt1, $pInt2)
    {
        $this->m_Cells->importArray($arrP2DDouble0, $pInt1, $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importArray(int[][], int, int)]

      @param arrP2DInt0  int[][]
      @param pInt1  int
      @param pInt2  int
     */
    function importArrayIII($arrP2DInt0, $pInt1, $pInt2)
    {
        $this->m_Cells->importArray($arrP2DInt0, $pInt1, $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importArray(java.lang.String[][], int, int)]

      @param arrD2DString0  array, corresponding java type is {String[][]}
      @param pInt1  int
      @param pInt2  int
     */
    function importArraySII($arrD2DString0, $pInt1, $pInt2)
    {
        $this->m_Cells->importArray($arrD2DString0, $pInt1, $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importArray(double[], int, int, boolean)]

      @param arrP1DDouble0  double[]
      @param pInt1  int
      @param pInt2  int
      @param pBoolean3  boolean
     */
    function importArrayDIIB($arrP1DDouble0, $pInt1, $pInt2, $pBoolean3)
    {
        $this->m_Cells->importArray($arrP1DDouble0, $pInt1, $pInt2, $pBoolean3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importArray(int[], int, int, boolean)]

      @param arrP1DInt0  int[]
      @param pInt1  int
      @param pInt2  int
      @param pBoolean3  boolean
     */
    function importArrayIIIB($arrP1DInt0, $pInt1, $pInt2, $pBoolean3)
    {
        $this->m_Cells->importArray($arrP1DInt0, $pInt1, $pInt2, $pBoolean3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importArray(java.lang.String[], int, int, boolean)]

      @param arrD1DString0  array, corresponding java type is {String[]}
      @param pInt1  int
      @param pInt2  int
      @param pBoolean3  boolean
     */
    function importArraySIIB($arrD1DString0, $pInt1, $pInt2, $pBoolean3)
    {
        $this->m_Cells->importArray($arrD1DString0, $pInt1, $pInt2, $pBoolean3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importArrayList(java.util.ArrayList, int, int, boolean)]

      @param arrA1DFromArrayList0  array, corresponding java type is {java.util.ArrayList}
      @param pInt1  int
      @param pInt2  int
      @param pBoolean3  boolean
     */
    function importArrayList($arrA1DFromArrayList0, $pInt1, $pInt2, $pBoolean3)
    {
        $this->m_Cells->importArrayList(ClassFactory::_t1($arrA1DFromArrayList0), $pInt1, $pInt2, $pBoolean3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importCSV(java.io.InputStream, com.aspose.cells.TxtLoadOptions, int, int)]

      @param oInputStream0  corresponding java type is {java.io.InputStream}
      @param oTxtLoadOptions1  com.aspose.cells.TxtLoadOptions
      @param pInt2  int
      @param pInt3  int
     */
    function importCSVITII($oInputStream0, $oTxtLoadOptions1, $pInt2, $pInt3)
    {
        $this->m_Cells->importCSV(ClassFactory::_t1($oInputStream0), ClassFactory::_t1($oTxtLoadOptions1), $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importCSV(java.lang.String, com.aspose.cells.TxtLoadOptions, int, int)]

      @param oString0  String
      @param oTxtLoadOptions1  com.aspose.cells.TxtLoadOptions
      @param pInt2  int
      @param pInt3  int
     */
    function importCSVSTII($oString0, $oTxtLoadOptions1, $pInt2, $pInt3)
    {
        $this->m_Cells->importCSV($oString0, ClassFactory::_t1($oTxtLoadOptions1), $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importCSV(java.io.InputStream, java.lang.String, boolean, int, int)]

      @param oInputStream0  corresponding java type is {java.io.InputStream}
      @param oString1  String
      @param pBoolean2  boolean
      @param pInt3  int
      @param pInt4  int
     */
    function importCSVISBII($oInputStream0, $oString1, $pBoolean2, $pInt3, $pInt4)
    {
        $this->m_Cells->importCSV(ClassFactory::_t1($oInputStream0), $oString1, $pBoolean2, $pInt3, $pInt4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importCSV(java.lang.String, java.lang.String, boolean, int, int)]

      @param oString0  String
      @param oString1  String
      @param pBoolean2  boolean
      @param pInt3  int
      @param pInt4  int
     */
    function importCSVSSBII($oString0, $oString1, $pBoolean2, $pInt3, $pInt4)
    {
        $this->m_Cells->importCSV($oString0, $oString1, $pBoolean2, $pInt3, $pInt4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importCustomObjects(java.util.Collection, int, int, com.aspose.cells.ImportTableOptions)]

      @param arrA1DFromCollection0  array, corresponding java type is {java.util.Collection}
      @param pInt1  int
      @param pInt2  int
      @param oImportTableOptions3  com.aspose.cells.ImportTableOptions
      @return int
     */
    function importCustomObjectsCIII($arrA1DFromCollection0, $pInt1, $pInt2, $oImportTableOptions3)
    {
        return $this->m_Cells->importCustomObjects(ClassFactory::_t1($arrA1DFromCollection0), $pInt1, $pInt2, ClassFactory::_t1($oImportTableOptions3));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importCustomObjects(java.util.Collection, java.lang.String[], boolean, int, int, int, boolean, java.lang.String, boolean)]

      @param arrA1DFromCollection0  array, corresponding java type is {java.util.Collection}
      @param arrD1DString1  array, corresponding java type is {String[]}
      @param pBoolean2  boolean
      @param pInt3  int
      @param pInt4  int
      @param pInt5  int
      @param pBoolean6  boolean
      @param oString7  String
      @param pBoolean8  boolean
      @return int
     */
    function importCustomObjectsCSBIIIBSB($arrA1DFromCollection0, $arrD1DString1, $pBoolean2, $pInt3, $pInt4, $pInt5, $pBoolean6, $oString7, $pBoolean8)
    {
        return $this->m_Cells->importCustomObjects(ClassFactory::_t1($arrA1DFromCollection0), $arrD1DString1, $pBoolean2, $pInt3, $pInt4, $pInt5, $pBoolean6, $oString7, $pBoolean8);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importData(com.aspose.cells.ICellsDataTable, int, int, com.aspose.cells.ImportTableOptions)]

      @param oICellsDataTable0  com.aspose.cells.ICellsDataTable
      @param pInt1  int
      @param pInt2  int
      @param oImportTableOptions3  com.aspose.cells.ImportTableOptions
      @return int
     */
    function importData($oICellsDataTable0, $pInt1, $pInt2, $oImportTableOptions3)
    {
        return $this->m_Cells->importData(ClassFactory::_t1($oICellsDataTable0), $pInt1, $pInt2, ClassFactory::_t1($oImportTableOptions3));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importFormulaArray(java.lang.String[], int, int, boolean)]

      @param arrD1DString0  array, corresponding java type is {String[]}
      @param pInt1  int
      @param pInt2  int
      @param pBoolean3  boolean
     */
    function importFormulaArray($arrD1DString0, $pInt1, $pInt2, $pBoolean3)
    {
        $this->m_Cells->importFormulaArray($arrD1DString0, $pInt1, $pInt2, $pBoolean3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importObjectArray(java.lang.Object[], int, int, boolean)]

      @param arrO1DObject0  array, corresponding java type is {java.lang.Object[]}
      @param pInt1  int
      @param pInt2  int
      @param pBoolean3  boolean
     */
    function importObjectArrayOIIB($arrO1DObject0, $pInt1, $pInt2, $pBoolean3)
    {
        $this->m_Cells->importObjectArray(ClassFactory::_t1($arrO1DObject0), $pInt1, $pInt2, $pBoolean3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importObjectArray(java.lang.Object[], int, int, boolean, int)]

      @param arrO1DObject0  array, corresponding java type is {java.lang.Object[]}
      @param pInt1  int
      @param pInt2  int
      @param pBoolean3  boolean
      @param pInt4  int
     */
    function importObjectArrayOIIBI($arrO1DObject0, $pInt1, $pInt2, $pBoolean3, $pInt4)
    {
        $this->m_Cells->importObjectArray(ClassFactory::_t1($arrO1DObject0), $pInt1, $pInt2, $pBoolean3, $pInt4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importResultSet(java.sql.ResultSet, java.lang.String, boolean)]

      @param oResultSet0  corresponding java type is {java.sql.ResultSet}
      @param oString1  String
      @param pBoolean2  boolean
      @return int
     */
    function importResultSetRSB($oResultSet0, $oString1, $pBoolean2)
    {
        return $this->m_Cells->importResultSet(ClassFactory::_t1($oResultSet0), $oString1, $pBoolean2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importResultSet(java.sql.ResultSet, int, int, boolean)]

      @param oResultSet0  corresponding java type is {java.sql.ResultSet}
      @param pInt1  int
      @param pInt2  int
      @param pBoolean3  boolean
      @return int
     */
    function importResultSetRIIB($oResultSet0, $pInt1, $pInt2, $pBoolean3)
    {
        return $this->m_Cells->importResultSet(ClassFactory::_t1($oResultSet0), $pInt1, $pInt2, $pBoolean3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importResultSet(java.sql.ResultSet, java.lang.String, int, int, boolean)]

      @param oResultSet0  corresponding java type is {java.sql.ResultSet}
      @param oString1  String
      @param pInt2  int
      @param pInt3  int
      @param pBoolean4  boolean
      @return int
     */
    function importResultSetRSIIB($oResultSet0, $oString1, $pInt2, $pInt3, $pBoolean4)
    {
        return $this->m_Cells->importResultSet(ClassFactory::_t1($oResultSet0), $oString1, $pInt2, $pInt3, $pBoolean4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importResultSet(java.sql.ResultSet, int, int, boolean, java.lang.String, boolean)]

      @param oResultSet0  corresponding java type is {java.sql.ResultSet}
      @param pInt1  int
      @param pInt2  int
      @param pBoolean3  boolean
      @param oString4  String
      @param pBoolean5  boolean
      @return int
     */
    function importResultSetRIIBSB($oResultSet0, $pInt1, $pInt2, $pBoolean3, $oString4, $pBoolean5)
    {
        return $this->m_Cells->importResultSet(ClassFactory::_t1($oResultSet0), $pInt1, $pInt2, $pBoolean3, $oString4, $pBoolean5);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importResultSet(java.sql.ResultSet, int, int, int, int, boolean)]

      @param oResultSet0  corresponding java type is {java.sql.ResultSet}
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pInt4  int
      @param pBoolean5  boolean
      @return int
     */
    function importResultSetRIIIIB($oResultSet0, $pInt1, $pInt2, $pInt3, $pInt4, $pBoolean5)
    {
        return $this->m_Cells->importResultSet(ClassFactory::_t1($oResultSet0), $pInt1, $pInt2, $pInt3, $pInt4, $pBoolean5);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importResultSet(java.sql.ResultSet, int, int, int, int, boolean, java.lang.String, boolean)]

      @param oResultSet0  corresponding java type is {java.sql.ResultSet}
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pInt4  int
      @param pBoolean5  boolean
      @param oString6  String
      @param pBoolean7  boolean
      @return int
     */
    function importResultSetRIIIIBSB($oResultSet0, $pInt1, $pInt2, $pInt3, $pInt4, $pBoolean5, $oString6, $pBoolean7)
    {
        return $this->m_Cells->importResultSet(ClassFactory::_t1($oResultSet0), $pInt1, $pInt2, $pInt3, $pInt4, $pBoolean5, $oString6, $pBoolean7);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importTwoDimensionArray(java.lang.Object[][], int, int)]

      @param arrO2DObject0  array, corresponding java type is {java.lang.Object[][]}
      @param pInt1  int
      @param pInt2  int
     */
    function importTwoDimensionArrayOII($arrO2DObject0, $pInt1, $pInt2)
    {
        $this->m_Cells->importTwoDimensionArray(ClassFactory::_t1($arrO2DObject0), $pInt1, $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importTwoDimensionArray(java.lang.Object[][], int, int, boolean)]

      @param arrO2DObject0  array, corresponding java type is {java.lang.Object[][]}
      @param pInt1  int
      @param pInt2  int
      @param pBoolean3  boolean
     */
    function importTwoDimensionArrayOIIB($arrO2DObject0, $pInt1, $pInt2, $pBoolean3)
    {
        $this->m_Cells->importTwoDimensionArray(ClassFactory::_t1($arrO2DObject0), $pInt1, $pInt2, $pBoolean3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.importTwoDimensionArray(java.lang.Object[][], java.lang.Object[][], int, int, boolean)]

      @param arrO2DObject0  array, corresponding java type is {java.lang.Object[][]}
      @param arrO2DObject1  array, corresponding java type is {java.lang.Object[][]}
      @param pInt2  int
      @param pInt3  int
      @param pBoolean4  boolean
     */
    function importTwoDimensionArrayOOIIB($arrO2DObject0, $arrO2DObject1, $pInt2, $pInt3, $pBoolean4)
    {
        $this->m_Cells->importTwoDimensionArray(ClassFactory::_t1($arrO2DObject0), ClassFactory::_t1($arrO2DObject1), $pInt2, $pInt3, $pBoolean4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.insertColumn(int)]

      @param pInt0  int
     */
    function insertColumnI($pInt0)
    {
        $this->m_Cells->insertColumn($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.insertColumn(int, boolean)]

      @param pInt0  int
      @param pBoolean1  boolean
     */
    function insertColumnIB($pInt0, $pBoolean1)
    {
        $this->m_Cells->insertColumn($pInt0, $pBoolean1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.insertColumns(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function insertColumnsII($pInt0, $pInt1)
    {
        $this->m_Cells->insertColumns($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.insertColumns(int, int, boolean)]

      @param pInt0  int
      @param pInt1  int
      @param pBoolean2  boolean
     */
    function insertColumnsIIB($pInt0, $pInt1, $pBoolean2)
    {
        $this->m_Cells->insertColumns($pInt0, $pInt1, $pBoolean2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.insertRange(com.aspose.cells.CellArea, int)]

      @param oCellArea0  com.aspose.cells.CellArea
      @param pInt1  int
     */
    function insertRangeCI($oCellArea0, $pInt1)
    {
        $this->m_Cells->insertRange(ClassFactory::_t1($oCellArea0), $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.insertRange(com.aspose.cells.CellArea, int, int)]

      @param oCellArea0  com.aspose.cells.CellArea
      @param pInt1  int
      @param pInt2  int
     */
    function insertRangeCII($oCellArea0, $pInt1, $pInt2)
    {
        $this->m_Cells->insertRange(ClassFactory::_t1($oCellArea0), $pInt1, $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.insertRange(com.aspose.cells.CellArea, int, int, boolean)]

      @param oCellArea0  com.aspose.cells.CellArea
      @param pInt1  int
      @param pInt2  int
      @param pBoolean3  boolean
     */
    function insertRangeCIIB($oCellArea0, $pInt1, $pInt2, $pBoolean3)
    {
        $this->m_Cells->insertRange(ClassFactory::_t1($oCellArea0), $pInt1, $pInt2, $pBoolean3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.insertRow(int)]

      @param pInt0  int
     */
    function insertRow($pInt0)
    {
        $this->m_Cells->insertRow($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.insertRows(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function insertRowsII($pInt0, $pInt1)
    {
        $this->m_Cells->insertRows($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.insertRows(int, int, boolean)]

      @param pInt0  int
      @param pInt1  int
      @param pBoolean2  boolean
     */
    function insertRowsIIB($pInt0, $pInt1, $pBoolean2)
    {
        $this->m_Cells->insertRows($pInt0, $pInt1, $pBoolean2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.isBlankColumn(int)]

      @param pInt0  int
      @return boolean
     */
    function isBlankColumn($pInt0)
    {
        return $this->m_Cells->isBlankColumn($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.isColumnHidden(int)]

      @param pInt0  int
      @return boolean
     */
    function isColumnHidden($pInt0)
    {
        return $this->m_Cells->isColumnHidden($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.isDefaultRowHeightMatched()]

      @return boolean
     */
    function isDefaultRowHeightMatched()
    {
        return $this->m_Cells->isDefaultRowHeightMatched();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.isDeletingRangeEnabled(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @return boolean
     */
    function isDeletingRangeEnabled($pInt0, $pInt1, $pInt2, $pInt3)
    {
        return $this->m_Cells->isDeletingRangeEnabled($pInt0, $pInt1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.isRowHidden(int)]

      @param pInt0  int
      @return boolean
     */
    function isRowHidden($pInt0)
    {
        return $this->m_Cells->isRowHidden($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.iterator()]

      @return corresponding java type is {java.util.Iterator}
     */
    function iterator()
    {
        return ClassFactory::_t2($this->m_Cells->iterator());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.maxDataRowInColumn(int)]

      @param pInt0  int
      @return int
     */
    function maxDataRowInColumn($pInt0)
    {
        return $this->m_Cells->maxDataRowInColumn($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.merge(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
     */
    function mergeIIII($pInt0, $pInt1, $pInt2, $pInt3)
    {
        $this->m_Cells->merge($pInt0, $pInt1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.merge(int, int, int, int, boolean)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pBoolean4  boolean
     */
    function mergeIIIIB($pInt0, $pInt1, $pInt2, $pInt3, $pBoolean4)
    {
        $this->m_Cells->merge($pInt0, $pInt1, $pInt2, $pInt3, $pBoolean4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.merge(int, int, int, int, boolean, boolean)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pBoolean4  boolean
      @param pBoolean5  boolean
     */
    function mergeIIIIBB($pInt0, $pInt1, $pInt2, $pInt3, $pBoolean4, $pBoolean5)
    {
        $this->m_Cells->merge($pInt0, $pInt1, $pInt2, $pInt3, $pBoolean4, $pBoolean5);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.moveRange(com.aspose.cells.CellArea, int, int)]

      @param oCellArea0  com.aspose.cells.CellArea
      @param pInt1  int
      @param pInt2  int
     */
    function moveRange($oCellArea0, $pInt1, $pInt2)
    {
        $this->m_Cells->moveRange(ClassFactory::_t1($oCellArea0), $pInt1, $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.removeDuplicates(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
     */
    function removeDuplicates($pInt0, $pInt1, $pInt2, $pInt3)
    {
        $this->m_Cells->removeDuplicates($pInt0, $pInt1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.removeFormulas()]

     */
    function removeFormulas()
    {
        $this->m_Cells->removeFormulas();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.setColumnWidth(int, double)]

      @param pInt0  int
      @param pDouble1  double
     */
    function setColumnWidth($pInt0, $pDouble1)
    {
        $this->m_Cells->setColumnWidth($pInt0, $pDouble1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.setColumnWidthInch(int, double)]

      @param pInt0  int
      @param pDouble1  double
     */
    function setColumnWidthInch($pInt0, $pDouble1)
    {
        $this->m_Cells->setColumnWidthInch($pInt0, $pDouble1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.setColumnWidthPixel(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function setColumnWidthPixel($pInt0, $pInt1)
    {
        $this->m_Cells->setColumnWidthPixel($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.setDefaultRowHeightMatched(boolean)]

      @param pBoolean0  boolean
     */
    function setDefaultRowHeightMatched($pBoolean0)
    {
        $this->m_Cells->setDefaultRowHeightMatched($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.setMemorySetting(int)]

      @param pInt0  int
     */
    function setMemorySetting($pInt0)
    {
        $this->m_Cells->setMemorySetting($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.setPreserveString(boolean)]

      @param pBoolean0  boolean
     */
    function setPreserveString($pBoolean0)
    {
        $this->m_Cells->setPreserveString($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.setRowHeight(int, double)]

      @param pInt0  int
      @param pDouble1  double
     */
    function setRowHeight($pInt0, $pDouble1)
    {
        $this->m_Cells->setRowHeight($pInt0, $pDouble1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.setRowHeightInch(int, double)]

      @param pInt0  int
      @param pDouble1  double
     */
    function setRowHeightInch($pInt0, $pDouble1)
    {
        $this->m_Cells->setRowHeightInch($pInt0, $pDouble1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.setRowHeightPixel(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function setRowHeightPixel($pInt0, $pInt1)
    {
        $this->m_Cells->setRowHeightPixel($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.setStandardHeight(double)]

      @param pDouble0  double
     */
    function setStandardHeight($pDouble0)
    {
        $this->m_Cells->setStandardHeight($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.setStandardHeightPixels(int)]

      @param pInt0  int
     */
    function setStandardHeightPixels($pInt0)
    {
        $this->m_Cells->setStandardHeightPixels($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.setStandardWidth(double)]

      @param pDouble0  double
     */
    function setStandardWidth($pDouble0)
    {
        $this->m_Cells->setStandardWidth($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.setStandardWidthInch(double)]

      @param pDouble0  double
     */
    function setStandardWidthInch($pDouble0)
    {
        $this->m_Cells->setStandardWidthInch($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.setStandardWidthPixels(int)]

      @param pInt0  int
     */
    function setStandardWidthPixels($pInt0)
    {
        $this->m_Cells->setStandardWidthPixels($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.showGroupDetail(boolean, int)]

      @param pBoolean0  boolean
      @param pInt1  int
     */
    function showGroupDetail($pBoolean0, $pInt1)
    {
        $this->m_Cells->showGroupDetail($pBoolean0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.subtotal(com.aspose.cells.CellArea, int, int, int[])]

      @param oCellArea0  com.aspose.cells.CellArea
      @param pInt1  int
      @param pInt2  int
      @param arrP1DInt3  int[]
     */
    function subtotalCIII($oCellArea0, $pInt1, $pInt2, $arrP1DInt3)
    {
        $this->m_Cells->subtotal(ClassFactory::_t1($oCellArea0), $pInt1, $pInt2, $arrP1DInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.subtotal(com.aspose.cells.CellArea, int, int, int[], boolean, boolean, boolean)]

      @param oCellArea0  com.aspose.cells.CellArea
      @param pInt1  int
      @param pInt2  int
      @param arrP1DInt3  int[]
      @param pBoolean4  boolean
      @param pBoolean5  boolean
      @param pBoolean6  boolean
     */
    function subtotalCIIIBBB($oCellArea0, $pInt1, $pInt2, $arrP1DInt3, $pBoolean4, $pBoolean5, $pBoolean6)
    {
        $this->m_Cells->subtotal(ClassFactory::_t1($oCellArea0), $pInt1, $pInt2, $arrP1DInt3, $pBoolean4, $pBoolean5, $pBoolean6);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.unMerge(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
     */
    function unMerge($pInt0, $pInt1, $pInt2, $pInt3)
    {
        $this->m_Cells->unMerge($pInt0, $pInt1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.ungroupColumns(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function ungroupColumns($pInt0, $pInt1)
    {
        $this->m_Cells->ungroupColumns($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.ungroupRows(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function ungroupRowsII($pInt0, $pInt1)
    {
        $this->m_Cells->ungroupRows($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.ungroupRows(int, int, boolean)]

      @param pInt0  int
      @param pInt1  int
      @param pBoolean2  boolean
     */
    function ungroupRowsIIB($pInt0, $pInt1, $pBoolean2)
    {
        $this->m_Cells->ungroupRows($pInt0, $pInt1, $pBoolean2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.unhideColumn(int, double)]

      @param pInt0  int
      @param pDouble1  double
     */
    function unhideColumn($pInt0, $pDouble1)
    {
        $this->m_Cells->unhideColumn($pInt0, $pDouble1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.unhideColumns(int, int, double)]

      @param pInt0  int
      @param pInt1  int
      @param pDouble2  double
     */
    function unhideColumns($pInt0, $pInt1, $pDouble2)
    {
        $this->m_Cells->unhideColumns($pInt0, $pInt1, $pDouble2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.unhideRow(int, double)]

      @param pInt0  int
      @param pDouble1  double
     */
    function unhideRow($pInt0, $pDouble1)
    {
        $this->m_Cells->unhideRow($pInt0, $pDouble1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells.unhideRows(int, int, double)]

      @param pInt0  int
      @param pInt1  int
      @param pDouble2  double
     */
    function unhideRows($pInt0, $pInt1, $pDouble2)
    {
        $this->m_Cells->unhideRows($pInt0, $pInt1, $pDouble2);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.Cells_DateTime]
  
 */
class Cells_DateTime
{
    public $m_Cells_DateTime;
    
    function __construct($cells_DateTime)
    {
    	$this->m_Cells_DateTime = $cells_DateTime;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.addDays(double)]

      @param pDouble0  double
      @return corresponding java type is {com.aspose.cells.DateTime}
     */
    function addDays($pDouble0)
    {
        return ClassFactory::_t2($this->m_Cells_DateTime->addDays($pDouble0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.addHours(double)]

      @param pDouble0  double
      @return corresponding java type is {com.aspose.cells.DateTime}
     */
    function addHours($pDouble0)
    {
        return ClassFactory::_t2($this->m_Cells_DateTime->addHours($pDouble0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.addMilliseconds(double)]

      @param pDouble0  double
      @return corresponding java type is {com.aspose.cells.DateTime}
     */
    function addMilliseconds($pDouble0)
    {
        return ClassFactory::_t2($this->m_Cells_DateTime->addMilliseconds($pDouble0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.addMinutes(double)]

      @param pDouble0  double
      @return corresponding java type is {com.aspose.cells.DateTime}
     */
    function addMinutes($pDouble0)
    {
        return ClassFactory::_t2($this->m_Cells_DateTime->addMinutes($pDouble0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.addMonths(int)]

      @param pInt0  int
      @return corresponding java type is {com.aspose.cells.DateTime}
     */
    function addMonths($pInt0)
    {
        return ClassFactory::_t2($this->m_Cells_DateTime->addMonths($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.addSeconds(double)]

      @param pDouble0  double
      @return corresponding java type is {com.aspose.cells.DateTime}
     */
    function addSeconds($pDouble0)
    {
        return ClassFactory::_t2($this->m_Cells_DateTime->addSeconds($pDouble0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.addYears(int)]

      @param pInt0  int
      @return corresponding java type is {com.aspose.cells.DateTime}
     */
    function addYears($pInt0)
    {
        return ClassFactory::_t2($this->m_Cells_DateTime->addYears($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.compareTo(com.aspose.cells.DateTime)]

      @param oCells_DateTime0  corresponding java type is {com.aspose.cells.DateTime}
      @return int
     */
    function compareToD($oCells_DateTime0)
    {
        return $this->m_Cells_DateTime->compareTo(ClassFactory::_t1($oCells_DateTime0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.compareTo(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
      @return int
     */
    function compareToO($oObject0)
    {
        return $this->m_Cells_DateTime->compareTo(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.equals(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
      @return boolean
     */
    function equals($oObject0)
    {
        return $this->m_Cells_DateTime->equals(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.getDay()]

      @return int
     */
    function getDay()
    {
        return $this->m_Cells_DateTime->getDay();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.getDayOfWeek()]

      @return int
     */
    function getDayOfWeek()
    {
        return $this->m_Cells_DateTime->getDayOfWeek();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.getDayOfYear()]

      @return int
     */
    function getDayOfYear()
    {
        return $this->m_Cells_DateTime->getDayOfYear();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.getHour()]

      @return int
     */
    function getHour()
    {
        return $this->m_Cells_DateTime->getHour();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.getMillisecond()]

      @return int
     */
    function getMillisecond()
    {
        return $this->m_Cells_DateTime->getMillisecond();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.getMinute()]

      @return int
     */
    function getMinute()
    {
        return $this->m_Cells_DateTime->getMinute();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.getMonth()]

      @return int
     */
    function getMonth()
    {
        return $this->m_Cells_DateTime->getMonth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.getNow()]

      @return corresponding java type is {com.aspose.cells.DateTime}
     */
    function getNow()
    {
        return ClassFactory::_t2($this->m_Cells_DateTime->getNow());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.getSecond()]

      @return int
     */
    function getSecond()
    {
        return $this->m_Cells_DateTime->getSecond();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.getYear()]

      @return int
     */
    function getYear()
    {
        return $this->m_Cells_DateTime->getYear();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.hashCode()]

      @return int
     */
    function hashCode()
    {
        return $this->m_Cells_DateTime->hashCode();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.toCalendar()]

      @return corresponding java type is {java.util.Calendar}
     */
    function toCalendar()
    {
        return ClassFactory::_t2($this->m_Cells_DateTime->toCalendar());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.toDate()]

      @return corresponding java type is {java.util.Date}
     */
    function toDate()
    {
        return ClassFactory::_t2($this->m_Cells_DateTime->toDate());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.toLocalTime()]

      @return corresponding java type is {com.aspose.cells.DateTime}
     */
    function toLocalTime()
    {
        return ClassFactory::_t2($this->m_Cells_DateTime->toLocalTime());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.toString()]

      @return String
     */
    function toString()
    {
        return $this->m_Cells_DateTime->toString();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Cells_DateTime.toUniversalTime()]

      @return corresponding java type is {com.aspose.cells.DateTime}
     */
    function toUniversalTime()
    {
        return ClassFactory::_t2($this->m_Cells_DateTime->toUniversalTime());
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.CellsColor]
  
 */
class CellsColor
{
    public $m_CellsColor;
    
    function __construct($cellsColor)
    {
    	$this->m_CellsColor = $cellsColor;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.CellsColor.getArgb()]

      @return int
     */
    function getArgb()
    {
        return $this->m_CellsColor->getArgb();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsColor.getColor()]

      @return com.aspose.cells.Color
     */
    function getColor()
    {
        return ClassFactory::_t2($this->m_CellsColor->getColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsColor.getColorIndex()]

      @return int
     */
    function getColorIndex()
    {
        return $this->m_CellsColor->getColorIndex();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsColor.getThemeColor()]

      @return com.aspose.cells.ThemeColor
     */
    function getThemeColor()
    {
        return ClassFactory::_t2($this->m_CellsColor->getThemeColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsColor.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_CellsColor->getType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsColor.isShapeColor()]

      @return boolean
     */
    function isShapeColor()
    {
        return $this->m_CellsColor->isShapeColor();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsColor.setArgb(int)]

      @param pInt0  int
     */
    function setArgb($pInt0)
    {
        $this->m_CellsColor->setArgb($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsColor.setColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setColor($oColor0)
    {
        $this->m_CellsColor->setColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsColor.setColorIndex(int)]

      @param pInt0  int
     */
    function setColorIndex($pInt0)
    {
        $this->m_CellsColor->setColorIndex($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsColor.setShapeColor(boolean)]

      @param pBoolean0  boolean
     */
    function setShapeColor($pBoolean0)
    {
        $this->m_CellsColor->setShapeColor($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsColor.setThemeColor(com.aspose.cells.ThemeColor)]

      @param oThemeColor0  com.aspose.cells.ThemeColor
     */
    function setThemeColor($oThemeColor0)
    {
        $this->m_CellsColor->setThemeColor(ClassFactory::_t1($oThemeColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsColor.setTintOfShapeColor(double)]

      @param pDouble0  double
     */
    function setTintOfShapeColor($pDouble0)
    {
        $this->m_CellsColor->setTintOfShapeColor($pDouble0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.CellsDrawing]
  
 */
class CellsDrawing extends Shape
{
    public $m_CellsDrawing;
    
    function __construct($cellsDrawing)
    {
    	$this->m_CellsDrawing = $cellsDrawing;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.CellsException]
  
 */
class CellsException
{
    public $m_CellsException;
    
    function __construct($cellsException)
    {
    	$this->m_CellsException = $cellsException;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.CellsException.getCode()]

      @return int
     */
    function getCode()
    {
        return $this->m_CellsException->getCode();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.CellsHelper]
  
 */
class CellsHelper
{
    public $m_CellsHelper;
    
    function __construct($cellsHelper)
    {
    	$this->m_CellsHelper = $cellsHelper;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.addAddInFunction(java.lang.String, int, int, int[], int)]

      @param oString0  String
      @param pInt1  int
      @param pInt2  int
      @param arrP1DInt3  int[]
      @param pInt4  int
     */
    function addAddInFunction($oString0, $pInt1, $pInt2, $arrP1DInt3, $pInt4)
    {
        $this->m_CellsHelper->addAddInFunction($oString0, $pInt1, $pInt2, $arrP1DInt3, $pInt4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.cellIndexToName(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return String
     */
    function cellIndexToName($pInt0, $pInt1)
    {
        return $this->m_CellsHelper->cellIndexToName($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.cellNameToIndex(java.lang.String)]

      @param oString0  String
      @return int[]
     */
    function cellNameToIndex($oString0)
    {
        return $this->m_CellsHelper->cellNameToIndex($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.columnIndexToName(int)]

      @param pInt0  int
      @return String
     */
    function columnIndexToName($pInt0)
    {
        return $this->m_CellsHelper->columnIndexToName($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.columnNameToIndex(java.lang.String)]

      @param oString0  String
      @return int
     */
    function columnNameToIndex($oString0)
    {
        return $this->m_CellsHelper->columnNameToIndex($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.convertA1FormulaToR1C1(java.lang.String, int, int)]

      @param oString0  String
      @param pInt1  int
      @param pInt2  int
      @return String
     */
    function convertA1FormulaToR1C1($oString0, $pInt1, $pInt2)
    {
        return $this->m_CellsHelper->convertA1FormulaToR1C1($oString0, $pInt1, $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.convertR1C1FormulaToA1(java.lang.String, int, int)]

      @param oString0  String
      @param pInt1  int
      @param pInt2  int
      @return String
     */
    function convertR1C1FormulaToA1($oString0, $pInt1, $pInt2)
    {
        return $this->m_CellsHelper->convertR1C1FormulaToA1($oString0, $pInt1, $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.detectFileFormat(java.io.InputStream)]

      @param oInputStream0  corresponding java type is {java.io.InputStream}
      @return int
     */
    function detectFileFormatI($oInputStream0)
    {
        return $this->m_CellsHelper->detectFileFormat(ClassFactory::_t1($oInputStream0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.detectFileFormat(java.lang.String)]

      @param oString0  String
      @return int
     */
    function detectFileFormatS($oString0)
    {
        return $this->m_CellsHelper->detectFileFormat($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.detectLoadFormat(java.io.InputStream)]

      @param oInputStream0  corresponding java type is {java.io.InputStream}
      @return int
     */
    function detectLoadFormatI($oInputStream0)
    {
        return $this->m_CellsHelper->detectLoadFormat(ClassFactory::_t1($oInputStream0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.detectLoadFormat(java.lang.String)]

      @param oString0  String
      @return int
     */
    function detectLoadFormatS($oString0)
    {
        return $this->m_CellsHelper->detectLoadFormat($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.getAltStartPath()]

      @return String
     */
    function getAltStartPath()
    {
        return $this->m_CellsHelper->getAltStartPath();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.getDateTimeFromDouble(double, boolean)]

      @param pDouble0  double
      @param pBoolean1  boolean
      @return corresponding java type is {com.aspose.cells.DateTime}
     */
    function getDateTimeFromDouble($pDouble0, $pBoolean1)
    {
        return ClassFactory::_t2($this->m_CellsHelper->getDateTimeFromDouble($pDouble0, $pBoolean1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.getDoubleFromDateTime(com.aspose.cells.DateTime, boolean)]

      @param oCells_DateTime0  corresponding java type is {com.aspose.cells.DateTime}
      @param pBoolean1  boolean
      @return double
     */
    function getDoubleFromDateTime($oCells_DateTime0, $pBoolean1)
    {
        return $this->m_CellsHelper->getDoubleFromDateTime(ClassFactory::_t1($oCells_DateTime0), $pBoolean1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.getFontDir()]

      @return String
     */
    function getFontDir()
    {
        return $this->m_CellsHelper->getFontDir();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.getFontDirs()]

      @return array, corresponding java type is {java.util.ArrayList}
     */
    function getFontDirs()
    {
        return ClassFactory::_t2($this->m_CellsHelper->getFontDirs());
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.getFontFiles()]

      @return array, corresponding java type is {java.util.ArrayList}
     */
    function getFontFiles()
    {
        return ClassFactory::_t2($this->m_CellsHelper->getFontFiles());
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.getLibraryPath()]

      @return String
     */
    function getLibraryPath()
    {
        return $this->m_CellsHelper->getLibraryPath();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.getStartupPath()]

      @return String
     */
    function getStartupPath()
    {
        return $this->m_CellsHelper->getStartupPath();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.getUsedColors(com.aspose.cells.Workbook)]

      @param oWorkbook0  com.aspose.cells.Workbook
      @return com.aspose.cells.Color[]
     */
    function getUsedColors($oWorkbook0)
    {
        return ClassFactory::_t2($this->m_CellsHelper->getUsedColors(ClassFactory::_t1($oWorkbook0)));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.getVersion()]

      @return String
     */
    function getVersion()
    {
        return $this->m_CellsHelper->getVersion();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.isProtectedByRMS(java.io.InputStream)]

      @param oInputStream0  corresponding java type is {java.io.InputStream}
      @return boolean
     */
    function isProtectedByRMSI($oInputStream0)
    {
        return $this->m_CellsHelper->isProtectedByRMS(ClassFactory::_t1($oInputStream0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.isProtectedByRMS(java.lang.String)]

      @param oString0  String
      @return boolean
     */
    function isProtectedByRMSS($oString0)
    {
        return $this->m_CellsHelper->isProtectedByRMS($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.mergeFiles(java.lang.String[], java.lang.String, java.lang.String)]

      @param arrD1DString0  array, corresponding java type is {String[]}
      @param oString1  String
      @param oString2  String
     */
    function mergeFiles($arrD1DString0, $oString1, $oString2)
    {
        $this->m_CellsHelper->mergeFiles($arrD1DString0, $oString1, $oString2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.rowIndexToName(int)]

      @param pInt0  int
      @return String
     */
    function rowIndexToName($pInt0)
    {
        return $this->m_CellsHelper->rowIndexToName($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.rowNameToIndex(java.lang.String)]

      @param oString0  String
      @return int
     */
    function rowNameToIndex($oString0)
    {
        return $this->m_CellsHelper->rowNameToIndex($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.setAltStartPath(java.lang.String)]

      @param oString0  String
     */
    function setAltStartPath($oString0)
    {
        $this->m_CellsHelper->setAltStartPath($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.setFontDir(java.lang.String)]

      @param oString0  String
     */
    function setFontDir($oString0)
    {
        $this->m_CellsHelper->setFontDir($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.setFontDirs(java.util.ArrayList)]

      @param arrA1DFromArrayList0  array, corresponding java type is {java.util.ArrayList}
     */
    function setFontDirs($arrA1DFromArrayList0)
    {
        $this->m_CellsHelper->setFontDirs(ClassFactory::_t1($arrA1DFromArrayList0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.setFontFiles(java.util.ArrayList)]

      @param arrA1DFromArrayList0  array, corresponding java type is {java.util.ArrayList}
     */
    function setFontFiles($arrA1DFromArrayList0)
    {
        $this->m_CellsHelper->setFontFiles(ClassFactory::_t1($arrA1DFromArrayList0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.setLibraryPath(java.lang.String)]

      @param oString0  String
     */
    function setLibraryPath($oString0)
    {
        $this->m_CellsHelper->setLibraryPath($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CellsHelper.setStartupPath(java.lang.String)]

      @param oString0  String
     */
    function setStartupPath($oString0)
    {
        $this->m_CellsHelper->setStartupPath($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.CellValueType]
  
 */
class CellValueType
{
    public $m_CellValueType;
    
    function __construct($cellValueType)
    {
    	$this->m_CellValueType = $cellValueType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Chart]
  
 */
class Chart
{
    public $m_Chart;
    
    function __construct($chart)
    {
    	$this->m_Chart = $chart;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Chart.calculate()]

     */
    function calculate()
    {
        $this->m_Chart->calculate();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getAutoScaling()]

      @return boolean
     */
    function getAutoScaling()
    {
        return $this->m_Chart->getAutoScaling();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getBackWall()]

      @return com.aspose.cells.Walls
     */
    function getBackWall()
    {
        return ClassFactory::_t2($this->m_Chart->getBackWall());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getCategoryAxis()]

      @return com.aspose.cells.Axis
     */
    function getCategoryAxis()
    {
        return ClassFactory::_t2($this->m_Chart->getCategoryAxis());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getChartArea()]

      @return com.aspose.cells.ChartArea
     */
    function getChartArea()
    {
        return ClassFactory::_t2($this->m_Chart->getChartArea());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getChartDataTable()]

      @return com.aspose.cells.ChartDataTable
     */
    function getChartDataTable()
    {
        return ClassFactory::_t2($this->m_Chart->getChartDataTable());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getChartObject()]

      @return com.aspose.cells.ChartShape
     */
    function getChartObject()
    {
        return ClassFactory::_t2($this->m_Chart->getChartObject());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getChartShape()]

      @return com.aspose.cells.ChartShape
     */
    function getChartShape()
    {
        return ClassFactory::_t2($this->m_Chart->getChartShape());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getDepthPercent()]

      @return int
     */
    function getDepthPercent()
    {
        return $this->m_Chart->getDepthPercent();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getElevation()]

      @return int
     */
    function getElevation()
    {
        return $this->m_Chart->getElevation();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getFirstSliceAngle()]

      @return int
     */
    function getFirstSliceAngle()
    {
        return $this->m_Chart->getFirstSliceAngle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getFloor()]

      @return com.aspose.cells.Floor
     */
    function getFloor()
    {
        return ClassFactory::_t2($this->m_Chart->getFloor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getGapDepth()]

      @return int
     */
    function getGapDepth()
    {
        return $this->m_Chart->getGapDepth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getGapWidth()]

      @return int
     */
    function getGapWidth()
    {
        return $this->m_Chart->getGapWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getHeightPercent()]

      @return short
     */
    function getHeightPercent()
    {
        return $this->m_Chart->getHeightPercent();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getHidePivotFieldButtons()]

      @return boolean
     */
    function getHidePivotFieldButtons()
    {
        return $this->m_Chart->getHidePivotFieldButtons();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getIs3D()]

      @return boolean
     */
    function getIs3D()
    {
        return $this->m_Chart->getIs3D();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getLegend()]

      @return com.aspose.cells.Legend
     */
    function getLegend()
    {
        return ClassFactory::_t2($this->m_Chart->getLegend());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getNSeries()]

      @return com.aspose.cells.SeriesCollection
     */
    function getNSeries()
    {
        return ClassFactory::_t2($this->m_Chart->getNSeries());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_Chart->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getPageSetup()]

      @return com.aspose.cells.PageSetup
     */
    function getPageSetup()
    {
        return ClassFactory::_t2($this->m_Chart->getPageSetup());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getPerspective()]

      @return short
     */
    function getPerspective()
    {
        return $this->m_Chart->getPerspective();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getPivotSource()]

      @return String
     */
    function getPivotSource()
    {
        return $this->m_Chart->getPivotSource();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getPlacement()]

      @return int
     */
    function getPlacement()
    {
        return $this->m_Chart->getPlacement();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getPlotArea()]

      @return com.aspose.cells.PlotArea
     */
    function getPlotArea()
    {
        return ClassFactory::_t2($this->m_Chart->getPlotArea());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getPlotAreaWithoutTickLabels()]

      @return com.aspose.cells.ChartFrame
     */
    function getPlotAreaWithoutTickLabels()
    {
        return ClassFactory::_t2($this->m_Chart->getPlotAreaWithoutTickLabels());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getPlotEmptyCellsType()]

      @return int
     */
    function getPlotEmptyCellsType()
    {
        return $this->m_Chart->getPlotEmptyCellsType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getPlotVisibleCells()]

      @return boolean
     */
    function getPlotVisibleCells()
    {
        return $this->m_Chart->getPlotVisibleCells();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getPrintSize()]

      @return int
     */
    function getPrintSize()
    {
        return $this->m_Chart->getPrintSize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getRightAngleAxes()]

      @return boolean
     */
    function getRightAngleAxes()
    {
        return $this->m_Chart->getRightAngleAxes();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getRotation()]

      @return int
     */
    function getRotation()
    {
        return $this->m_Chart->getRotation();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getRotationAngle()]

      @return int
     */
    function getRotationAngle()
    {
        return $this->m_Chart->getRotationAngle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getSecondCategoryAxis()]

      @return com.aspose.cells.Axis
     */
    function getSecondCategoryAxis()
    {
        return ClassFactory::_t2($this->m_Chart->getSecondCategoryAxis());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getSecondValueAxis()]

      @return com.aspose.cells.Axis
     */
    function getSecondValueAxis()
    {
        return ClassFactory::_t2($this->m_Chart->getSecondValueAxis());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getSeriesAxis()]

      @return com.aspose.cells.Axis
     */
    function getSeriesAxis()
    {
        return ClassFactory::_t2($this->m_Chart->getSeriesAxis());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getShapes()]

      @return com.aspose.cells.ShapeCollection
     */
    function getShapes()
    {
        return ClassFactory::_t2($this->m_Chart->getShapes());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getShowDataTable()]

      @return boolean
     */
    function getShowDataTable()
    {
        return $this->m_Chart->getShowDataTable();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getShowLegend()]

      @return boolean
     */
    function getShowLegend()
    {
        return $this->m_Chart->getShowLegend();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getSideWall()]

      @return com.aspose.cells.Walls
     */
    function getSideWall()
    {
        return ClassFactory::_t2($this->m_Chart->getSideWall());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getSizeWithWindow()]

      @return boolean
     */
    function getSizeWithWindow()
    {
        return $this->m_Chart->getSizeWithWindow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getStyle()]

      @return int
     */
    function getStyle()
    {
        return $this->m_Chart->getStyle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getTitle()]

      @return com.aspose.cells.Title
     */
    function getTitle()
    {
        return ClassFactory::_t2($this->m_Chart->getTitle());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_Chart->getType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getValueAxis()]

      @return com.aspose.cells.Axis
     */
    function getValueAxis()
    {
        return ClassFactory::_t2($this->m_Chart->getValueAxis());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getWalls()]

      @return com.aspose.cells.Walls
     */
    function getWalls()
    {
        return ClassFactory::_t2($this->m_Chart->getWalls());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.getWallsAndGridlines2D()]

      @return boolean
     */
    function getWallsAndGridlines2D()
    {
        return $this->m_Chart->getWallsAndGridlines2D();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.isDataTableShown()]

      @return boolean
     */
    function isDataTableShown()
    {
        return $this->m_Chart->isDataTableShown();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.isLegendShown()]

      @return boolean
     */
    function isLegendShown()
    {
        return $this->m_Chart->isLegendShown();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.isRectangularCornered()]

      @return boolean
     */
    function isRectangularCornered()
    {
        return $this->m_Chart->isRectangularCornered();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.move(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
     */
    function move($pInt0, $pInt1, $pInt2, $pInt3)
    {
        $this->m_Chart->move($pInt0, $pInt1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.refreshPivotData()]

     */
    function refreshPivotData()
    {
        $this->m_Chart->refreshPivotData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setAutoScaling(boolean)]

      @param pBoolean0  boolean
     */
    function setAutoScaling($pBoolean0)
    {
        $this->m_Chart->setAutoScaling($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setDataTableShown(boolean)]

      @param pBoolean0  boolean
     */
    function setDataTableShown($pBoolean0)
    {
        $this->m_Chart->setDataTableShown($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setDepthPercent(int)]

      @param pInt0  int
     */
    function setDepthPercent($pInt0)
    {
        $this->m_Chart->setDepthPercent($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setElevation(int)]

      @param pInt0  int
     */
    function setElevation($pInt0)
    {
        $this->m_Chart->setElevation($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setFirstSliceAngle(int)]

      @param pInt0  int
     */
    function setFirstSliceAngle($pInt0)
    {
        $this->m_Chart->setFirstSliceAngle($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setGapDepth(int)]

      @param pInt0  int
     */
    function setGapDepth($pInt0)
    {
        $this->m_Chart->setGapDepth($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setGapWidth(int)]

      @param pInt0  int
     */
    function setGapWidth($pInt0)
    {
        $this->m_Chart->setGapWidth($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setHeightPercent(short)]

      @param pShort0  short
     */
    function setHeightPercent($pShort0)
    {
        $this->m_Chart->setHeightPercent($pShort0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setHidePivotFieldButtons(boolean)]

      @param pBoolean0  boolean
     */
    function setHidePivotFieldButtons($pBoolean0)
    {
        $this->m_Chart->setHidePivotFieldButtons($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setLegendShown(boolean)]

      @param pBoolean0  boolean
     */
    function setLegendShown($pBoolean0)
    {
        $this->m_Chart->setLegendShown($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setName(java.lang.String)]

      @param oString0  String
     */
    function setName($oString0)
    {
        $this->m_Chart->setName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setPerspective(short)]

      @param pShort0  short
     */
    function setPerspective($pShort0)
    {
        $this->m_Chart->setPerspective($pShort0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setPivotSource(java.lang.String)]

      @param oString0  String
     */
    function setPivotSource($oString0)
    {
        $this->m_Chart->setPivotSource($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setPlacement(int)]

      @param pInt0  int
     */
    function setPlacement($pInt0)
    {
        $this->m_Chart->setPlacement($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setPlotEmptyCellsType(int)]

      @param pInt0  int
     */
    function setPlotEmptyCellsType($pInt0)
    {
        $this->m_Chart->setPlotEmptyCellsType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setPlotVisibleCells(boolean)]

      @param pBoolean0  boolean
     */
    function setPlotVisibleCells($pBoolean0)
    {
        $this->m_Chart->setPlotVisibleCells($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setPrintSize(int)]

      @param pInt0  int
     */
    function setPrintSize($pInt0)
    {
        $this->m_Chart->setPrintSize($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setRectangularCornered(boolean)]

      @param pBoolean0  boolean
     */
    function setRectangularCornered($pBoolean0)
    {
        $this->m_Chart->setRectangularCornered($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setRightAngleAxes(boolean)]

      @param pBoolean0  boolean
     */
    function setRightAngleAxes($pBoolean0)
    {
        $this->m_Chart->setRightAngleAxes($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setRotation(int)]

      @param pInt0  int
     */
    function setRotation($pInt0)
    {
        $this->m_Chart->setRotation($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setRotationAngle(int)]

      @param pInt0  int
     */
    function setRotationAngle($pInt0)
    {
        $this->m_Chart->setRotationAngle($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setShowDataTable(boolean)]

      @param pBoolean0  boolean
     */
    function setShowDataTable($pBoolean0)
    {
        $this->m_Chart->setShowDataTable($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setShowLegend(boolean)]

      @param pBoolean0  boolean
     */
    function setShowLegend($pBoolean0)
    {
        $this->m_Chart->setShowLegend($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setSizeWithWindow(boolean)]

      @param pBoolean0  boolean
     */
    function setSizeWithWindow($pBoolean0)
    {
        $this->m_Chart->setSizeWithWindow($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setStyle(int)]

      @param pInt0  int
     */
    function setStyle($pInt0)
    {
        $this->m_Chart->setStyle($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setType(int)]

      @param pInt0  int
     */
    function setType($pInt0)
    {
        $this->m_Chart->setType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.setWallsAndGridlines2D(boolean)]

      @param pBoolean0  boolean
     */
    function setWallsAndGridlines2D($pBoolean0)
    {
        $this->m_Chart->setWallsAndGridlines2D($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.toImage(java.lang.String)]

      @param oString0  String
     */
    function toImageS($oString0)
    {
        $this->m_Chart->toImage($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.toImage(java.io.OutputStream, com.aspose.cells.ImageOrPrintOptions)]

      @param oOutputStream0  corresponding java type is {java.io.OutputStream}
      @param oImageOrPrintOptions1  com.aspose.cells.ImageOrPrintOptions
     */
    function toImageOI($oOutputStream0, $oImageOrPrintOptions1)
    {
        $this->m_Chart->toImage(ClassFactory::_t1($oOutputStream0), ClassFactory::_t1($oImageOrPrintOptions1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.toImage(java.lang.String, com.aspose.cells.ImageFormat)]

      @param oString0  String
      @param oImageFormat1  com.aspose.cells.ImageFormat
     */
    function toImageSI($oString0, $oImageFormat1)
    {
        $this->m_Chart->toImage($oString0, ClassFactory::_t1($oImageFormat1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.toImage(java.lang.String, com.aspose.cells.ImageOrPrintOptions)]

      @param oString0  String
      @param oImageOrPrintOptions1  com.aspose.cells.ImageOrPrintOptions
     */
    function toImageSI1($oString0, $oImageOrPrintOptions1)
    {
        $this->m_Chart->toImage($oString0, ClassFactory::_t1($oImageOrPrintOptions1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Chart.toImage(java.lang.String, long)]

      @param oString0  String
      @param pLong1  long
     */
    function toImageSL($oString0, $pLong1)
    {
        $this->m_Chart->toImage($oString0, $pLong1);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ChartArea]
  
 */
class ChartArea extends ChartFrame
{
    public $m_ChartArea;
    
    function __construct($chartArea)
    {
    	$this->m_ChartArea = $chartArea;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ChartArea.getFont()]

      @return com.aspose.cells.Font
     */
    function getFont()
    {
        return ClassFactory::_t2($this->m_ChartArea->getFont());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartArea.getHeight()]

      @return int
     */
    function getHeight()
    {
        return $this->m_ChartArea->getHeight();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartArea.getWidth()]

      @return int
     */
    function getWidth()
    {
        return $this->m_ChartArea->getWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartArea.getX()]

      @return int
     */
    function getX()
    {
        return $this->m_ChartArea->getX();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartArea.getY()]

      @return int
     */
    function getY()
    {
        return $this->m_ChartArea->getY();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartArea.setHeight(int)]

      @param pInt0  int
     */
    function setHeight($pInt0)
    {
        $this->m_ChartArea->setHeight($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartArea.setWidth(int)]

      @param pInt0  int
     */
    function setWidth($pInt0)
    {
        $this->m_ChartArea->setWidth($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartArea.setX(int)]

      @param pInt0  int
     */
    function setX($pInt0)
    {
        $this->m_ChartArea->setX($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartArea.setY(int)]

      @param pInt0  int
     */
    function setY($pInt0)
    {
        $this->m_ChartArea->setY($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ChartCollection]
  
 */
class ChartCollection extends CollectionBase
{
    public $m_ChartCollection;
    
    function __construct($chartCollection)
    {
    	$this->m_ChartCollection = $chartCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ChartCollection.add(int, int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pInt4  int
      @return int
     */
    function add($pInt0, $pInt1, $pInt2, $pInt3, $pInt4)
    {
        return $this->m_ChartCollection->add($pInt0, $pInt1, $pInt2, $pInt3, $pInt4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartCollection.addFloatingChart(int, int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pInt4  int
      @return int
     */
    function addFloatingChart($pInt0, $pInt1, $pInt2, $pInt3, $pInt4)
    {
        return $this->m_ChartCollection->addFloatingChart($pInt0, $pInt1, $pInt2, $pInt3, $pInt4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartCollection.clear()]

     */
    function clear()
    {
        $this->m_ChartCollection->clear();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.Chart
     */
    function getI($pInt0)
    {
        return ClassFactory::_t2($this->m_ChartCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartCollection.get(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.Chart
     */
    function getS($oString0)
    {
        return ClassFactory::_t2($this->m_ChartCollection->get($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartCollection.remove(com.aspose.cells.Chart)]

      @param oChart0  com.aspose.cells.Chart
     */
    function remove($oChart0)
    {
        $this->m_ChartCollection->remove(ClassFactory::_t1($oChart0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartCollection.removeAt(int)]

      @param pInt0  int
     */
    function removeAt($pInt0)
    {
        $this->m_ChartCollection->removeAt($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ChartDataTable]
  
 */
class ChartDataTable
{
    public $m_ChartDataTable;
    
    function __construct($chartDataTable)
    {
    	$this->m_ChartDataTable = $chartDataTable;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ChartDataTable.getAutoScaleFont()]

      @return boolean
     */
    function getAutoScaleFont()
    {
        return $this->m_ChartDataTable->getAutoScaleFont();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartDataTable.getBackground()]

      @return int
     */
    function getBackground()
    {
        return $this->m_ChartDataTable->getBackground();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartDataTable.getBackgroundMode()]

      @return int
     */
    function getBackgroundMode()
    {
        return $this->m_ChartDataTable->getBackgroundMode();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartDataTable.getBorder()]

      @return com.aspose.cells.Line
     */
    function getBorder()
    {
        return ClassFactory::_t2($this->m_ChartDataTable->getBorder());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartDataTable.getFont()]

      @return com.aspose.cells.Font
     */
    function getFont()
    {
        return ClassFactory::_t2($this->m_ChartDataTable->getFont());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartDataTable.getShowLegendKey()]

      @return boolean
     */
    function getShowLegendKey()
    {
        return $this->m_ChartDataTable->getShowLegendKey();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartDataTable.hasBorderHorizontal()]

      @return boolean
     */
    function hasBorderHorizontal()
    {
        return $this->m_ChartDataTable->hasBorderHorizontal();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartDataTable.hasBorderOutline()]

      @return boolean
     */
    function hasBorderOutline()
    {
        return $this->m_ChartDataTable->hasBorderOutline();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartDataTable.hasBorderVertical()]

      @return boolean
     */
    function hasBorderVertical()
    {
        return $this->m_ChartDataTable->hasBorderVertical();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartDataTable.setAutoScaleFont(boolean)]

      @param pBoolean0  boolean
     */
    function setAutoScaleFont($pBoolean0)
    {
        $this->m_ChartDataTable->setAutoScaleFont($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartDataTable.setBackground(int)]

      @param pInt0  int
     */
    function setBackground($pInt0)
    {
        $this->m_ChartDataTable->setBackground($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartDataTable.setBackgroundMode(int)]

      @param pInt0  int
     */
    function setBackgroundMode($pInt0)
    {
        $this->m_ChartDataTable->setBackgroundMode($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartDataTable.setHasBorderHorizontal(boolean)]

      @param pBoolean0  boolean
     */
    function setHasBorderHorizontal($pBoolean0)
    {
        $this->m_ChartDataTable->setHasBorderHorizontal($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartDataTable.setHasBorderOutline(boolean)]

      @param pBoolean0  boolean
     */
    function setHasBorderOutline($pBoolean0)
    {
        $this->m_ChartDataTable->setHasBorderOutline($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartDataTable.setHasBorderVertical(boolean)]

      @param pBoolean0  boolean
     */
    function setHasBorderVertical($pBoolean0)
    {
        $this->m_ChartDataTable->setHasBorderVertical($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartDataTable.setShowLegendKey(boolean)]

      @param pBoolean0  boolean
     */
    function setShowLegendKey($pBoolean0)
    {
        $this->m_ChartDataTable->setShowLegendKey($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ChartFrame]
  
 */
class ChartFrame
{
    public $m_ChartFrame;
    
    function __construct($chartFrame)
    {
    	$this->m_ChartFrame = $chartFrame;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.getArea()]

      @return com.aspose.cells.Area
     */
    function getArea()
    {
        return ClassFactory::_t2($this->m_ChartFrame->getArea());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.getAutoScaleFont()]

      @return boolean
     */
    function getAutoScaleFont()
    {
        return $this->m_ChartFrame->getAutoScaleFont();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.getBackground()]

      @return int
     */
    function getBackground()
    {
        return $this->m_ChartFrame->getBackground();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.getBackgroundMode()]

      @return int
     */
    function getBackgroundMode()
    {
        return $this->m_ChartFrame->getBackgroundMode();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.getBorder()]

      @return com.aspose.cells.Line
     */
    function getBorder()
    {
        return ClassFactory::_t2($this->m_ChartFrame->getBorder());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.getChart()]

      @return com.aspose.cells.Chart
     */
    function getChart()
    {
        return ClassFactory::_t2($this->m_ChartFrame->getChart());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.getDefaultHeight()]

      @return int
     */
    function getDefaultHeight()
    {
        return $this->m_ChartFrame->getDefaultHeight();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.getDefaultWidth()]

      @return int
     */
    function getDefaultWidth()
    {
        return $this->m_ChartFrame->getDefaultWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.getDefaultX()]

      @return int
     */
    function getDefaultX()
    {
        return $this->m_ChartFrame->getDefaultX();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.getDefaultY()]

      @return int
     */
    function getDefaultY()
    {
        return $this->m_ChartFrame->getDefaultY();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.getFont()]

      @return com.aspose.cells.Font
     */
    function getFont()
    {
        return ClassFactory::_t2($this->m_ChartFrame->getFont());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.getHeight()]

      @return int
     */
    function getHeight()
    {
        return $this->m_ChartFrame->getHeight();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.getShadow()]

      @return boolean
     */
    function getShadow()
    {
        return $this->m_ChartFrame->getShadow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.getShapeProperties()]

      @return com.aspose.cells.ShapePropertyCollection
     */
    function getShapeProperties()
    {
        return ClassFactory::_t2($this->m_ChartFrame->getShapeProperties());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.getTextFont()]

      @return com.aspose.cells.Font
     */
    function getTextFont()
    {
        return ClassFactory::_t2($this->m_ChartFrame->getTextFont());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.getWidth()]

      @return int
     */
    function getWidth()
    {
        return $this->m_ChartFrame->getWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.getX()]

      @return int
     */
    function getX()
    {
        return $this->m_ChartFrame->getX();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.getY()]

      @return int
     */
    function getY()
    {
        return $this->m_ChartFrame->getY();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.isAutomaticSize()]

      @return boolean
     */
    function isAutomaticSize()
    {
        return $this->m_ChartFrame->isAutomaticSize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.isDefaultPosBeSet()]

      @return boolean
     */
    function isDefaultPosBeSet()
    {
        return $this->m_ChartFrame->isDefaultPosBeSet();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.isInnerMode()]

      @return boolean
     */
    function isInnerMode()
    {
        return $this->m_ChartFrame->isInnerMode();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.setAutoScaleFont(boolean)]

      @param pBoolean0  boolean
     */
    function setAutoScaleFont($pBoolean0)
    {
        $this->m_ChartFrame->setAutoScaleFont($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.setAutomaticSize(boolean)]

      @param pBoolean0  boolean
     */
    function setAutomaticSize($pBoolean0)
    {
        $this->m_ChartFrame->setAutomaticSize($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.setBackground(int)]

      @param pInt0  int
     */
    function setBackground($pInt0)
    {
        $this->m_ChartFrame->setBackground($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.setBackgroundMode(int)]

      @param pInt0  int
     */
    function setBackgroundMode($pInt0)
    {
        $this->m_ChartFrame->setBackgroundMode($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.setHeight(int)]

      @param pInt0  int
     */
    function setHeight($pInt0)
    {
        $this->m_ChartFrame->setHeight($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.setInnerMode(boolean)]

      @param pBoolean0  boolean
     */
    function setInnerMode($pBoolean0)
    {
        $this->m_ChartFrame->setInnerMode($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.setShadow(boolean)]

      @param pBoolean0  boolean
     */
    function setShadow($pBoolean0)
    {
        $this->m_ChartFrame->setShadow($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.setWidth(int)]

      @param pInt0  int
     */
    function setWidth($pInt0)
    {
        $this->m_ChartFrame->setWidth($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.setX(int)]

      @param pInt0  int
     */
    function setX($pInt0)
    {
        $this->m_ChartFrame->setX($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartFrame.setY(int)]

      @param pInt0  int
     */
    function setY($pInt0)
    {
        $this->m_ChartFrame->setY($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ChartLineFormattingType]
  
 */
class ChartLineFormattingType
{
    public $m_ChartLineFormattingType;
    
    function __construct($chartLineFormattingType)
    {
    	$this->m_ChartLineFormattingType = $chartLineFormattingType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.ChartMarkerType]
  
 */
class ChartMarkerType
{
    public $m_ChartMarkerType;
    
    function __construct($chartMarkerType)
    {
    	$this->m_ChartMarkerType = $chartMarkerType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.ChartPoint]
  
 */
class ChartPoint
{
    public $m_ChartPoint;
    
    function __construct($chartPoint)
    {
    	$this->m_ChartPoint = $chartPoint;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getArcEndPointXPx()]

      @return float
     */
    function getArcEndPointXPx()
    {
        return $this->m_ChartPoint->getArcEndPointXPx();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getArcEndPointYPx()]

      @return float
     */
    function getArcEndPointYPx()
    {
        return $this->m_ChartPoint->getArcEndPointYPx();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getArcStartPointXPx()]

      @return float
     */
    function getArcStartPointXPx()
    {
        return $this->m_ChartPoint->getArcStartPointXPx();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getArcStartPointYPx()]

      @return float
     */
    function getArcStartPointYPx()
    {
        return $this->m_ChartPoint->getArcStartPointYPx();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getArea()]

      @return com.aspose.cells.Area
     */
    function getArea()
    {
        return ClassFactory::_t2($this->m_ChartPoint->getArea());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getBorder()]

      @return com.aspose.cells.Line
     */
    function getBorder()
    {
        return ClassFactory::_t2($this->m_ChartPoint->getBorder());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getBorderWidthPx()]

      @return int
     */
    function getBorderWidthPx()
    {
        return $this->m_ChartPoint->getBorderWidthPx();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getBottomPointCount()]

      @return int
     */
    function getBottomPointCount()
    {
        return $this->m_ChartPoint->getBottomPointCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getBottomPointXPx(int)]

      @param pInt0  int
      @return float
     */
    function getBottomPointXPx($pInt0)
    {
        return $this->m_ChartPoint->getBottomPointXPx($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getBottomPointYPx(int)]

      @param pInt0  int
      @return float
     */
    function getBottomPointYPx($pInt0)
    {
        return $this->m_ChartPoint->getBottomPointYPx($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getDataLabels()]

      @return com.aspose.cells.DataLabels
     */
    function getDataLabels()
    {
        return ClassFactory::_t2($this->m_ChartPoint->getDataLabels());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getEndAngle()]

      @return float
     */
    function getEndAngle()
    {
        return $this->m_ChartPoint->getEndAngle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getExplosion()]

      @return int
     */
    function getExplosion()
    {
        return $this->m_ChartPoint->getExplosion();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getInnerArcEndPointXPx()]

      @return float
     */
    function getInnerArcEndPointXPx()
    {
        return $this->m_ChartPoint->getInnerArcEndPointXPx();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getInnerArcEndPointYPx()]

      @return float
     */
    function getInnerArcEndPointYPx()
    {
        return $this->m_ChartPoint->getInnerArcEndPointYPx();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getInnerArcStartPointXPx()]

      @return float
     */
    function getInnerArcStartPointXPx()
    {
        return $this->m_ChartPoint->getInnerArcStartPointXPx();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getInnerArcStartPointYPx()]

      @return float
     */
    function getInnerArcStartPointYPx()
    {
        return $this->m_ChartPoint->getInnerArcStartPointYPx();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getInnerRadiusPx()]

      @return int
     */
    function getInnerRadiusPx()
    {
        return $this->m_ChartPoint->getInnerRadiusPx();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getMarker()]

      @return com.aspose.cells.Marker
     */
    function getMarker()
    {
        return ClassFactory::_t2($this->m_ChartPoint->getMarker());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getMarkerBackgroundColor()]

      @return com.aspose.cells.Color
     */
    function getMarkerBackgroundColor()
    {
        return ClassFactory::_t2($this->m_ChartPoint->getMarkerBackgroundColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getMarkerBackgroundColorSetType()]

      @return int
     */
    function getMarkerBackgroundColorSetType()
    {
        return $this->m_ChartPoint->getMarkerBackgroundColorSetType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getMarkerForegroundColor()]

      @return com.aspose.cells.Color
     */
    function getMarkerForegroundColor()
    {
        return ClassFactory::_t2($this->m_ChartPoint->getMarkerForegroundColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getMarkerForegroundColorSetType()]

      @return int
     */
    function getMarkerForegroundColorSetType()
    {
        return $this->m_ChartPoint->getMarkerForegroundColorSetType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getMarkerSize()]

      @return int
     */
    function getMarkerSize()
    {
        return $this->m_ChartPoint->getMarkerSize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getMarkerStyle()]

      @return int
     */
    function getMarkerStyle()
    {
        return $this->m_ChartPoint->getMarkerStyle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getOnCategoryAxisPointCount()]

      @return int
     */
    function getOnCategoryAxisPointCount()
    {
        return $this->m_ChartPoint->getOnCategoryAxisPointCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getOnCategoryAxisPointXPx(int)]

      @param pInt0  int
      @return float
     */
    function getOnCategoryAxisPointXPx($pInt0)
    {
        return $this->m_ChartPoint->getOnCategoryAxisPointXPx($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getOnCategoryAxisPointYPx(int)]

      @param pInt0  int
      @return float
     */
    function getOnCategoryAxisPointYPx($pInt0)
    {
        return $this->m_ChartPoint->getOnCategoryAxisPointYPx($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getRadiusPx()]

      @return int
     */
    function getRadiusPx()
    {
        return $this->m_ChartPoint->getRadiusPx();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getShadow()]

      @return boolean
     */
    function getShadow()
    {
        return $this->m_ChartPoint->getShadow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getShapeHeight()]

      @return int
     */
    function getShapeHeight()
    {
        return $this->m_ChartPoint->getShapeHeight();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getShapeHeightPx()]

      @return int
     */
    function getShapeHeightPx()
    {
        return $this->m_ChartPoint->getShapeHeightPx();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getShapeProperties()]

      @return com.aspose.cells.ShapePropertyCollection
     */
    function getShapeProperties()
    {
        return ClassFactory::_t2($this->m_ChartPoint->getShapeProperties());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getShapeWidth()]

      @return int
     */
    function getShapeWidth()
    {
        return $this->m_ChartPoint->getShapeWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getShapeWidthPx()]

      @return int
     */
    function getShapeWidthPx()
    {
        return $this->m_ChartPoint->getShapeWidthPx();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getShapeX()]

      @return int
     */
    function getShapeX()
    {
        return $this->m_ChartPoint->getShapeX();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getShapeXPx()]

      @return int
     */
    function getShapeXPx()
    {
        return $this->m_ChartPoint->getShapeXPx();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getShapeY()]

      @return int
     */
    function getShapeY()
    {
        return $this->m_ChartPoint->getShapeY();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getShapeYPx()]

      @return int
     */
    function getShapeYPx()
    {
        return $this->m_ChartPoint->getShapeYPx();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getStartAngle()]

      @return float
     */
    function getStartAngle()
    {
        return $this->m_ChartPoint->getStartAngle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getTopPointCount()]

      @return int
     */
    function getTopPointCount()
    {
        return $this->m_ChartPoint->getTopPointCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getTopPointXPx(int)]

      @param pInt0  int
      @return float
     */
    function getTopPointXPx($pInt0)
    {
        return $this->m_ChartPoint->getTopPointXPx($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getTopPointYPx(int)]

      @param pInt0  int
      @return float
     */
    function getTopPointYPx($pInt0)
    {
        return $this->m_ChartPoint->getTopPointYPx($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getXValue()]

      @return corresponding java type is {java.lang.Object}
     */
    function getXValue()
    {
        return ClassFactory::_t2($this->m_ChartPoint->getXValue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.getYValue()]

      @return corresponding java type is {java.lang.Object}
     */
    function getYValue()
    {
        return ClassFactory::_t2($this->m_ChartPoint->getYValue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.setExplosion(int)]

      @param pInt0  int
     */
    function setExplosion($pInt0)
    {
        $this->m_ChartPoint->setExplosion($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.setMarkerBackgroundColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setMarkerBackgroundColor($oColor0)
    {
        $this->m_ChartPoint->setMarkerBackgroundColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.setMarkerBackgroundColorSetType(int)]

      @param pInt0  int
     */
    function setMarkerBackgroundColorSetType($pInt0)
    {
        $this->m_ChartPoint->setMarkerBackgroundColorSetType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.setMarkerForegroundColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setMarkerForegroundColor($oColor0)
    {
        $this->m_ChartPoint->setMarkerForegroundColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.setMarkerForegroundColorSetType(int)]

      @param pInt0  int
     */
    function setMarkerForegroundColorSetType($pInt0)
    {
        $this->m_ChartPoint->setMarkerForegroundColorSetType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.setMarkerSize(int)]

      @param pInt0  int
     */
    function setMarkerSize($pInt0)
    {
        $this->m_ChartPoint->setMarkerSize($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.setMarkerStyle(int)]

      @param pInt0  int
     */
    function setMarkerStyle($pInt0)
    {
        $this->m_ChartPoint->setMarkerStyle($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.setShadow(boolean)]

      @param pBoolean0  boolean
     */
    function setShadow($pBoolean0)
    {
        $this->m_ChartPoint->setShadow($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.setXValue(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
     */
    function setXValue($oObject0)
    {
        $this->m_ChartPoint->setXValue(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPoint.setYValue(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
     */
    function setYValue($oObject0)
    {
        $this->m_ChartPoint->setYValue(ClassFactory::_t1($oObject0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ChartPointCollection]
  
 */
class ChartPointCollection
{
    public $m_ChartPointCollection;
    
    function __construct($chartPointCollection)
    {
    	$this->m_ChartPointCollection = $chartPointCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ChartPointCollection.clear()]

     */
    function clear()
    {
        $this->m_ChartPointCollection->clear();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPointCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.ChartPoint
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_ChartPointCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPointCollection.getCount()]

      @return int
     */
    function getCount()
    {
        return $this->m_ChartPointCollection->getCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPointCollection.iterator()]

      @return corresponding java type is {java.util.Iterator}
     */
    function iterator()
    {
        return ClassFactory::_t2($this->m_ChartPointCollection->iterator());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ChartPointCollection.removeAt(int)]

      @param pInt0  int
     */
    function removeAt($pInt0)
    {
        $this->m_ChartPointCollection->removeAt($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ChartShape]
  
 */
class ChartShape extends Shape
{
    public $m_ChartShape;
    
    function __construct($chartShape)
    {
    	$this->m_ChartShape = $chartShape;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ChartShape.getChart()]

      @return com.aspose.cells.Chart
     */
    function getChart()
    {
        return ClassFactory::_t2($this->m_ChartShape->getChart());
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ChartSplitType]
  
 */
class ChartSplitType
{
    public $m_ChartSplitType;
    
    function __construct($chartSplitType)
    {
    	$this->m_ChartSplitType = $chartSplitType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.ChartType]
  
 */
class ChartType
{
    public $m_ChartType;
    
    function __construct($chartType)
    {
    	$this->m_ChartType = $chartType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.CheckBox]
  
 */
class CheckBox extends Shape
{
    public $m_CheckBox;
    
    function __construct($checkBox)
    {
    	$this->m_CheckBox = $checkBox;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.CheckBox.getCheckValue()]

      @return int
     */
    function getCheckValue()
    {
        return $this->m_CheckBox->getCheckValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CheckBox.getCheckedValue()]

      @return int
     */
    function getCheckedValue()
    {
        return $this->m_CheckBox->getCheckedValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CheckBox.getShadow()]

      @return boolean
     */
    function getShadow()
    {
        return $this->m_CheckBox->getShadow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CheckBox.getValue()]

      @return boolean
     */
    function getValue()
    {
        return $this->m_CheckBox->getValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CheckBox.setCheckValue(int)]

      @param pInt0  int
     */
    function setCheckValue($pInt0)
    {
        $this->m_CheckBox->setCheckValue($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CheckBox.setCheckedValue(int)]

      @param pInt0  int
     */
    function setCheckedValue($pInt0)
    {
        $this->m_CheckBox->setCheckedValue($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CheckBox.setShadow(boolean)]

      @param pBoolean0  boolean
     */
    function setShadow($pBoolean0)
    {
        $this->m_CheckBox->setShadow($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CheckBox.setValue(boolean)]

      @param pBoolean0  boolean
     */
    function setValue($pBoolean0)
    {
        $this->m_CheckBox->setValue($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.CheckBoxCollection]
  
 */
class CheckBoxCollection extends CollectionBase
{
    public $m_CheckBoxCollection;
    
    function __construct($checkBoxCollection)
    {
    	$this->m_CheckBoxCollection = $checkBoxCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.CheckBoxCollection.add(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @return int
     */
    function add($pInt0, $pInt1, $pInt2, $pInt3)
    {
        return $this->m_CheckBoxCollection->add($pInt0, $pInt1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CheckBoxCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.CheckBox
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_CheckBoxCollection->get($pInt0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.CheckValueType]
  
 */
class CheckValueType
{
    public $m_CheckValueType;
    
    function __construct($checkValueType)
    {
    	$this->m_CheckValueType = $checkValueType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.CollectionBase]
  
 */
class CollectionBase
{
    public $m_CollectionBase;
    
    function __construct($collectionBase)
    {
    	$this->m_CollectionBase = $collectionBase;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.CollectionBase.add(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
      @return int
     */
    function add($oObject0)
    {
        return $this->m_CollectionBase->add(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CollectionBase.clear()]

     */
    function clear()
    {
        $this->m_CollectionBase->clear();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CollectionBase.contains(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
      @return boolean
     */
    function contains($oObject0)
    {
        return $this->m_CollectionBase->contains(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CollectionBase.get(int)]

      @param pInt0  int
      @return corresponding java type is {java.lang.Object}
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_CollectionBase->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CollectionBase.getCount()]

      @return int
     */
    function getCount()
    {
        return $this->m_CollectionBase->getCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CollectionBase.indexOf(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
      @return int
     */
    function indexOf($oObject0)
    {
        return $this->m_CollectionBase->indexOf(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CollectionBase.iterator()]

      @return corresponding java type is {java.util.Iterator}
     */
    function iterator()
    {
        return ClassFactory::_t2($this->m_CollectionBase->iterator());
    }

    /*
      Wrapper for java version method [com.aspose.cells.CollectionBase.removeAt(int)]

      @param pInt0  int
     */
    function removeAt($pInt0)
    {
        $this->m_CollectionBase->removeAt($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.Color]
  
 */
class Color
{
    public $m_Color;
    
    function __construct($color)
    {
    	$this->m_Color = $color;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Color.equals(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
      @return boolean
     */
    function equals($oObject0)
    {
        return $this->m_Color->equals(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.fromArgb(int)]

      @param pInt0  int
      @return com.aspose.cells.Color
     */
    function fromArgbI($pInt0)
    {
        return ClassFactory::_t2($this->m_Color->fromArgb($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.fromArgb(int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @return com.aspose.cells.Color
     */
    function fromArgbIII($pInt0, $pInt1, $pInt2)
    {
        return ClassFactory::_t2($this->m_Color->fromArgb($pInt0, $pInt1, $pInt2));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.fromArgb(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @return com.aspose.cells.Color
     */
    function fromArgbIIII($pInt0, $pInt1, $pInt2, $pInt3)
    {
        return ClassFactory::_t2($this->m_Color->fromArgb($pInt0, $pInt1, $pInt2, $pInt3));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getA()]

      @return byte
     */
    function getA()
    {
        return $this->m_Color->getA();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getAliceBlue()]

      @return com.aspose.cells.Color
     */
    function getAliceBlue()
    {
        return ClassFactory::_t2($this->m_Color->getAliceBlue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getAntiqueWhite()]

      @return com.aspose.cells.Color
     */
    function getAntiqueWhite()
    {
        return ClassFactory::_t2($this->m_Color->getAntiqueWhite());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getAqua()]

      @return com.aspose.cells.Color
     */
    function getAqua()
    {
        return ClassFactory::_t2($this->m_Color->getAqua());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getAquamarine()]

      @return com.aspose.cells.Color
     */
    function getAquamarine()
    {
        return ClassFactory::_t2($this->m_Color->getAquamarine());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getAzure()]

      @return com.aspose.cells.Color
     */
    function getAzure()
    {
        return ClassFactory::_t2($this->m_Color->getAzure());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getB()]

      @return byte
     */
    function getB()
    {
        return $this->m_Color->getB();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getBeige()]

      @return com.aspose.cells.Color
     */
    function getBeige()
    {
        return ClassFactory::_t2($this->m_Color->getBeige());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getBisque()]

      @return com.aspose.cells.Color
     */
    function getBisque()
    {
        return ClassFactory::_t2($this->m_Color->getBisque());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getBlack()]

      @return com.aspose.cells.Color
     */
    function getBlack()
    {
        return ClassFactory::_t2($this->m_Color->getBlack());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getBlanchedAlmond()]

      @return com.aspose.cells.Color
     */
    function getBlanchedAlmond()
    {
        return ClassFactory::_t2($this->m_Color->getBlanchedAlmond());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getBlue()]

      @return com.aspose.cells.Color
     */
    function getBlue()
    {
        return ClassFactory::_t2($this->m_Color->getBlue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getBlueViolet()]

      @return com.aspose.cells.Color
     */
    function getBlueViolet()
    {
        return ClassFactory::_t2($this->m_Color->getBlueViolet());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getBrown()]

      @return com.aspose.cells.Color
     */
    function getBrown()
    {
        return ClassFactory::_t2($this->m_Color->getBrown());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getBurlyWood()]

      @return com.aspose.cells.Color
     */
    function getBurlyWood()
    {
        return ClassFactory::_t2($this->m_Color->getBurlyWood());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getCadetBlue()]

      @return com.aspose.cells.Color
     */
    function getCadetBlue()
    {
        return ClassFactory::_t2($this->m_Color->getCadetBlue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getChartreuse()]

      @return com.aspose.cells.Color
     */
    function getChartreuse()
    {
        return ClassFactory::_t2($this->m_Color->getChartreuse());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getChocolate()]

      @return com.aspose.cells.Color
     */
    function getChocolate()
    {
        return ClassFactory::_t2($this->m_Color->getChocolate());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getCoral()]

      @return com.aspose.cells.Color
     */
    function getCoral()
    {
        return ClassFactory::_t2($this->m_Color->getCoral());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getCornflowerBlue()]

      @return com.aspose.cells.Color
     */
    function getCornflowerBlue()
    {
        return ClassFactory::_t2($this->m_Color->getCornflowerBlue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getCornsilk()]

      @return com.aspose.cells.Color
     */
    function getCornsilk()
    {
        return ClassFactory::_t2($this->m_Color->getCornsilk());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getCrimson()]

      @return com.aspose.cells.Color
     */
    function getCrimson()
    {
        return ClassFactory::_t2($this->m_Color->getCrimson());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getCyan()]

      @return com.aspose.cells.Color
     */
    function getCyan()
    {
        return ClassFactory::_t2($this->m_Color->getCyan());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getDarkBlue()]

      @return com.aspose.cells.Color
     */
    function getDarkBlue()
    {
        return ClassFactory::_t2($this->m_Color->getDarkBlue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getDarkCyan()]

      @return com.aspose.cells.Color
     */
    function getDarkCyan()
    {
        return ClassFactory::_t2($this->m_Color->getDarkCyan());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getDarkGoldenrod()]

      @return com.aspose.cells.Color
     */
    function getDarkGoldenrod()
    {
        return ClassFactory::_t2($this->m_Color->getDarkGoldenrod());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getDarkGray()]

      @return com.aspose.cells.Color
     */
    function getDarkGray()
    {
        return ClassFactory::_t2($this->m_Color->getDarkGray());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getDarkGreen()]

      @return com.aspose.cells.Color
     */
    function getDarkGreen()
    {
        return ClassFactory::_t2($this->m_Color->getDarkGreen());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getDarkKhaki()]

      @return com.aspose.cells.Color
     */
    function getDarkKhaki()
    {
        return ClassFactory::_t2($this->m_Color->getDarkKhaki());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getDarkMagenta()]

      @return com.aspose.cells.Color
     */
    function getDarkMagenta()
    {
        return ClassFactory::_t2($this->m_Color->getDarkMagenta());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getDarkOliveGreen()]

      @return com.aspose.cells.Color
     */
    function getDarkOliveGreen()
    {
        return ClassFactory::_t2($this->m_Color->getDarkOliveGreen());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getDarkOrange()]

      @return com.aspose.cells.Color
     */
    function getDarkOrange()
    {
        return ClassFactory::_t2($this->m_Color->getDarkOrange());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getDarkOrchid()]

      @return com.aspose.cells.Color
     */
    function getDarkOrchid()
    {
        return ClassFactory::_t2($this->m_Color->getDarkOrchid());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getDarkRed()]

      @return com.aspose.cells.Color
     */
    function getDarkRed()
    {
        return ClassFactory::_t2($this->m_Color->getDarkRed());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getDarkSalmon()]

      @return com.aspose.cells.Color
     */
    function getDarkSalmon()
    {
        return ClassFactory::_t2($this->m_Color->getDarkSalmon());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getDarkSeaGreen()]

      @return com.aspose.cells.Color
     */
    function getDarkSeaGreen()
    {
        return ClassFactory::_t2($this->m_Color->getDarkSeaGreen());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getDarkSlateBlue()]

      @return com.aspose.cells.Color
     */
    function getDarkSlateBlue()
    {
        return ClassFactory::_t2($this->m_Color->getDarkSlateBlue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getDarkSlateGray()]

      @return com.aspose.cells.Color
     */
    function getDarkSlateGray()
    {
        return ClassFactory::_t2($this->m_Color->getDarkSlateGray());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getDarkTurquoise()]

      @return com.aspose.cells.Color
     */
    function getDarkTurquoise()
    {
        return ClassFactory::_t2($this->m_Color->getDarkTurquoise());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getDarkViolet()]

      @return com.aspose.cells.Color
     */
    function getDarkViolet()
    {
        return ClassFactory::_t2($this->m_Color->getDarkViolet());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getDeepPink()]

      @return com.aspose.cells.Color
     */
    function getDeepPink()
    {
        return ClassFactory::_t2($this->m_Color->getDeepPink());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getDeepSkyBlue()]

      @return com.aspose.cells.Color
     */
    function getDeepSkyBlue()
    {
        return ClassFactory::_t2($this->m_Color->getDeepSkyBlue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getDimGray()]

      @return com.aspose.cells.Color
     */
    function getDimGray()
    {
        return ClassFactory::_t2($this->m_Color->getDimGray());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getDodgerBlue()]

      @return com.aspose.cells.Color
     */
    function getDodgerBlue()
    {
        return ClassFactory::_t2($this->m_Color->getDodgerBlue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getEmpty()]

      @return com.aspose.cells.Color
     */
    function getEmpty()
    {
        return ClassFactory::_t2($this->m_Color->getEmpty());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getFirebrick()]

      @return com.aspose.cells.Color
     */
    function getFirebrick()
    {
        return ClassFactory::_t2($this->m_Color->getFirebrick());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getFloralWhite()]

      @return com.aspose.cells.Color
     */
    function getFloralWhite()
    {
        return ClassFactory::_t2($this->m_Color->getFloralWhite());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getForestGreen()]

      @return com.aspose.cells.Color
     */
    function getForestGreen()
    {
        return ClassFactory::_t2($this->m_Color->getForestGreen());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getFuchsia()]

      @return com.aspose.cells.Color
     */
    function getFuchsia()
    {
        return ClassFactory::_t2($this->m_Color->getFuchsia());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getG()]

      @return byte
     */
    function getG()
    {
        return $this->m_Color->getG();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getGainsboro()]

      @return com.aspose.cells.Color
     */
    function getGainsboro()
    {
        return ClassFactory::_t2($this->m_Color->getGainsboro());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getGhostWhite()]

      @return com.aspose.cells.Color
     */
    function getGhostWhite()
    {
        return ClassFactory::_t2($this->m_Color->getGhostWhite());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getGold()]

      @return com.aspose.cells.Color
     */
    function getGold()
    {
        return ClassFactory::_t2($this->m_Color->getGold());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getGoldenrod()]

      @return com.aspose.cells.Color
     */
    function getGoldenrod()
    {
        return ClassFactory::_t2($this->m_Color->getGoldenrod());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getGray()]

      @return com.aspose.cells.Color
     */
    function getGray()
    {
        return ClassFactory::_t2($this->m_Color->getGray());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getGreen()]

      @return com.aspose.cells.Color
     */
    function getGreen()
    {
        return ClassFactory::_t2($this->m_Color->getGreen());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getGreenYellow()]

      @return com.aspose.cells.Color
     */
    function getGreenYellow()
    {
        return ClassFactory::_t2($this->m_Color->getGreenYellow());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getHoneydew()]

      @return com.aspose.cells.Color
     */
    function getHoneydew()
    {
        return ClassFactory::_t2($this->m_Color->getHoneydew());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getHotPink()]

      @return com.aspose.cells.Color
     */
    function getHotPink()
    {
        return ClassFactory::_t2($this->m_Color->getHotPink());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getIndianRed()]

      @return com.aspose.cells.Color
     */
    function getIndianRed()
    {
        return ClassFactory::_t2($this->m_Color->getIndianRed());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getIndigo()]

      @return com.aspose.cells.Color
     */
    function getIndigo()
    {
        return ClassFactory::_t2($this->m_Color->getIndigo());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getIvory()]

      @return com.aspose.cells.Color
     */
    function getIvory()
    {
        return ClassFactory::_t2($this->m_Color->getIvory());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getKhaki()]

      @return com.aspose.cells.Color
     */
    function getKhaki()
    {
        return ClassFactory::_t2($this->m_Color->getKhaki());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getLavender()]

      @return com.aspose.cells.Color
     */
    function getLavender()
    {
        return ClassFactory::_t2($this->m_Color->getLavender());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getLavenderBlush()]

      @return com.aspose.cells.Color
     */
    function getLavenderBlush()
    {
        return ClassFactory::_t2($this->m_Color->getLavenderBlush());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getLawnGreen()]

      @return com.aspose.cells.Color
     */
    function getLawnGreen()
    {
        return ClassFactory::_t2($this->m_Color->getLawnGreen());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getLemonChiffon()]

      @return com.aspose.cells.Color
     */
    function getLemonChiffon()
    {
        return ClassFactory::_t2($this->m_Color->getLemonChiffon());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getLightBlue()]

      @return com.aspose.cells.Color
     */
    function getLightBlue()
    {
        return ClassFactory::_t2($this->m_Color->getLightBlue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getLightCoral()]

      @return com.aspose.cells.Color
     */
    function getLightCoral()
    {
        return ClassFactory::_t2($this->m_Color->getLightCoral());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getLightCyan()]

      @return com.aspose.cells.Color
     */
    function getLightCyan()
    {
        return ClassFactory::_t2($this->m_Color->getLightCyan());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getLightGoldenrodYellow()]

      @return com.aspose.cells.Color
     */
    function getLightGoldenrodYellow()
    {
        return ClassFactory::_t2($this->m_Color->getLightGoldenrodYellow());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getLightGray()]

      @return com.aspose.cells.Color
     */
    function getLightGray()
    {
        return ClassFactory::_t2($this->m_Color->getLightGray());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getLightGreen()]

      @return com.aspose.cells.Color
     */
    function getLightGreen()
    {
        return ClassFactory::_t2($this->m_Color->getLightGreen());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getLightPink()]

      @return com.aspose.cells.Color
     */
    function getLightPink()
    {
        return ClassFactory::_t2($this->m_Color->getLightPink());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getLightSalmon()]

      @return com.aspose.cells.Color
     */
    function getLightSalmon()
    {
        return ClassFactory::_t2($this->m_Color->getLightSalmon());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getLightSeaGreen()]

      @return com.aspose.cells.Color
     */
    function getLightSeaGreen()
    {
        return ClassFactory::_t2($this->m_Color->getLightSeaGreen());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getLightSkyBlue()]

      @return com.aspose.cells.Color
     */
    function getLightSkyBlue()
    {
        return ClassFactory::_t2($this->m_Color->getLightSkyBlue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getLightSlateGray()]

      @return com.aspose.cells.Color
     */
    function getLightSlateGray()
    {
        return ClassFactory::_t2($this->m_Color->getLightSlateGray());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getLightSteelBlue()]

      @return com.aspose.cells.Color
     */
    function getLightSteelBlue()
    {
        return ClassFactory::_t2($this->m_Color->getLightSteelBlue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getLightYellow()]

      @return com.aspose.cells.Color
     */
    function getLightYellow()
    {
        return ClassFactory::_t2($this->m_Color->getLightYellow());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getLime()]

      @return com.aspose.cells.Color
     */
    function getLime()
    {
        return ClassFactory::_t2($this->m_Color->getLime());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getLimeGreen()]

      @return com.aspose.cells.Color
     */
    function getLimeGreen()
    {
        return ClassFactory::_t2($this->m_Color->getLimeGreen());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getLinen()]

      @return com.aspose.cells.Color
     */
    function getLinen()
    {
        return ClassFactory::_t2($this->m_Color->getLinen());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getMagenta()]

      @return com.aspose.cells.Color
     */
    function getMagenta()
    {
        return ClassFactory::_t2($this->m_Color->getMagenta());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getMaroon()]

      @return com.aspose.cells.Color
     */
    function getMaroon()
    {
        return ClassFactory::_t2($this->m_Color->getMaroon());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getMediumAquamarine()]

      @return com.aspose.cells.Color
     */
    function getMediumAquamarine()
    {
        return ClassFactory::_t2($this->m_Color->getMediumAquamarine());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getMediumBlue()]

      @return com.aspose.cells.Color
     */
    function getMediumBlue()
    {
        return ClassFactory::_t2($this->m_Color->getMediumBlue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getMediumOrchid()]

      @return com.aspose.cells.Color
     */
    function getMediumOrchid()
    {
        return ClassFactory::_t2($this->m_Color->getMediumOrchid());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getMediumPurple()]

      @return com.aspose.cells.Color
     */
    function getMediumPurple()
    {
        return ClassFactory::_t2($this->m_Color->getMediumPurple());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getMediumSeaGreen()]

      @return com.aspose.cells.Color
     */
    function getMediumSeaGreen()
    {
        return ClassFactory::_t2($this->m_Color->getMediumSeaGreen());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getMediumSlateBlue()]

      @return com.aspose.cells.Color
     */
    function getMediumSlateBlue()
    {
        return ClassFactory::_t2($this->m_Color->getMediumSlateBlue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getMediumSpringGreen()]

      @return com.aspose.cells.Color
     */
    function getMediumSpringGreen()
    {
        return ClassFactory::_t2($this->m_Color->getMediumSpringGreen());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getMediumTurquoise()]

      @return com.aspose.cells.Color
     */
    function getMediumTurquoise()
    {
        return ClassFactory::_t2($this->m_Color->getMediumTurquoise());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getMediumVioletRed()]

      @return com.aspose.cells.Color
     */
    function getMediumVioletRed()
    {
        return ClassFactory::_t2($this->m_Color->getMediumVioletRed());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getMidnightBlue()]

      @return com.aspose.cells.Color
     */
    function getMidnightBlue()
    {
        return ClassFactory::_t2($this->m_Color->getMidnightBlue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getMintCream()]

      @return com.aspose.cells.Color
     */
    function getMintCream()
    {
        return ClassFactory::_t2($this->m_Color->getMintCream());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getMistyRose()]

      @return com.aspose.cells.Color
     */
    function getMistyRose()
    {
        return ClassFactory::_t2($this->m_Color->getMistyRose());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getMoccasin()]

      @return com.aspose.cells.Color
     */
    function getMoccasin()
    {
        return ClassFactory::_t2($this->m_Color->getMoccasin());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getNavajoWhite()]

      @return com.aspose.cells.Color
     */
    function getNavajoWhite()
    {
        return ClassFactory::_t2($this->m_Color->getNavajoWhite());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getNavy()]

      @return com.aspose.cells.Color
     */
    function getNavy()
    {
        return ClassFactory::_t2($this->m_Color->getNavy());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getOldLace()]

      @return com.aspose.cells.Color
     */
    function getOldLace()
    {
        return ClassFactory::_t2($this->m_Color->getOldLace());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getOlive()]

      @return com.aspose.cells.Color
     */
    function getOlive()
    {
        return ClassFactory::_t2($this->m_Color->getOlive());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getOliveDrab()]

      @return com.aspose.cells.Color
     */
    function getOliveDrab()
    {
        return ClassFactory::_t2($this->m_Color->getOliveDrab());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getOrange()]

      @return com.aspose.cells.Color
     */
    function getOrange()
    {
        return ClassFactory::_t2($this->m_Color->getOrange());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getOrangeRed()]

      @return com.aspose.cells.Color
     */
    function getOrangeRed()
    {
        return ClassFactory::_t2($this->m_Color->getOrangeRed());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getOrchid()]

      @return com.aspose.cells.Color
     */
    function getOrchid()
    {
        return ClassFactory::_t2($this->m_Color->getOrchid());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getPaleGoldenrod()]

      @return com.aspose.cells.Color
     */
    function getPaleGoldenrod()
    {
        return ClassFactory::_t2($this->m_Color->getPaleGoldenrod());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getPaleGreen()]

      @return com.aspose.cells.Color
     */
    function getPaleGreen()
    {
        return ClassFactory::_t2($this->m_Color->getPaleGreen());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getPaleTurquoise()]

      @return com.aspose.cells.Color
     */
    function getPaleTurquoise()
    {
        return ClassFactory::_t2($this->m_Color->getPaleTurquoise());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getPaleVioletRed()]

      @return com.aspose.cells.Color
     */
    function getPaleVioletRed()
    {
        return ClassFactory::_t2($this->m_Color->getPaleVioletRed());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getPapayaWhip()]

      @return com.aspose.cells.Color
     */
    function getPapayaWhip()
    {
        return ClassFactory::_t2($this->m_Color->getPapayaWhip());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getPeachPuff()]

      @return com.aspose.cells.Color
     */
    function getPeachPuff()
    {
        return ClassFactory::_t2($this->m_Color->getPeachPuff());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getPeru()]

      @return com.aspose.cells.Color
     */
    function getPeru()
    {
        return ClassFactory::_t2($this->m_Color->getPeru());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getPink()]

      @return com.aspose.cells.Color
     */
    function getPink()
    {
        return ClassFactory::_t2($this->m_Color->getPink());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getPlum()]

      @return com.aspose.cells.Color
     */
    function getPlum()
    {
        return ClassFactory::_t2($this->m_Color->getPlum());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getPowderBlue()]

      @return com.aspose.cells.Color
     */
    function getPowderBlue()
    {
        return ClassFactory::_t2($this->m_Color->getPowderBlue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getPurple()]

      @return com.aspose.cells.Color
     */
    function getPurple()
    {
        return ClassFactory::_t2($this->m_Color->getPurple());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getR()]

      @return byte
     */
    function getR()
    {
        return $this->m_Color->getR();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getRed()]

      @return com.aspose.cells.Color
     */
    function getRed()
    {
        return ClassFactory::_t2($this->m_Color->getRed());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getRosyBrown()]

      @return com.aspose.cells.Color
     */
    function getRosyBrown()
    {
        return ClassFactory::_t2($this->m_Color->getRosyBrown());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getRoyalBlue()]

      @return com.aspose.cells.Color
     */
    function getRoyalBlue()
    {
        return ClassFactory::_t2($this->m_Color->getRoyalBlue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getSaddleBrown()]

      @return com.aspose.cells.Color
     */
    function getSaddleBrown()
    {
        return ClassFactory::_t2($this->m_Color->getSaddleBrown());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getSalmon()]

      @return com.aspose.cells.Color
     */
    function getSalmon()
    {
        return ClassFactory::_t2($this->m_Color->getSalmon());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getSandyBrown()]

      @return com.aspose.cells.Color
     */
    function getSandyBrown()
    {
        return ClassFactory::_t2($this->m_Color->getSandyBrown());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getSeaGreen()]

      @return com.aspose.cells.Color
     */
    function getSeaGreen()
    {
        return ClassFactory::_t2($this->m_Color->getSeaGreen());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getSeaShell()]

      @return com.aspose.cells.Color
     */
    function getSeaShell()
    {
        return ClassFactory::_t2($this->m_Color->getSeaShell());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getSienna()]

      @return com.aspose.cells.Color
     */
    function getSienna()
    {
        return ClassFactory::_t2($this->m_Color->getSienna());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getSilver()]

      @return com.aspose.cells.Color
     */
    function getSilver()
    {
        return ClassFactory::_t2($this->m_Color->getSilver());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getSkyBlue()]

      @return com.aspose.cells.Color
     */
    function getSkyBlue()
    {
        return ClassFactory::_t2($this->m_Color->getSkyBlue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getSlateBlue()]

      @return com.aspose.cells.Color
     */
    function getSlateBlue()
    {
        return ClassFactory::_t2($this->m_Color->getSlateBlue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getSlateGray()]

      @return com.aspose.cells.Color
     */
    function getSlateGray()
    {
        return ClassFactory::_t2($this->m_Color->getSlateGray());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getSnow()]

      @return com.aspose.cells.Color
     */
    function getSnow()
    {
        return ClassFactory::_t2($this->m_Color->getSnow());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getSpringGreen()]

      @return com.aspose.cells.Color
     */
    function getSpringGreen()
    {
        return ClassFactory::_t2($this->m_Color->getSpringGreen());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getSteelBlue()]

      @return com.aspose.cells.Color
     */
    function getSteelBlue()
    {
        return ClassFactory::_t2($this->m_Color->getSteelBlue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getTan()]

      @return com.aspose.cells.Color
     */
    function getTan()
    {
        return ClassFactory::_t2($this->m_Color->getTan());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getTeal()]

      @return com.aspose.cells.Color
     */
    function getTeal()
    {
        return ClassFactory::_t2($this->m_Color->getTeal());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getThistle()]

      @return com.aspose.cells.Color
     */
    function getThistle()
    {
        return ClassFactory::_t2($this->m_Color->getThistle());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getTomato()]

      @return com.aspose.cells.Color
     */
    function getTomato()
    {
        return ClassFactory::_t2($this->m_Color->getTomato());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getTransparent()]

      @return com.aspose.cells.Color
     */
    function getTransparent()
    {
        return ClassFactory::_t2($this->m_Color->getTransparent());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getTurquoise()]

      @return com.aspose.cells.Color
     */
    function getTurquoise()
    {
        return ClassFactory::_t2($this->m_Color->getTurquoise());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getViolet()]

      @return com.aspose.cells.Color
     */
    function getViolet()
    {
        return ClassFactory::_t2($this->m_Color->getViolet());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getWheat()]

      @return com.aspose.cells.Color
     */
    function getWheat()
    {
        return ClassFactory::_t2($this->m_Color->getWheat());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getWhite()]

      @return com.aspose.cells.Color
     */
    function getWhite()
    {
        return ClassFactory::_t2($this->m_Color->getWhite());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getWhiteSmoke()]

      @return com.aspose.cells.Color
     */
    function getWhiteSmoke()
    {
        return ClassFactory::_t2($this->m_Color->getWhiteSmoke());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getYellow()]

      @return com.aspose.cells.Color
     */
    function getYellow()
    {
        return ClassFactory::_t2($this->m_Color->getYellow());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.getYellowGreen()]

      @return com.aspose.cells.Color
     */
    function getYellowGreen()
    {
        return ClassFactory::_t2($this->m_Color->getYellowGreen());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.hashCode()]

      @return int
     */
    function hashCode()
    {
        return $this->m_Color->hashCode();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.isEmpty()]

      @return boolean
     */
    function isEmpty()
    {
        return $this->m_Color->isEmpty();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Color.toArgb()]

      @return int
     */
    function toArgb()
    {
        return $this->m_Color->toArgb();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ColorFilter]
  
 */
class ColorFilter
{
    public $m_ColorFilter;
    
    function __construct($colorFilter)
    {
    	$this->m_ColorFilter = $colorFilter;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ColorFilter.getColor(com.aspose.cells.WorksheetCollection)]

      @param oWorksheetCollection0  com.aspose.cells.WorksheetCollection
      @return com.aspose.cells.Color
     */
    function getColor($oWorksheetCollection0)
    {
        return ClassFactory::_t2($this->m_ColorFilter->getColor(ClassFactory::_t1($oWorksheetCollection0)));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ColorFilter.getFilterByFillColor()]

      @return boolean
     */
    function getFilterByFillColor()
    {
        return $this->m_ColorFilter->getFilterByFillColor();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ColorFilter.setFilterByFillColor(boolean)]

      @param pBoolean0  boolean
     */
    function setFilterByFillColor($pBoolean0)
    {
        $this->m_ColorFilter->setFilterByFillColor($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ColorScale]
  
 */
class ColorScale
{
    public $m_ColorScale;
    
    function __construct($colorScale)
    {
    	$this->m_ColorScale = $colorScale;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ColorScale.getMaxCfvo()]

      @return com.aspose.cells.ConditionalFormattingValue
     */
    function getMaxCfvo()
    {
        return ClassFactory::_t2($this->m_ColorScale->getMaxCfvo());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ColorScale.getMaxColor()]

      @return com.aspose.cells.Color
     */
    function getMaxColor()
    {
        return ClassFactory::_t2($this->m_ColorScale->getMaxColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ColorScale.getMidCfvo()]

      @return com.aspose.cells.ConditionalFormattingValue
     */
    function getMidCfvo()
    {
        return ClassFactory::_t2($this->m_ColorScale->getMidCfvo());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ColorScale.getMidColor()]

      @return com.aspose.cells.Color
     */
    function getMidColor()
    {
        return ClassFactory::_t2($this->m_ColorScale->getMidColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ColorScale.getMinCfvo()]

      @return com.aspose.cells.ConditionalFormattingValue
     */
    function getMinCfvo()
    {
        return ClassFactory::_t2($this->m_ColorScale->getMinCfvo());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ColorScale.getMinColor()]

      @return com.aspose.cells.Color
     */
    function getMinColor()
    {
        return ClassFactory::_t2($this->m_ColorScale->getMinColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ColorScale.setMaxColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setMaxColor($oColor0)
    {
        $this->m_ColorScale->setMaxColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ColorScale.setMidColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setMidColor($oColor0)
    {
        $this->m_ColorScale->setMidColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ColorScale.setMinColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setMinColor($oColor0)
    {
        $this->m_ColorScale->setMinColor(ClassFactory::_t1($oColor0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ColorType]
  
 */
class ColorType
{
    public $m_ColorType;
    
    function __construct($colorType)
    {
    	$this->m_ColorType = $colorType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Column]
  
 */
class Column
{
    public $m_Column;
    
    function __construct($column)
    {
    	$this->m_Column = $column;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Column.applyStyle(com.aspose.cells.Style, com.aspose.cells.StyleFlag)]

      @param oStyle0  com.aspose.cells.Style
      @param oStyleFlag1  com.aspose.cells.StyleFlag
     */
    function applyStyle($oStyle0, $oStyleFlag1)
    {
        $this->m_Column->applyStyle(ClassFactory::_t1($oStyle0), ClassFactory::_t1($oStyleFlag1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Column.getGroupLevel()]

      @return byte
     */
    function getGroupLevel()
    {
        return $this->m_Column->getGroupLevel();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Column.getIndex()]

      @return int
     */
    function getIndex()
    {
        return $this->m_Column->getIndex();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Column.getStyle()]

      @return com.aspose.cells.Style
     */
    function getStyle()
    {
        return ClassFactory::_t2($this->m_Column->getStyle());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Column.getWidth()]

      @return double
     */
    function getWidth()
    {
        return $this->m_Column->getWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Column.isHidden()]

      @return boolean
     */
    function isHidden()
    {
        return $this->m_Column->isHidden();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Column.setHidden(boolean)]

      @param pBoolean0  boolean
     */
    function setHidden($pBoolean0)
    {
        $this->m_Column->setHidden($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Column.setWidth(double)]

      @param pDouble0  double
     */
    function setWidth($pDouble0)
    {
        $this->m_Column->setWidth($pDouble0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ColumnCollection]
  
 */
class ColumnCollection extends CollectionBase
{
    public $m_ColumnCollection;
    
    function __construct($columnCollection)
    {
    	$this->m_ColumnCollection = $columnCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ColumnCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.Column
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_ColumnCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ColumnCollection.getByIndex(int)]

      @param pInt0  int
      @return com.aspose.cells.Column
     */
    function getByIndex($pInt0)
    {
        return ClassFactory::_t2($this->m_ColumnCollection->getByIndex($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ColumnCollection.getColumnByIndex(int)]

      @param pInt0  int
      @return com.aspose.cells.Column
     */
    function getColumnByIndex($pInt0)
    {
        return ClassFactory::_t2($this->m_ColumnCollection->getColumnByIndex($pInt0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ComboBox]
  
 */
class ComboBox extends Shape
{
    public $m_ComboBox;
    
    function __construct($comboBox)
    {
    	$this->m_ComboBox = $comboBox;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ComboBox.getDropDownLines()]

      @return int
     */
    function getDropDownLines()
    {
        return $this->m_ComboBox->getDropDownLines();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ComboBox.getSelectedCell()]

      @return com.aspose.cells.Cell
     */
    function getSelectedCell()
    {
        return ClassFactory::_t2($this->m_ComboBox->getSelectedCell());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ComboBox.getSelectedIndex()]

      @return int
     */
    function getSelectedIndex()
    {
        return $this->m_ComboBox->getSelectedIndex();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ComboBox.getSelectedValue()]

      @return String
     */
    function getSelectedValue()
    {
        return $this->m_ComboBox->getSelectedValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ComboBox.getShadow()]

      @return boolean
     */
    function getShadow()
    {
        return $this->m_ComboBox->getShadow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ComboBox.setDropDownLines(int)]

      @param pInt0  int
     */
    function setDropDownLines($pInt0)
    {
        $this->m_ComboBox->setDropDownLines($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ComboBox.setSelectedIndex(int)]

      @param pInt0  int
     */
    function setSelectedIndex($pInt0)
    {
        $this->m_ComboBox->setSelectedIndex($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ComboBox.setShadow(boolean)]

      @param pBoolean0  boolean
     */
    function setShadow($pBoolean0)
    {
        $this->m_ComboBox->setShadow($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.Comment]
  
 */
class Comment
{
    public $m_Comment;
    
    function __construct($comment)
    {
    	$this->m_Comment = $comment;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Comment.characters(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return com.aspose.cells.FontSetting
     */
    function characters($pInt0, $pInt1)
    {
        return ClassFactory::_t2($this->m_Comment->characters($pInt0, $pInt1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.getAuthor()]

      @return String
     */
    function getAuthor()
    {
        return $this->m_Comment->getAuthor();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.getAutoSize()]

      @return boolean
     */
    function getAutoSize()
    {
        return $this->m_Comment->getAutoSize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.getCharacters()]

      @return array, corresponding java type is {java.util.ArrayList}
     */
    function getCharacters()
    {
        return ClassFactory::_t2($this->m_Comment->getCharacters());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.getColumn()]

      @return int
     */
    function getColumn()
    {
        return $this->m_Comment->getColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.getCommentShape()]

      @return com.aspose.cells.CommentShape
     */
    function getCommentShape()
    {
        return ClassFactory::_t2($this->m_Comment->getCommentShape());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.getFont()]

      @return com.aspose.cells.Font
     */
    function getFont()
    {
        return ClassFactory::_t2($this->m_Comment->getFont());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.getHeightCM()]

      @return double
     */
    function getHeightCM()
    {
        return $this->m_Comment->getHeightCM();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.getHeightInch()]

      @return double
     */
    function getHeightInch()
    {
        return $this->m_Comment->getHeightInch();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.getHtmlNote()]

      @return String
     */
    function getHtmlNote()
    {
        return $this->m_Comment->getHtmlNote();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.getNote()]

      @return String
     */
    function getNote()
    {
        return $this->m_Comment->getNote();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.getRow()]

      @return int
     */
    function getRow()
    {
        return $this->m_Comment->getRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.getTextHorizontalAlignment()]

      @return int
     */
    function getTextHorizontalAlignment()
    {
        return $this->m_Comment->getTextHorizontalAlignment();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.getTextOrientationType()]

      @return int
     */
    function getTextOrientationType()
    {
        return $this->m_Comment->getTextOrientationType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.getTextVerticalAlignment()]

      @return int
     */
    function getTextVerticalAlignment()
    {
        return $this->m_Comment->getTextVerticalAlignment();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.getWidthCM()]

      @return double
     */
    function getWidthCM()
    {
        return $this->m_Comment->getWidthCM();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.getWidthInch()]

      @return double
     */
    function getWidthInch()
    {
        return $this->m_Comment->getWidthInch();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.isVisible()]

      @return boolean
     */
    function isVisible()
    {
        return $this->m_Comment->isVisible();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.setAuthor(java.lang.String)]

      @param oString0  String
     */
    function setAuthor($oString0)
    {
        $this->m_Comment->setAuthor($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.setAutoSize(boolean)]

      @param pBoolean0  boolean
     */
    function setAutoSize($pBoolean0)
    {
        $this->m_Comment->setAutoSize($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.setHeightCM(double)]

      @param pDouble0  double
     */
    function setHeightCM($pDouble0)
    {
        $this->m_Comment->setHeightCM($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.setHeightInch(double)]

      @param pDouble0  double
     */
    function setHeightInch($pDouble0)
    {
        $this->m_Comment->setHeightInch($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.setHtmlNote(java.lang.String)]

      @param oString0  String
     */
    function setHtmlNote($oString0)
    {
        $this->m_Comment->setHtmlNote($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.setNote(java.lang.String)]

      @param oString0  String
     */
    function setNote($oString0)
    {
        $this->m_Comment->setNote($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.setTextHorizontalAlignment(int)]

      @param pInt0  int
     */
    function setTextHorizontalAlignment($pInt0)
    {
        $this->m_Comment->setTextHorizontalAlignment($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.setTextOrientationType(int)]

      @param pInt0  int
     */
    function setTextOrientationType($pInt0)
    {
        $this->m_Comment->setTextOrientationType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.setTextVerticalAlignment(int)]

      @param pInt0  int
     */
    function setTextVerticalAlignment($pInt0)
    {
        $this->m_Comment->setTextVerticalAlignment($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.setVisible(boolean)]

      @param pBoolean0  boolean
     */
    function setVisible($pBoolean0)
    {
        $this->m_Comment->setVisible($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.setWidthCM(double)]

      @param pDouble0  double
     */
    function setWidthCM($pDouble0)
    {
        $this->m_Comment->setWidthCM($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Comment.setWidthInch(double)]

      @param pDouble0  double
     */
    function setWidthInch($pDouble0)
    {
        $this->m_Comment->setWidthInch($pDouble0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.CommentCollection]
  
 */
class CommentCollection extends CollectionBase
{
    public $m_CommentCollection;
    
    function __construct($commentCollection)
    {
    	$this->m_CommentCollection = $commentCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.CommentCollection.add(java.lang.String)]

      @param oString0  String
      @return int
     */
    function addS($oString0)
    {
        return $this->m_CommentCollection->add($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CommentCollection.add(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return int
     */
    function addII($pInt0, $pInt1)
    {
        return $this->m_CommentCollection->add($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CommentCollection.clear()]

     */
    function clear()
    {
        $this->m_CommentCollection->clear();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CommentCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.Comment
     */
    function getI($pInt0)
    {
        return ClassFactory::_t2($this->m_CommentCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CommentCollection.get(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.Comment
     */
    function getS($oString0)
    {
        return ClassFactory::_t2($this->m_CommentCollection->get($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CommentCollection.get(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return com.aspose.cells.Comment
     */
    function getII($pInt0, $pInt1)
    {
        return ClassFactory::_t2($this->m_CommentCollection->get($pInt0, $pInt1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CommentCollection.removeAt(java.lang.String)]

      @param oString0  String
     */
    function removeAtS($oString0)
    {
        $this->m_CommentCollection->removeAt($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CommentCollection.removeAt(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function removeAtII($pInt0, $pInt1)
    {
        $this->m_CommentCollection->removeAt($pInt0, $pInt1);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.CommentShape]
  
 */
class CommentShape extends Shape
{
    public $m_CommentShape;
    
    function __construct($commentShape)
    {
    	$this->m_CommentShape = $commentShape;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.CommentShape.getComment()]

      @return com.aspose.cells.Comment
     */
    function getComment()
    {
        return ClassFactory::_t2($this->m_CommentShape->getComment());
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ConditionalFormattingCollection]
  
 */
class ConditionalFormattingCollection extends CollectionBase
{
    public $m_ConditionalFormattingCollection;
    
    function __construct($conditionalFormattingCollection)
    {
    	$this->m_ConditionalFormattingCollection = $conditionalFormattingCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingCollection.add()]

      @return int
     */
    function add()
    {
        return $this->m_ConditionalFormattingCollection->add();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingCollection.copy(com.aspose.cells.ConditionalFormattingCollection)]

      @param oConditionalFormattingCollection0  com.aspose.cells.ConditionalFormattingCollection
     */
    function copy($oConditionalFormattingCollection0)
    {
        $this->m_ConditionalFormattingCollection->copy(ClassFactory::_t1($oConditionalFormattingCollection0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.FormatConditionCollection
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_ConditionalFormattingCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingCollection.removeArea(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
     */
    function removeArea($pInt0, $pInt1, $pInt2, $pInt3)
    {
        $this->m_ConditionalFormattingCollection->removeArea($pInt0, $pInt1, $pInt2, $pInt3);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ConditionalFormattingIcon]
  
 */
class ConditionalFormattingIcon
{
    public $m_ConditionalFormattingIcon;
    
    function __construct($conditionalFormattingIcon)
    {
    	$this->m_ConditionalFormattingIcon = $conditionalFormattingIcon;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingIcon.getIconImageData(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return byte[]
     */
    function getIconImageData($pInt0, $pInt1)
    {
        return $this->m_ConditionalFormattingIcon->getIconImageData($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingIcon.getImageData()]

      @return byte[]
     */
    function getImageData()
    {
        return $this->m_ConditionalFormattingIcon->getImageData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingIcon.getIndex()]

      @return int
     */
    function getIndex()
    {
        return $this->m_ConditionalFormattingIcon->getIndex();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingIcon.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_ConditionalFormattingIcon->getType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingIcon.setIndex(int)]

      @param pInt0  int
     */
    function setIndex($pInt0)
    {
        $this->m_ConditionalFormattingIcon->setIndex($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingIcon.setType(int)]

      @param pInt0  int
     */
    function setType($pInt0)
    {
        $this->m_ConditionalFormattingIcon->setType($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ConditionalFormattingIconCollection]
  
 */
class ConditionalFormattingIconCollection extends CollectionBase
{
    public $m_ConditionalFormattingIconCollection;
    
    function __construct($conditionalFormattingIconCollection)
    {
    	$this->m_ConditionalFormattingIconCollection = $conditionalFormattingIconCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingIconCollection.add(com.aspose.cells.ConditionalFormattingIcon)]

      @param oConditionalFormattingIcon0  com.aspose.cells.ConditionalFormattingIcon
      @return int
     */
    function addC($oConditionalFormattingIcon0)
    {
        return $this->m_ConditionalFormattingIconCollection->add(ClassFactory::_t1($oConditionalFormattingIcon0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingIconCollection.add(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return int
     */
    function addII($pInt0, $pInt1)
    {
        return $this->m_ConditionalFormattingIconCollection->add($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingIconCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.ConditionalFormattingIcon
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_ConditionalFormattingIconCollection->get($pInt0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ConditionalFormattingResult]
  
 */
class ConditionalFormattingResult
{
    public $m_ConditionalFormattingResult;
    
    function __construct($conditionalFormattingResult)
    {
    	$this->m_ConditionalFormattingResult = $conditionalFormattingResult;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingResult.getColorScaleResult()]

      @return com.aspose.cells.Color
     */
    function getColorScaleResult()
    {
        return ClassFactory::_t2($this->m_ConditionalFormattingResult->getColorScaleResult());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingResult.getConditionalFormattingColorScale()]

      @return com.aspose.cells.ColorScale
     */
    function getConditionalFormattingColorScale()
    {
        return ClassFactory::_t2($this->m_ConditionalFormattingResult->getConditionalFormattingColorScale());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingResult.getConditionalFormattingDataBar()]

      @return com.aspose.cells.DataBar
     */
    function getConditionalFormattingDataBar()
    {
        return ClassFactory::_t2($this->m_ConditionalFormattingResult->getConditionalFormattingDataBar());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingResult.getConditionalFormattingIcon()]

      @return com.aspose.cells.ConditionalFormattingIcon
     */
    function getConditionalFormattingIcon()
    {
        return ClassFactory::_t2($this->m_ConditionalFormattingResult->getConditionalFormattingIcon());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingResult.getConditionalStyle()]

      @return com.aspose.cells.Style
     */
    function getConditionalStyle()
    {
        return ClassFactory::_t2($this->m_ConditionalFormattingResult->getConditionalStyle());
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ConditionalFormattingValue]
  
 */
class ConditionalFormattingValue
{
    public $m_ConditionalFormattingValue;
    
    function __construct($conditionalFormattingValue)
    {
    	$this->m_ConditionalFormattingValue = $conditionalFormattingValue;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingValue.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_ConditionalFormattingValue->getType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingValue.getValue()]

      @return corresponding java type is {java.lang.Object}
     */
    function getValue()
    {
        return ClassFactory::_t2($this->m_ConditionalFormattingValue->getValue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingValue.isGTE()]

      @return boolean
     */
    function isGTE()
    {
        return $this->m_ConditionalFormattingValue->isGTE();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingValue.setGTE(boolean)]

      @param pBoolean0  boolean
     */
    function setGTE($pBoolean0)
    {
        $this->m_ConditionalFormattingValue->setGTE($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingValue.setType(int)]

      @param pInt0  int
     */
    function setType($pInt0)
    {
        $this->m_ConditionalFormattingValue->setType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingValue.setValue(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
     */
    function setValue($oObject0)
    {
        $this->m_ConditionalFormattingValue->setValue(ClassFactory::_t1($oObject0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ConditionalFormattingValueCollection]
  
 */
class ConditionalFormattingValueCollection extends CollectionBase
{
    public $m_ConditionalFormattingValueCollection;
    
    function __construct($conditionalFormattingValueCollection)
    {
    	$this->m_ConditionalFormattingValueCollection = $conditionalFormattingValueCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingValueCollection.add(int, java.lang.String)]

      @param pInt0  int
      @param oString1  String
      @return int
     */
    function add($pInt0, $oString1)
    {
        return $this->m_ConditionalFormattingValueCollection->add($pInt0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConditionalFormattingValueCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.ConditionalFormattingValue
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_ConditionalFormattingValueCollection->get($pInt0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ConnectionDataSourceType]
  
 */
class ConnectionDataSourceType
{
    public $m_ConnectionDataSourceType;
    
    function __construct($connectionDataSourceType)
    {
    	$this->m_ConnectionDataSourceType = $connectionDataSourceType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.ConnectionParameter]
  
 */
class ConnectionParameter
{
    public $m_ConnectionParameter;
    
    function __construct($connectionParameter)
    {
    	$this->m_ConnectionParameter = $connectionParameter;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ConnectionParameter.getCellReference()]

      @return String
     */
    function getCellReference()
    {
        return $this->m_ConnectionParameter->getCellReference();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConnectionParameter.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_ConnectionParameter->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConnectionParameter.getPrompt()]

      @return String
     */
    function getPrompt()
    {
        return $this->m_ConnectionParameter->getPrompt();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConnectionParameter.getRefreshOnChange()]

      @return boolean
     */
    function getRefreshOnChange()
    {
        return $this->m_ConnectionParameter->getRefreshOnChange();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConnectionParameter.getSqlType()]

      @return int
     */
    function getSqlType()
    {
        return $this->m_ConnectionParameter->getSqlType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConnectionParameter.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_ConnectionParameter->getType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConnectionParameter.getValue()]

      @return corresponding java type is {java.lang.Object}
     */
    function getValue()
    {
        return ClassFactory::_t2($this->m_ConnectionParameter->getValue());
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ConnectionParameterCollection]
  
 */
class ConnectionParameterCollection extends CollectionBase
{
    public $m_ConnectionParameterCollection;
    
    function __construct($connectionParameterCollection)
    {
    	$this->m_ConnectionParameterCollection = $connectionParameterCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ConnectionParameterCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.ConnectionParameter
     */
    function getI($pInt0)
    {
        return ClassFactory::_t2($this->m_ConnectionParameterCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConnectionParameterCollection.get(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.ConnectionParameter
     */
    function getS($oString0)
    {
        return ClassFactory::_t2($this->m_ConnectionParameterCollection->get($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ConnectionParameterCollection.set(int, com.aspose.cells.ConnectionParameter)]

      @param pInt0  int
      @param oConnectionParameter1  com.aspose.cells.ConnectionParameter
     */
    function set($pInt0, $oConnectionParameter1)
    {
        $this->m_ConnectionParameterCollection->set($pInt0, ClassFactory::_t1($oConnectionParameter1));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ConnectionParameterType]
  
 */
class ConnectionParameterType
{
    public $m_ConnectionParameterType;
    
    function __construct($connectionParameterType)
    {
    	$this->m_ConnectionParameterType = $connectionParameterType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.ConsolidationFunction]
  
 */
class ConsolidationFunction
{
    public $m_ConsolidationFunction;
    
    function __construct($consolidationFunction)
    {
    	$this->m_ConsolidationFunction = $consolidationFunction;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.ContentTypeProperty]
  
 */
class ContentTypeProperty
{
    public $m_ContentTypeProperty;
    
    function __construct($contentTypeProperty)
    {
    	$this->m_ContentTypeProperty = $contentTypeProperty;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ContentTypeProperty.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_ContentTypeProperty->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ContentTypeProperty.getValue()]

      @return String
     */
    function getValue()
    {
        return $this->m_ContentTypeProperty->getValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ContentTypeProperty.setName(java.lang.String)]

      @param oString0  String
     */
    function setName($oString0)
    {
        $this->m_ContentTypeProperty->setName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ContentTypeProperty.setValue(java.lang.String)]

      @param oString0  String
     */
    function setValue($oString0)
    {
        $this->m_ContentTypeProperty->setValue($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ContentTypePropertyCollection]
  
 */
class ContentTypePropertyCollection extends CollectionBase
{
    public $m_ContentTypePropertyCollection;
    
    function __construct($contentTypePropertyCollection)
    {
    	$this->m_ContentTypePropertyCollection = $contentTypePropertyCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ContentTypePropertyCollection.add(java.lang.String, java.lang.String)]

      @param oString0  String
      @param oString1  String
      @return int
     */
    function add($oString0, $oString1)
    {
        return $this->m_ContentTypePropertyCollection->add($oString0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ContentTypePropertyCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.ContentTypeProperty
     */
    function getI($pInt0)
    {
        return ClassFactory::_t2($this->m_ContentTypePropertyCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ContentTypePropertyCollection.get(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.ContentTypeProperty
     */
    function getS($oString0)
    {
        return ClassFactory::_t2($this->m_ContentTypePropertyCollection->get($oString0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.CopyOptions]
  
 */
class CopyOptions
{
    public $m_CopyOptions;
    
    function __construct($copyOptions)
    {
    	$this->m_CopyOptions = $copyOptions;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.CopyOptions.getColumnCharacterWidth()]

      @return boolean
     */
    function getColumnCharacterWidth()
    {
        return $this->m_CopyOptions->getColumnCharacterWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CopyOptions.getCopyInvalidFormulasAsValues()]

      @return boolean
     */
    function getCopyInvalidFormulasAsValues()
    {
        return $this->m_CopyOptions->getCopyInvalidFormulasAsValues();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CopyOptions.getCopyNames()]

      @return boolean
     */
    function getCopyNames()
    {
        return $this->m_CopyOptions->getCopyNames();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CopyOptions.setColumnCharacterWidth(boolean)]

      @param pBoolean0  boolean
     */
    function setColumnCharacterWidth($pBoolean0)
    {
        $this->m_CopyOptions->setColumnCharacterWidth($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CopyOptions.setCopyInvalidFormulasAsValues(boolean)]

      @param pBoolean0  boolean
     */
    function setCopyInvalidFormulasAsValues($pBoolean0)
    {
        $this->m_CopyOptions->setCopyInvalidFormulasAsValues($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CopyOptions.setCopyNames(boolean)]

      @param pBoolean0  boolean
     */
    function setCopyNames($pBoolean0)
    {
        $this->m_CopyOptions->setCopyNames($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.CountryCode]
  
 */
class CountryCode
{
    public $m_CountryCode;
    
    function __construct($countryCode)
    {
    	$this->m_CountryCode = $countryCode;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.CredentialsMethodType]
  
 */
class CredentialsMethodType
{
    public $m_CredentialsMethodType;
    
    function __construct($credentialsMethodType)
    {
    	$this->m_CredentialsMethodType = $credentialsMethodType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.CrossType]
  
 */
class CrossType
{
    public $m_CrossType;
    
    function __construct($crossType)
    {
    	$this->m_CrossType = $crossType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.CustomDocumentPropertyCollection]
  
 */
class CustomDocumentPropertyCollection extends DocumentPropertyCollection
{
    public $m_CustomDocumentPropertyCollection;
    
    function __construct($customDocumentPropertyCollection)
    {
    	$this->m_CustomDocumentPropertyCollection = $customDocumentPropertyCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.CustomDocumentPropertyCollection.add(java.lang.String, boolean)]

      @param oString0  String
      @param pBoolean1  boolean
      @return com.aspose.cells.DocumentProperty
     */
    function addSB($oString0, $pBoolean1)
    {
        return ClassFactory::_t2($this->m_CustomDocumentPropertyCollection->add($oString0, $pBoolean1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CustomDocumentPropertyCollection.add(java.lang.String, com.aspose.cells.DateTime)]

      @param oString0  String
      @param oCells_DateTime1  corresponding java type is {com.aspose.cells.DateTime}
      @return com.aspose.cells.DocumentProperty
     */
    function addSD($oString0, $oCells_DateTime1)
    {
        return ClassFactory::_t2($this->m_CustomDocumentPropertyCollection->add($oString0, ClassFactory::_t1($oCells_DateTime1)));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CustomDocumentPropertyCollection.add(java.lang.String, double)]

      @param oString0  String
      @param pDouble1  double
      @return com.aspose.cells.DocumentProperty
     */
    function addSD1($oString0, $pDouble1)
    {
        return ClassFactory::_t2($this->m_CustomDocumentPropertyCollection->add($oString0, $pDouble1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CustomDocumentPropertyCollection.add(java.lang.String, int)]

      @param oString0  String
      @param pInt1  int
      @return com.aspose.cells.DocumentProperty
     */
    function addSI($oString0, $pInt1)
    {
        return ClassFactory::_t2($this->m_CustomDocumentPropertyCollection->add($oString0, $pInt1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CustomDocumentPropertyCollection.add(java.lang.String, java.lang.String)]

      @param oString0  String
      @param oString1  String
      @return com.aspose.cells.DocumentProperty
     */
    function addSS($oString0, $oString1)
    {
        return ClassFactory::_t2($this->m_CustomDocumentPropertyCollection->add($oString0, $oString1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CustomDocumentPropertyCollection.addLinkToContent(java.lang.String, java.lang.String)]

      @param oString0  String
      @param oString1  String
      @return com.aspose.cells.DocumentProperty
     */
    function addLinkToContent($oString0, $oString1)
    {
        return ClassFactory::_t2($this->m_CustomDocumentPropertyCollection->addLinkToContent($oString0, $oString1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CustomDocumentPropertyCollection.updateLinkedPropertyValue()]

     */
    function updateLinkedPropertyValue()
    {
        $this->m_CustomDocumentPropertyCollection->updateLinkedPropertyValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CustomDocumentPropertyCollection.updateLinkedRange()]

     */
    function updateLinkedRange()
    {
        $this->m_CustomDocumentPropertyCollection->updateLinkedRange();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.CustomFilter]
  
 */
class CustomFilter
{
    public $m_CustomFilter;
    
    function __construct($customFilter)
    {
    	$this->m_CustomFilter = $customFilter;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.CustomFilter.getCriteria()]

      @return corresponding java type is {java.lang.Object}
     */
    function getCriteria()
    {
        return ClassFactory::_t2($this->m_CustomFilter->getCriteria());
    }

    /*
      Wrapper for java version method [com.aspose.cells.CustomFilter.getFilterOperatorType()]

      @return int
     */
    function getFilterOperatorType()
    {
        return $this->m_CustomFilter->getFilterOperatorType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CustomFilter.setCriteria(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
     */
    function setCriteria($oObject0)
    {
        $this->m_CustomFilter->setCriteria(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CustomFilter.setFilterOperatorType(int)]

      @param pInt0  int
     */
    function setFilterOperatorType($pInt0)
    {
        $this->m_CustomFilter->setFilterOperatorType($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.CustomFilterCollection]
  
 */
class CustomFilterCollection extends CollectionBase
{
    public $m_CustomFilterCollection;
    
    function __construct($customFilterCollection)
    {
    	$this->m_CustomFilterCollection = $customFilterCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.CustomFilterCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.CustomFilter
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_CustomFilterCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CustomFilterCollection.getAnd()]

      @return boolean
     */
    function getAnd()
    {
        return $this->m_CustomFilterCollection->getAnd();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CustomFilterCollection.setAnd(boolean)]

      @param pBoolean0  boolean
     */
    function setAnd($pBoolean0)
    {
        $this->m_CustomFilterCollection->setAnd($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.CustomGeometry]
  
 */
class CustomGeometry
{
    public $m_CustomGeometry;
    
    function __construct($customGeometry)
    {
    	$this->m_CustomGeometry = $customGeometry;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.CustomGeometry.getPaths()]

      @return com.aspose.cells.ShapePathCollection
     */
    function getPaths()
    {
        return ClassFactory::_t2($this->m_CustomGeometry->getPaths());
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.CustomProperty]
  
 */
class CustomProperty
{
    public $m_CustomProperty;
    
    function __construct($customProperty)
    {
    	$this->m_CustomProperty = $customProperty;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.CustomProperty.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_CustomProperty->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CustomProperty.getStringValue()]

      @return String
     */
    function getStringValue()
    {
        return $this->m_CustomProperty->getStringValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CustomProperty.getValue()]

      @return String
     */
    function getValue()
    {
        return $this->m_CustomProperty->getValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.CustomProperty.setName(java.lang.String)]

      @param oString0  String
     */
    function setName($oString0)
    {
        $this->m_CustomProperty->setName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CustomProperty.setStringValue(java.lang.String)]

      @param oString0  String
     */
    function setStringValue($oString0)
    {
        $this->m_CustomProperty->setStringValue($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CustomProperty.setValue(java.lang.String)]

      @param oString0  String
     */
    function setValue($oString0)
    {
        $this->m_CustomProperty->setValue($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.CustomPropertyCollection]
  
 */
class CustomPropertyCollection extends CollectionBase
{
    public $m_CustomPropertyCollection;
    
    function __construct($customPropertyCollection)
    {
    	$this->m_CustomPropertyCollection = $customPropertyCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.CustomPropertyCollection.add(java.lang.String, java.lang.String)]

      @param oString0  String
      @param oString1  String
      @return int
     */
    function add($oString0, $oString1)
    {
        return $this->m_CustomPropertyCollection->add($oString0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.CustomPropertyCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.CustomProperty
     */
    function getI($pInt0)
    {
        return ClassFactory::_t2($this->m_CustomPropertyCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.CustomPropertyCollection.get(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.CustomProperty
     */
    function getS($oString0)
    {
        return ClassFactory::_t2($this->m_CustomPropertyCollection->get($oString0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.DataBar]
  
 */
class DataBar
{
    public $m_DataBar;
    
    function __construct($dataBar)
    {
    	$this->m_DataBar = $dataBar;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.DataBar.getAxisColor()]

      @return com.aspose.cells.Color
     */
    function getAxisColor()
    {
        return ClassFactory::_t2($this->m_DataBar->getAxisColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataBar.getAxisPosition()]

      @return int
     */
    function getAxisPosition()
    {
        return $this->m_DataBar->getAxisPosition();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataBar.getBarBorder()]

      @return com.aspose.cells.DataBarBorder
     */
    function getBarBorder()
    {
        return ClassFactory::_t2($this->m_DataBar->getBarBorder());
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataBar.getBarFillType()]

      @return int
     */
    function getBarFillType()
    {
        return $this->m_DataBar->getBarFillType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataBar.getColor()]

      @return com.aspose.cells.Color
     */
    function getColor()
    {
        return ClassFactory::_t2($this->m_DataBar->getColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataBar.getDirection()]

      @return int
     */
    function getDirection()
    {
        return $this->m_DataBar->getDirection();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataBar.getMaxCfvo()]

      @return com.aspose.cells.ConditionalFormattingValue
     */
    function getMaxCfvo()
    {
        return ClassFactory::_t2($this->m_DataBar->getMaxCfvo());
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataBar.getMaxLength()]

      @return int
     */
    function getMaxLength()
    {
        return $this->m_DataBar->getMaxLength();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataBar.getMinCfvo()]

      @return com.aspose.cells.ConditionalFormattingValue
     */
    function getMinCfvo()
    {
        return ClassFactory::_t2($this->m_DataBar->getMinCfvo());
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataBar.getMinLength()]

      @return int
     */
    function getMinLength()
    {
        return $this->m_DataBar->getMinLength();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataBar.getNegativeBarFormat()]

      @return com.aspose.cells.NegativeBarFormat
     */
    function getNegativeBarFormat()
    {
        return ClassFactory::_t2($this->m_DataBar->getNegativeBarFormat());
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataBar.getShowValue()]

      @return boolean
     */
    function getShowValue()
    {
        return $this->m_DataBar->getShowValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataBar.setAxisColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setAxisColor($oColor0)
    {
        $this->m_DataBar->setAxisColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataBar.setAxisPosition(int)]

      @param pInt0  int
     */
    function setAxisPosition($pInt0)
    {
        $this->m_DataBar->setAxisPosition($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataBar.setBarFillType(int)]

      @param pInt0  int
     */
    function setBarFillType($pInt0)
    {
        $this->m_DataBar->setBarFillType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataBar.setColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setColor($oColor0)
    {
        $this->m_DataBar->setColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataBar.setDirection(int)]

      @param pInt0  int
     */
    function setDirection($pInt0)
    {
        $this->m_DataBar->setDirection($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataBar.setMaxLength(int)]

      @param pInt0  int
     */
    function setMaxLength($pInt0)
    {
        $this->m_DataBar->setMaxLength($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataBar.setMinLength(int)]

      @param pInt0  int
     */
    function setMinLength($pInt0)
    {
        $this->m_DataBar->setMinLength($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataBar.setShowValue(boolean)]

      @param pBoolean0  boolean
     */
    function setShowValue($pBoolean0)
    {
        $this->m_DataBar->setShowValue($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.DataBarAxisPosition]
  
 */
class DataBarAxisPosition
{
    public $m_DataBarAxisPosition;
    
    function __construct($dataBarAxisPosition)
    {
    	$this->m_DataBarAxisPosition = $dataBarAxisPosition;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.DataBarBorder]
  
 */
class DataBarBorder
{
    public $m_DataBarBorder;
    
    function __construct($dataBarBorder)
    {
    	$this->m_DataBarBorder = $dataBarBorder;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.DataBarBorder.getColor()]

      @return com.aspose.cells.Color
     */
    function getColor()
    {
        return ClassFactory::_t2($this->m_DataBarBorder->getColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataBarBorder.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_DataBarBorder->getType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataBarBorder.setColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setColor($oColor0)
    {
        $this->m_DataBarBorder->setColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataBarBorder.setType(int)]

      @param pInt0  int
     */
    function setType($pInt0)
    {
        $this->m_DataBarBorder->setType($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.DataBarBorderType]
  
 */
class DataBarBorderType
{
    public $m_DataBarBorderType;
    
    function __construct($dataBarBorderType)
    {
    	$this->m_DataBarBorderType = $dataBarBorderType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.DataBarFillType]
  
 */
class DataBarFillType
{
    public $m_DataBarFillType;
    
    function __construct($dataBarFillType)
    {
    	$this->m_DataBarFillType = $dataBarFillType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.DataBarNegativeColorType]
  
 */
class DataBarNegativeColorType
{
    public $m_DataBarNegativeColorType;
    
    function __construct($dataBarNegativeColorType)
    {
    	$this->m_DataBarNegativeColorType = $dataBarNegativeColorType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.DataLabels]
  
 */
class DataLabels extends ChartFrame
{
    public $m_DataLabels;
    
    function __construct($dataLabels)
    {
    	$this->m_DataLabels = $dataLabels;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.getBackground()]

      @return int
     */
    function getBackground()
    {
        return $this->m_DataLabels->getBackground();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.getBackgroundMode()]

      @return int
     */
    function getBackgroundMode()
    {
        return $this->m_DataLabels->getBackgroundMode();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.getFont()]

      @return com.aspose.cells.Font
     */
    function getFont()
    {
        return ClassFactory::_t2($this->m_DataLabels->getFont());
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.getLinkedSource()]

      @return String
     */
    function getLinkedSource()
    {
        return $this->m_DataLabels->getLinkedSource();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.getNumber()]

      @return int
     */
    function getNumber()
    {
        return $this->m_DataLabels->getNumber();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.getNumberFormat()]

      @return String
     */
    function getNumberFormat()
    {
        return $this->m_DataLabels->getNumberFormat();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.getNumberFormatLinked()]

      @return boolean
     */
    function getNumberFormatLinked()
    {
        return $this->m_DataLabels->getNumberFormatLinked();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.getPosition()]

      @return int
     */
    function getPosition()
    {
        return $this->m_DataLabels->getPosition();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.getPostion()]

      @return int
     */
    function getPostion()
    {
        return $this->m_DataLabels->getPostion();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.getRotation()]

      @return int
     */
    function getRotation()
    {
        return $this->m_DataLabels->getRotation();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.getRotationAngle()]

      @return int
     */
    function getRotationAngle()
    {
        return $this->m_DataLabels->getRotationAngle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.getSeparator()]

      @return int
     */
    function getSeparator()
    {
        return $this->m_DataLabels->getSeparator();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.getSeparatorValue()]

      @return String
     */
    function getSeparatorValue()
    {
        return $this->m_DataLabels->getSeparatorValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.getShowBubbleSize()]

      @return boolean
     */
    function getShowBubbleSize()
    {
        return $this->m_DataLabels->getShowBubbleSize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.getShowCategoryName()]

      @return boolean
     */
    function getShowCategoryName()
    {
        return $this->m_DataLabels->getShowCategoryName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.getShowLegendKey()]

      @return boolean
     */
    function getShowLegendKey()
    {
        return $this->m_DataLabels->getShowLegendKey();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.getShowPercentage()]

      @return boolean
     */
    function getShowPercentage()
    {
        return $this->m_DataLabels->getShowPercentage();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.getShowSeriesName()]

      @return boolean
     */
    function getShowSeriesName()
    {
        return $this->m_DataLabels->getShowSeriesName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.getShowValue()]

      @return boolean
     */
    function getShowValue()
    {
        return $this->m_DataLabels->getShowValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.getText()]

      @return String
     */
    function getText()
    {
        return $this->m_DataLabels->getText();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.getTextDirection()]

      @return int
     */
    function getTextDirection()
    {
        return $this->m_DataLabels->getTextDirection();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.getTextHorizontalAlignment()]

      @return int
     */
    function getTextHorizontalAlignment()
    {
        return $this->m_DataLabels->getTextHorizontalAlignment();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.getTextVerticalAlignment()]

      @return int
     */
    function getTextVerticalAlignment()
    {
        return $this->m_DataLabels->getTextVerticalAlignment();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.isAutoText()]

      @return boolean
     */
    function isAutoText()
    {
        return $this->m_DataLabels->isAutoText();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.isBubbleSizeShown()]

      @return boolean
     */
    function isBubbleSizeShown()
    {
        return $this->m_DataLabels->isBubbleSizeShown();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.isCategoryNameShown()]

      @return boolean
     */
    function isCategoryNameShown()
    {
        return $this->m_DataLabels->isCategoryNameShown();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.isDeleted()]

      @return boolean
     */
    function isDeleted()
    {
        return $this->m_DataLabels->isDeleted();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.isLegendKeyShown()]

      @return boolean
     */
    function isLegendKeyShown()
    {
        return $this->m_DataLabels->isLegendKeyShown();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.isPercentageShown()]

      @return boolean
     */
    function isPercentageShown()
    {
        return $this->m_DataLabels->isPercentageShown();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.isSeriesNameShown()]

      @return boolean
     */
    function isSeriesNameShown()
    {
        return $this->m_DataLabels->isSeriesNameShown();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.isValueShown()]

      @return boolean
     */
    function isValueShown()
    {
        return $this->m_DataLabels->isValueShown();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setAutoText(boolean)]

      @param pBoolean0  boolean
     */
    function setAutoText($pBoolean0)
    {
        $this->m_DataLabels->setAutoText($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setBackground(int)]

      @param pInt0  int
     */
    function setBackground($pInt0)
    {
        $this->m_DataLabels->setBackground($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setBackgroundMode(int)]

      @param pInt0  int
     */
    function setBackgroundMode($pInt0)
    {
        $this->m_DataLabels->setBackgroundMode($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setBubbleSizeShown(boolean)]

      @param pBoolean0  boolean
     */
    function setBubbleSizeShown($pBoolean0)
    {
        $this->m_DataLabels->setBubbleSizeShown($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setCategoryNameShown(boolean)]

      @param pBoolean0  boolean
     */
    function setCategoryNameShown($pBoolean0)
    {
        $this->m_DataLabels->setCategoryNameShown($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setDeleted(boolean)]

      @param pBoolean0  boolean
     */
    function setDeleted($pBoolean0)
    {
        $this->m_DataLabels->setDeleted($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setLegendKeyShown(boolean)]

      @param pBoolean0  boolean
     */
    function setLegendKeyShown($pBoolean0)
    {
        $this->m_DataLabels->setLegendKeyShown($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setLinkedSource(java.lang.String)]

      @param oString0  String
     */
    function setLinkedSource($oString0)
    {
        $this->m_DataLabels->setLinkedSource($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setNumber(int)]

      @param pInt0  int
     */
    function setNumber($pInt0)
    {
        $this->m_DataLabels->setNumber($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setNumberFormat(java.lang.String)]

      @param oString0  String
     */
    function setNumberFormat($oString0)
    {
        $this->m_DataLabels->setNumberFormat($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setNumberFormatLinked(boolean)]

      @param pBoolean0  boolean
     */
    function setNumberFormatLinked($pBoolean0)
    {
        $this->m_DataLabels->setNumberFormatLinked($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setPercentageShown(boolean)]

      @param pBoolean0  boolean
     */
    function setPercentageShown($pBoolean0)
    {
        $this->m_DataLabels->setPercentageShown($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setPosition(int)]

      @param pInt0  int
     */
    function setPosition($pInt0)
    {
        $this->m_DataLabels->setPosition($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setPostion(int)]

      @param pInt0  int
     */
    function setPostion($pInt0)
    {
        $this->m_DataLabels->setPostion($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setRotation(int)]

      @param pInt0  int
     */
    function setRotation($pInt0)
    {
        $this->m_DataLabels->setRotation($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setRotationAngle(int)]

      @param pInt0  int
     */
    function setRotationAngle($pInt0)
    {
        $this->m_DataLabels->setRotationAngle($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setSeparator(int)]

      @param pInt0  int
     */
    function setSeparator($pInt0)
    {
        $this->m_DataLabels->setSeparator($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setSeparatorValue(java.lang.String)]

      @param oString0  String
     */
    function setSeparatorValue($oString0)
    {
        $this->m_DataLabels->setSeparatorValue($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setSeriesNameShown(boolean)]

      @param pBoolean0  boolean
     */
    function setSeriesNameShown($pBoolean0)
    {
        $this->m_DataLabels->setSeriesNameShown($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setShowBubbleSize(boolean)]

      @param pBoolean0  boolean
     */
    function setShowBubbleSize($pBoolean0)
    {
        $this->m_DataLabels->setShowBubbleSize($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setShowCategoryName(boolean)]

      @param pBoolean0  boolean
     */
    function setShowCategoryName($pBoolean0)
    {
        $this->m_DataLabels->setShowCategoryName($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setShowLegendKey(boolean)]

      @param pBoolean0  boolean
     */
    function setShowLegendKey($pBoolean0)
    {
        $this->m_DataLabels->setShowLegendKey($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setShowPercentage(boolean)]

      @param pBoolean0  boolean
     */
    function setShowPercentage($pBoolean0)
    {
        $this->m_DataLabels->setShowPercentage($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setShowSeriesName(boolean)]

      @param pBoolean0  boolean
     */
    function setShowSeriesName($pBoolean0)
    {
        $this->m_DataLabels->setShowSeriesName($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setShowValue(boolean)]

      @param pBoolean0  boolean
     */
    function setShowValue($pBoolean0)
    {
        $this->m_DataLabels->setShowValue($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setText(java.lang.String)]

      @param oString0  String
     */
    function setText($oString0)
    {
        $this->m_DataLabels->setText($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setTextDirection(int)]

      @param pInt0  int
     */
    function setTextDirection($pInt0)
    {
        $this->m_DataLabels->setTextDirection($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setTextHorizontalAlignment(int)]

      @param pInt0  int
     */
    function setTextHorizontalAlignment($pInt0)
    {
        $this->m_DataLabels->setTextHorizontalAlignment($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setTextVerticalAlignment(int)]

      @param pInt0  int
     */
    function setTextVerticalAlignment($pInt0)
    {
        $this->m_DataLabels->setTextVerticalAlignment($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataLabels.setValueShown(boolean)]

      @param pBoolean0  boolean
     */
    function setValueShown($pBoolean0)
    {
        $this->m_DataLabels->setValueShown($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.DataLablesSeparatorType]
  
 */
class DataLablesSeparatorType
{
    public $m_DataLablesSeparatorType;
    
    function __construct($dataLablesSeparatorType)
    {
    	$this->m_DataLablesSeparatorType = $dataLablesSeparatorType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.DataSorter]
  
 */
class DataSorter
{
    public $m_DataSorter;
    
    function __construct($dataSorter)
    {
    	$this->m_DataSorter = $dataSorter;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.addKey(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function addKeyII($pInt0, $pInt1)
    {
        $this->m_DataSorter->addKey($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.addKey(int, int, java.lang.String)]

      @param pInt0  int
      @param pInt1  int
      @param oString2  String
     */
    function addKeyIIS($pInt0, $pInt1, $oString2)
    {
        $this->m_DataSorter->addKey($pInt0, $pInt1, $oString2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.clear()]

     */
    function clear()
    {
        $this->m_DataSorter->clear();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.getCaseSensitive()]

      @return boolean
     */
    function getCaseSensitive()
    {
        return $this->m_DataSorter->getCaseSensitive();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.getKey1()]

      @return int
     */
    function getKey1()
    {
        return $this->m_DataSorter->getKey1();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.getKey2()]

      @return int
     */
    function getKey2()
    {
        return $this->m_DataSorter->getKey2();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.getKey3()]

      @return int
     */
    function getKey3()
    {
        return $this->m_DataSorter->getKey3();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.getOrder1()]

      @return int
     */
    function getOrder1()
    {
        return $this->m_DataSorter->getOrder1();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.getOrder2()]

      @return int
     */
    function getOrder2()
    {
        return $this->m_DataSorter->getOrder2();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.getOrder3()]

      @return int
     */
    function getOrder3()
    {
        return $this->m_DataSorter->getOrder3();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.getSortLeftToRight()]

      @return boolean
     */
    function getSortLeftToRight()
    {
        return $this->m_DataSorter->getSortLeftToRight();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.hasHeaders()]

      @return boolean
     */
    function hasHeaders()
    {
        return $this->m_DataSorter->hasHeaders();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.setCaseSensitive(boolean)]

      @param pBoolean0  boolean
     */
    function setCaseSensitive($pBoolean0)
    {
        $this->m_DataSorter->setCaseSensitive($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.setHasHeaders(boolean)]

      @param pBoolean0  boolean
     */
    function setHasHeaders($pBoolean0)
    {
        $this->m_DataSorter->setHasHeaders($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.setKey1(int)]

      @param pInt0  int
     */
    function setKey1($pInt0)
    {
        $this->m_DataSorter->setKey1($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.setKey2(int)]

      @param pInt0  int
     */
    function setKey2($pInt0)
    {
        $this->m_DataSorter->setKey2($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.setKey3(int)]

      @param pInt0  int
     */
    function setKey3($pInt0)
    {
        $this->m_DataSorter->setKey3($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.setOrder1(int)]

      @param pInt0  int
     */
    function setOrder1($pInt0)
    {
        $this->m_DataSorter->setOrder1($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.setOrder2(int)]

      @param pInt0  int
     */
    function setOrder2($pInt0)
    {
        $this->m_DataSorter->setOrder2($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.setOrder3(int)]

      @param pInt0  int
     */
    function setOrder3($pInt0)
    {
        $this->m_DataSorter->setOrder3($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.setSortLeftToRight(boolean)]

      @param pBoolean0  boolean
     */
    function setSortLeftToRight($pBoolean0)
    {
        $this->m_DataSorter->setSortLeftToRight($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.sort()]

     */
    function sort()
    {
        $this->m_DataSorter->sort();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.sort(com.aspose.cells.Cells, com.aspose.cells.CellArea)]

      @param oCells0  com.aspose.cells.Cells
      @param oCellArea1  com.aspose.cells.CellArea
     */
    function sortCC($oCells0, $oCellArea1)
    {
        $this->m_DataSorter->sort(ClassFactory::_t1($oCells0), ClassFactory::_t1($oCellArea1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.DataSorter.sort(com.aspose.cells.Cells, int, int, int, int)]

      @param oCells0  com.aspose.cells.Cells
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pInt4  int
     */
    function sortCIIII($oCells0, $pInt1, $pInt2, $pInt3, $pInt4)
    {
        $this->m_DataSorter->sort(ClassFactory::_t1($oCells0), $pInt1, $pInt2, $pInt3, $pInt4);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.DateTimeGroupingType]
  
 */
class DateTimeGroupingType
{
    public $m_DateTimeGroupingType;
    
    function __construct($dateTimeGroupingType)
    {
    	$this->m_DateTimeGroupingType = $dateTimeGroupingType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.DateTimeGroupItem]
  
 */
class DateTimeGroupItem
{
    public $m_DateTimeGroupItem;
    
    function __construct($dateTimeGroupItem)
    {
    	$this->m_DateTimeGroupItem = $dateTimeGroupItem;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.DateTimeGroupItem.getDateTimeGroupingType()]

      @return int
     */
    function getDateTimeGroupingType()
    {
        return $this->m_DateTimeGroupItem->getDateTimeGroupingType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DateTimeGroupItem.getDay()]

      @return int
     */
    function getDay()
    {
        return $this->m_DateTimeGroupItem->getDay();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DateTimeGroupItem.getHour()]

      @return int
     */
    function getHour()
    {
        return $this->m_DateTimeGroupItem->getHour();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DateTimeGroupItem.getMinValue()]

      @return corresponding java type is {com.aspose.cells.DateTime}
     */
    function getMinValue()
    {
        return ClassFactory::_t2($this->m_DateTimeGroupItem->getMinValue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.DateTimeGroupItem.getMinute()]

      @return int
     */
    function getMinute()
    {
        return $this->m_DateTimeGroupItem->getMinute();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DateTimeGroupItem.getMonth()]

      @return int
     */
    function getMonth()
    {
        return $this->m_DateTimeGroupItem->getMonth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DateTimeGroupItem.getSecond()]

      @return int
     */
    function getSecond()
    {
        return $this->m_DateTimeGroupItem->getSecond();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DateTimeGroupItem.getYear()]

      @return int
     */
    function getYear()
    {
        return $this->m_DateTimeGroupItem->getYear();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DateTimeGroupItem.setDateTimeGroupingType(int)]

      @param pInt0  int
     */
    function setDateTimeGroupingType($pInt0)
    {
        $this->m_DateTimeGroupItem->setDateTimeGroupingType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DateTimeGroupItem.setDay(int)]

      @param pInt0  int
     */
    function setDay($pInt0)
    {
        $this->m_DateTimeGroupItem->setDay($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DateTimeGroupItem.setHour(int)]

      @param pInt0  int
     */
    function setHour($pInt0)
    {
        $this->m_DateTimeGroupItem->setHour($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DateTimeGroupItem.setMinute(int)]

      @param pInt0  int
     */
    function setMinute($pInt0)
    {
        $this->m_DateTimeGroupItem->setMinute($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DateTimeGroupItem.setMonth(int)]

      @param pInt0  int
     */
    function setMonth($pInt0)
    {
        $this->m_DateTimeGroupItem->setMonth($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DateTimeGroupItem.setSecond(int)]

      @param pInt0  int
     */
    function setSecond($pInt0)
    {
        $this->m_DateTimeGroupItem->setSecond($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DateTimeGroupItem.setYear(int)]

      @param pInt0  int
     */
    function setYear($pInt0)
    {
        $this->m_DateTimeGroupItem->setYear($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.DBConnection]
  
 */
class DBConnection extends ExternalConnection
{
    public $m_DBConnection;
    
    function __construct($dBConnection)
    {
    	$this->m_DBConnection = $dBConnection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.DBConnection.getCommand()]

      @return String
     */
    function getCommand()
    {
        return $this->m_DBConnection->getCommand();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DBConnection.getCommandType()]

      @return int
     */
    function getCommandType()
    {
        return $this->m_DBConnection->getCommandType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DBConnection.getConnectionInfo()]

      @return String
     */
    function getConnectionInfo()
    {
        return $this->m_DBConnection->getConnectionInfo();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.DifSaveOptions]
  
 */
class DifSaveOptions extends SaveOptions
{
    public $m_DifSaveOptions;
    
    function __construct($difSaveOptions)
    {
    	$this->m_DifSaveOptions = $difSaveOptions;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.DigitalSignature]
  
 */
class DigitalSignature
{
    public $m_DigitalSignature;
    
    function __construct($digitalSignature)
    {
    	$this->m_DigitalSignature = $digitalSignature;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.DigitalSignature.getCertificate()]

      @return corresponding java type is {java.security.KeyStore}
     */
    function getCertificate()
    {
        return ClassFactory::_t2($this->m_DigitalSignature->getCertificate());
    }

    /*
      Wrapper for java version method [com.aspose.cells.DigitalSignature.getComments()]

      @return String
     */
    function getComments()
    {
        return $this->m_DigitalSignature->getComments();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DigitalSignature.getSignTime()]

      @return corresponding java type is {com.aspose.cells.DateTime}
     */
    function getSignTime()
    {
        return ClassFactory::_t2($this->m_DigitalSignature->getSignTime());
    }

    /*
      Wrapper for java version method [com.aspose.cells.DigitalSignature.isValid()]

      @return boolean
     */
    function isValid()
    {
        return $this->m_DigitalSignature->isValid();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DigitalSignature.setCertificate(java.security.KeyStore)]

      @param oKeyStore0  corresponding java type is {java.security.KeyStore}
     */
    function setCertificate($oKeyStore0)
    {
        $this->m_DigitalSignature->setCertificate(ClassFactory::_t1($oKeyStore0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.DigitalSignature.setComments(java.lang.String)]

      @param oString0  String
     */
    function setComments($oString0)
    {
        $this->m_DigitalSignature->setComments($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DigitalSignature.setSignTime(com.aspose.cells.DateTime)]

      @param oCells_DateTime0  corresponding java type is {com.aspose.cells.DateTime}
     */
    function setSignTime($oCells_DateTime0)
    {
        $this->m_DigitalSignature->setSignTime(ClassFactory::_t1($oCells_DateTime0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.DigitalSignatureCollection]
  
 */
class DigitalSignatureCollection
{
    public $m_DigitalSignatureCollection;
    
    function __construct($digitalSignatureCollection)
    {
    	$this->m_DigitalSignatureCollection = $digitalSignatureCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.DigitalSignatureCollection.add(com.aspose.cells.DigitalSignature)]

      @param oDigitalSignature0  com.aspose.cells.DigitalSignature
     */
    function add($oDigitalSignature0)
    {
        $this->m_DigitalSignatureCollection->add(ClassFactory::_t1($oDigitalSignature0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.DigitalSignatureCollection.iterator()]

      @return corresponding java type is {java.util.Iterator}
     */
    function iterator()
    {
        return ClassFactory::_t2($this->m_DigitalSignatureCollection->iterator());
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.DirectoryType]
  
 */
class DirectoryType
{
    public $m_DirectoryType;
    
    function __construct($directoryType)
    {
    	$this->m_DirectoryType = $directoryType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.DisplayDrawingObjects]
  
 */
class DisplayDrawingObjects
{
    public $m_DisplayDrawingObjects;
    
    function __construct($displayDrawingObjects)
    {
    	$this->m_DisplayDrawingObjects = $displayDrawingObjects;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.DisplayUnitLabel]
  
 */
class DisplayUnitLabel extends ChartFrame
{
    public $m_DisplayUnitLabel;
    
    function __construct($displayUnitLabel)
    {
    	$this->m_DisplayUnitLabel = $displayUnitLabel;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.DisplayUnitLabel.getAutoScaleFont()]

      @return boolean
     */
    function getAutoScaleFont()
    {
        return $this->m_DisplayUnitLabel->getAutoScaleFont();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DisplayUnitLabel.getFont()]

      @return com.aspose.cells.Font
     */
    function getFont()
    {
        return ClassFactory::_t2($this->m_DisplayUnitLabel->getFont());
    }

    /*
      Wrapper for java version method [com.aspose.cells.DisplayUnitLabel.getLinkedSource()]

      @return String
     */
    function getLinkedSource()
    {
        return $this->m_DisplayUnitLabel->getLinkedSource();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DisplayUnitLabel.getRotation()]

      @return int
     */
    function getRotation()
    {
        return $this->m_DisplayUnitLabel->getRotation();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DisplayUnitLabel.getRotationAngle()]

      @return int
     */
    function getRotationAngle()
    {
        return $this->m_DisplayUnitLabel->getRotationAngle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DisplayUnitLabel.getText()]

      @return String
     */
    function getText()
    {
        return $this->m_DisplayUnitLabel->getText();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DisplayUnitLabel.getTextDirection()]

      @return int
     */
    function getTextDirection()
    {
        return $this->m_DisplayUnitLabel->getTextDirection();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DisplayUnitLabel.getTextHorizontalAlignment()]

      @return int
     */
    function getTextHorizontalAlignment()
    {
        return $this->m_DisplayUnitLabel->getTextHorizontalAlignment();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DisplayUnitLabel.getTextVerticalAlignment()]

      @return int
     */
    function getTextVerticalAlignment()
    {
        return $this->m_DisplayUnitLabel->getTextVerticalAlignment();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DisplayUnitLabel.setAutoScaleFont(boolean)]

      @param pBoolean0  boolean
     */
    function setAutoScaleFont($pBoolean0)
    {
        $this->m_DisplayUnitLabel->setAutoScaleFont($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DisplayUnitLabel.setLinkedSource(java.lang.String)]

      @param oString0  String
     */
    function setLinkedSource($oString0)
    {
        $this->m_DisplayUnitLabel->setLinkedSource($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DisplayUnitLabel.setRotation(int)]

      @param pInt0  int
     */
    function setRotation($pInt0)
    {
        $this->m_DisplayUnitLabel->setRotation($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DisplayUnitLabel.setRotationAngle(int)]

      @param pInt0  int
     */
    function setRotationAngle($pInt0)
    {
        $this->m_DisplayUnitLabel->setRotationAngle($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DisplayUnitLabel.setText(java.lang.String)]

      @param oString0  String
     */
    function setText($oString0)
    {
        $this->m_DisplayUnitLabel->setText($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DisplayUnitLabel.setTextDirection(int)]

      @param pInt0  int
     */
    function setTextDirection($pInt0)
    {
        $this->m_DisplayUnitLabel->setTextDirection($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DisplayUnitLabel.setTextHorizontalAlignment(int)]

      @param pInt0  int
     */
    function setTextHorizontalAlignment($pInt0)
    {
        $this->m_DisplayUnitLabel->setTextHorizontalAlignment($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DisplayUnitLabel.setTextVerticalAlignment(int)]

      @param pInt0  int
     */
    function setTextVerticalAlignment($pInt0)
    {
        $this->m_DisplayUnitLabel->setTextVerticalAlignment($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.DisplayUnitType]
  
 */
class DisplayUnitType
{
    public $m_DisplayUnitType;
    
    function __construct($displayUnitType)
    {
    	$this->m_DisplayUnitType = $displayUnitType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.DocumentProperty]
  
 */
class DocumentProperty
{
    public $m_DocumentProperty;
    
    function __construct($documentProperty)
    {
    	$this->m_DocumentProperty = $documentProperty;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.DocumentProperty.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_DocumentProperty->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DocumentProperty.getSource()]

      @return String
     */
    function getSource()
    {
        return $this->m_DocumentProperty->getSource();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DocumentProperty.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_DocumentProperty->getType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DocumentProperty.getValue()]

      @return corresponding java type is {java.lang.Object}
     */
    function getValue()
    {
        return ClassFactory::_t2($this->m_DocumentProperty->getValue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.DocumentProperty.isGeneratedName()]

      @return boolean
     */
    function isGeneratedName()
    {
        return $this->m_DocumentProperty->isGeneratedName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DocumentProperty.isLinkedToContent()]

      @return boolean
     */
    function isLinkedToContent()
    {
        return $this->m_DocumentProperty->isLinkedToContent();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DocumentProperty.setValue(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
     */
    function setValue($oObject0)
    {
        $this->m_DocumentProperty->setValue(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.DocumentProperty.toBool()]

      @return boolean
     */
    function toBool()
    {
        return $this->m_DocumentProperty->toBool();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DocumentProperty.toDateTime()]

      @return corresponding java type is {com.aspose.cells.DateTime}
     */
    function toDateTime()
    {
        return ClassFactory::_t2($this->m_DocumentProperty->toDateTime());
    }

    /*
      Wrapper for java version method [com.aspose.cells.DocumentProperty.toDouble()]

      @return double
     */
    function toDouble()
    {
        return $this->m_DocumentProperty->toDouble();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DocumentProperty.toInt()]

      @return int
     */
    function toInt()
    {
        return $this->m_DocumentProperty->toInt();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DocumentProperty.toString()]

      @return String
     */
    function toString()
    {
        return $this->m_DocumentProperty->toString();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.DocumentPropertyCollection]
  
 */
class DocumentPropertyCollection
{
    public $m_DocumentPropertyCollection;
    
    function __construct($documentPropertyCollection)
    {
    	$this->m_DocumentPropertyCollection = $documentPropertyCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.DocumentPropertyCollection.clear()]

     */
    function clear()
    {
        $this->m_DocumentPropertyCollection->clear();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DocumentPropertyCollection.contains(java.lang.String)]

      @param oString0  String
      @return boolean
     */
    function contains($oString0)
    {
        return $this->m_DocumentPropertyCollection->contains($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DocumentPropertyCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.DocumentProperty
     */
    function getI($pInt0)
    {
        return ClassFactory::_t2($this->m_DocumentPropertyCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.DocumentPropertyCollection.get(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.DocumentProperty
     */
    function getS($oString0)
    {
        return ClassFactory::_t2($this->m_DocumentPropertyCollection->get($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.DocumentPropertyCollection.getCount()]

      @return int
     */
    function getCount()
    {
        return $this->m_DocumentPropertyCollection->getCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DocumentPropertyCollection.indexOf(java.lang.String)]

      @param oString0  String
      @return int
     */
    function indexOf($oString0)
    {
        return $this->m_DocumentPropertyCollection->indexOf($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DocumentPropertyCollection.iterator()]

      @return corresponding java type is {java.util.Iterator}
     */
    function iterator()
    {
        return ClassFactory::_t2($this->m_DocumentPropertyCollection->iterator());
    }

    /*
      Wrapper for java version method [com.aspose.cells.DocumentPropertyCollection.remove(java.lang.String)]

      @param oString0  String
     */
    function remove($oString0)
    {
        $this->m_DocumentPropertyCollection->remove($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DocumentPropertyCollection.removeAt(int)]

      @param pInt0  int
     */
    function removeAt($pInt0)
    {
        $this->m_DocumentPropertyCollection->removeAt($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.DrawObject]
  
 */
class DrawObject
{
    public $m_DrawObject;
    
    function __construct($drawObject)
    {
    	$this->m_DrawObject = $drawObject;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.DrawObject.getCell()]

      @return com.aspose.cells.Cell
     */
    function getCell()
    {
        return ClassFactory::_t2($this->m_DrawObject->getCell());
    }

    /*
      Wrapper for java version method [com.aspose.cells.DrawObject.getCurrentPage()]

      @return int
     */
    function getCurrentPage()
    {
        return $this->m_DrawObject->getCurrentPage();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DrawObject.getSheetIndex()]

      @return int
     */
    function getSheetIndex()
    {
        return $this->m_DrawObject->getSheetIndex();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DrawObject.getTotalPages()]

      @return int
     */
    function getTotalPages()
    {
        return $this->m_DrawObject->getTotalPages();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DrawObject.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_DrawObject->getType();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.DrawObjectEnum]
  
 */
class DrawObjectEnum
{
    public $m_DrawObjectEnum;
    
    function __construct($drawObjectEnum)
    {
    	$this->m_DrawObjectEnum = $drawObjectEnum;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.DrawObjectEventHandler]
  
 */
class DrawObjectEventHandler
{
    public $m_DrawObjectEventHandler;
    
    function __construct($drawObjectEventHandler)
    {
    	$this->m_DrawObjectEventHandler = $drawObjectEventHandler;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.DrawObjectEventHandler.draw(com.aspose.cells.DrawObject, float, float, float, float)]

      @param oDrawObject0  com.aspose.cells.DrawObject
      @param pFloat1  float
      @param pFloat2  float
      @param pFloat3  float
      @param pFloat4  float
     */
    function draw($oDrawObject0, $pFloat1, $pFloat2, $pFloat3, $pFloat4)
    {
        $this->m_DrawObjectEventHandler->draw(ClassFactory::_t1($oDrawObject0), $pFloat1, $pFloat2, $pFloat3, $pFloat4);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.DropBars]
  
 */
class DropBars
{
    public $m_DropBars;
    
    function __construct($dropBars)
    {
    	$this->m_DropBars = $dropBars;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.DropBars.getArea()]

      @return com.aspose.cells.Area
     */
    function getArea()
    {
        return ClassFactory::_t2($this->m_DropBars->getArea());
    }

    /*
      Wrapper for java version method [com.aspose.cells.DropBars.getBorder()]

      @return com.aspose.cells.Line
     */
    function getBorder()
    {
        return ClassFactory::_t2($this->m_DropBars->getBorder());
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.DxfCollection]
  
 */
class DxfCollection extends CollectionBase
{
    public $m_DxfCollection;
    
    function __construct($dxfCollection)
    {
    	$this->m_DxfCollection = $dxfCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.DxfCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.Style
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_DxfCollection->get($pInt0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.DynamicFilter]
  
 */
class DynamicFilter
{
    public $m_DynamicFilter;
    
    function __construct($dynamicFilter)
    {
    	$this->m_DynamicFilter = $dynamicFilter;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.DynamicFilter.getDynamicFilterType()]

      @return int
     */
    function getDynamicFilterType()
    {
        return $this->m_DynamicFilter->getDynamicFilterType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.DynamicFilter.getMaxValue()]

      @return corresponding java type is {java.lang.Object}
     */
    function getMaxValue()
    {
        return ClassFactory::_t2($this->m_DynamicFilter->getMaxValue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.DynamicFilter.getValue()]

      @return corresponding java type is {java.lang.Object}
     */
    function getValue()
    {
        return ClassFactory::_t2($this->m_DynamicFilter->getValue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.DynamicFilter.setDynamicFilterType(int)]

      @param pInt0  int
     */
    function setDynamicFilterType($pInt0)
    {
        $this->m_DynamicFilter->setDynamicFilterType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.DynamicFilter.setMaxValue(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
     */
    function setMaxValue($oObject0)
    {
        $this->m_DynamicFilter->setMaxValue(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.DynamicFilter.setValue(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
     */
    function setValue($oObject0)
    {
        $this->m_DynamicFilter->setValue(ClassFactory::_t1($oObject0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.DynamicFilterType]
  
 */
class DynamicFilterType
{
    public $m_DynamicFilterType;
    
    function __construct($dynamicFilterType)
    {
    	$this->m_DynamicFilterType = $dynamicFilterType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Encoding]
  
 */
class Encoding
{
    public $m_Encoding;
    
    function __construct($encoding)
    {
    	$this->m_Encoding = $encoding;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Encoding.equals(com.aspose.cells.Encoding)]

      @param oEncoding0  com.aspose.cells.Encoding
      @return boolean
     */
    function equalsE($oEncoding0)
    {
        return $this->m_Encoding->equals(ClassFactory::_t1($oEncoding0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Encoding.equals(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
      @return boolean
     */
    function equalsO($oObject0)
    {
        return $this->m_Encoding->equals(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Encoding.getASCII()]

      @return com.aspose.cells.Encoding
     */
    function getASCII()
    {
        return ClassFactory::_t2($this->m_Encoding->getASCII());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Encoding.getBigEndianUnicode()]

      @return com.aspose.cells.Encoding
     */
    function getBigEndianUnicode()
    {
        return ClassFactory::_t2($this->m_Encoding->getBigEndianUnicode());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Encoding.getChars(byte[], int, int)]

      @param arrP1DByte0  byte[]
      @param pInt1  int
      @param pInt2  int
      @return char[]
     */
    function getChars($arrP1DByte0, $pInt1, $pInt2)
    {
        return $this->m_Encoding->getChars($arrP1DByte0, $pInt1, $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Encoding.getDefault()]

      @return com.aspose.cells.Encoding
     */
    function getDefault()
    {
        return ClassFactory::_t2($this->m_Encoding->getDefault());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Encoding.getEncoding(int)]

      @param pInt0  int
      @return com.aspose.cells.Encoding
     */
    function getEncodingI($pInt0)
    {
        return ClassFactory::_t2($this->m_Encoding->getEncoding($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Encoding.getEncoding(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.Encoding
     */
    function getEncodingS($oString0)
    {
        return ClassFactory::_t2($this->m_Encoding->getEncoding($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Encoding.getEncoding(java.nio.charset.Charset)]

      @param oCharset0  corresponding java type is {java.nio.charset.Charset}
      @return com.aspose.cells.Encoding
     */
    function getEncodingC($oCharset0)
    {
        return ClassFactory::_t2($this->m_Encoding->getEncoding(ClassFactory::_t1($oCharset0)));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Encoding.getUTF7()]

      @return com.aspose.cells.Encoding
     */
    function getUTF7()
    {
        return ClassFactory::_t2($this->m_Encoding->getUTF7());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Encoding.getUTF8()]

      @return com.aspose.cells.Encoding
     */
    function getUTF8()
    {
        return ClassFactory::_t2($this->m_Encoding->getUTF8());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Encoding.getUTF8NoBOM()]

      @return com.aspose.cells.Encoding
     */
    function getUTF8NoBOM()
    {
        return ClassFactory::_t2($this->m_Encoding->getUTF8NoBOM());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Encoding.getUnicode()]

      @return com.aspose.cells.Encoding
     */
    function getUnicode()
    {
        return ClassFactory::_t2($this->m_Encoding->getUnicode());
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.EncryptionType]
  
 */
class EncryptionType
{
    public $m_EncryptionType;
    
    function __construct($encryptionType)
    {
    	$this->m_EncryptionType = $encryptionType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.ErrorBar]
  
 */
class ErrorBar extends Line
{
    public $m_ErrorBar;
    
    function __construct($errorBar)
    {
    	$this->m_ErrorBar = $errorBar;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ErrorBar.getAmount()]

      @return double
     */
    function getAmount()
    {
        return $this->m_ErrorBar->getAmount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ErrorBar.getDisplayType()]

      @return int
     */
    function getDisplayType()
    {
        return $this->m_ErrorBar->getDisplayType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ErrorBar.getMinusValue()]

      @return String
     */
    function getMinusValue()
    {
        return $this->m_ErrorBar->getMinusValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ErrorBar.getPlusValue()]

      @return String
     */
    function getPlusValue()
    {
        return $this->m_ErrorBar->getPlusValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ErrorBar.getShowMarkerTTop()]

      @return boolean
     */
    function getShowMarkerTTop()
    {
        return $this->m_ErrorBar->getShowMarkerTTop();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ErrorBar.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_ErrorBar->getType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ErrorBar.setAmount(double)]

      @param pDouble0  double
     */
    function setAmount($pDouble0)
    {
        $this->m_ErrorBar->setAmount($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ErrorBar.setDisplayType(int)]

      @param pInt0  int
     */
    function setDisplayType($pInt0)
    {
        $this->m_ErrorBar->setDisplayType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ErrorBar.setMinusValue(java.lang.String)]

      @param oString0  String
     */
    function setMinusValue($oString0)
    {
        $this->m_ErrorBar->setMinusValue($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ErrorBar.setPlusValue(java.lang.String)]

      @param oString0  String
     */
    function setPlusValue($oString0)
    {
        $this->m_ErrorBar->setPlusValue($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ErrorBar.setShowMarkerTTop(boolean)]

      @param pBoolean0  boolean
     */
    function setShowMarkerTTop($pBoolean0)
    {
        $this->m_ErrorBar->setShowMarkerTTop($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ErrorBar.setType(int)]

      @param pInt0  int
     */
    function setType($pInt0)
    {
        $this->m_ErrorBar->setType($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ErrorBarDisplayType]
  
 */
class ErrorBarDisplayType
{
    public $m_ErrorBarDisplayType;
    
    function __construct($errorBarDisplayType)
    {
    	$this->m_ErrorBarDisplayType = $errorBarDisplayType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.ErrorBarType]
  
 */
class ErrorBarType
{
    public $m_ErrorBarType;
    
    function __construct($errorBarType)
    {
    	$this->m_ErrorBarType = $errorBarType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.ErrorCheckOption]
  
 */
class ErrorCheckOption
{
    public $m_ErrorCheckOption;
    
    function __construct($errorCheckOption)
    {
    	$this->m_ErrorCheckOption = $errorCheckOption;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ErrorCheckOption.addRange(com.aspose.cells.CellArea)]

      @param oCellArea0  com.aspose.cells.CellArea
      @return int
     */
    function addRange($oCellArea0)
    {
        return $this->m_ErrorCheckOption->addRange(ClassFactory::_t1($oCellArea0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ErrorCheckOption.getCountOfRange()]

      @return int
     */
    function getCountOfRange()
    {
        return $this->m_ErrorCheckOption->getCountOfRange();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ErrorCheckOption.getRange(int)]

      @param pInt0  int
      @return com.aspose.cells.CellArea
     */
    function getRange($pInt0)
    {
        return ClassFactory::_t2($this->m_ErrorCheckOption->getRange($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ErrorCheckOption.isErrorCheck(int)]

      @param pInt0  int
      @return boolean
     */
    function isErrorCheck($pInt0)
    {
        return $this->m_ErrorCheckOption->isErrorCheck($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ErrorCheckOption.removeRange(int)]

      @param pInt0  int
     */
    function removeRange($pInt0)
    {
        $this->m_ErrorCheckOption->removeRange($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ErrorCheckOption.setErrorCheck(int, boolean)]

      @param pInt0  int
      @param pBoolean1  boolean
     */
    function setErrorCheck($pInt0, $pBoolean1)
    {
        $this->m_ErrorCheckOption->setErrorCheck($pInt0, $pBoolean1);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ErrorCheckOptionCollection]
  
 */
class ErrorCheckOptionCollection extends CollectionBase
{
    public $m_ErrorCheckOptionCollection;
    
    function __construct($errorCheckOptionCollection)
    {
    	$this->m_ErrorCheckOptionCollection = $errorCheckOptionCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ErrorCheckOptionCollection.add()]

      @return int
     */
    function add()
    {
        return $this->m_ErrorCheckOptionCollection->add();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ErrorCheckOptionCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.ErrorCheckOption
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_ErrorCheckOptionCollection->get($pInt0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ErrorCheckType]
  
 */
class ErrorCheckType
{
    public $m_ErrorCheckType;
    
    function __construct($errorCheckType)
    {
    	$this->m_ErrorCheckType = $errorCheckType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.ExceptionType]
  
 */
class ExceptionType
{
    public $m_ExceptionType;
    
    function __construct($exceptionType)
    {
    	$this->m_ExceptionType = $exceptionType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.ExportObjectEvent]
  
 */
class ExportObjectEvent
{
    public $m_ExportObjectEvent;
    
    function __construct($exportObjectEvent)
    {
    	$this->m_ExportObjectEvent = $exportObjectEvent;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ExportObjectEvent.getSource()]

      @return corresponding java type is {java.lang.Object}
     */
    function getSource()
    {
        return ClassFactory::_t2($this->m_ExportObjectEvent->getSource());
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ExportTableOptions]
  
 */
class ExportTableOptions
{
    public $m_ExportTableOptions;
    
    function __construct($exportTableOptions)
    {
    	$this->m_ExportTableOptions = $exportTableOptions;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ExportTableOptions.getCheckMixedValueType()]

      @return boolean
     */
    function getCheckMixedValueType()
    {
        return $this->m_ExportTableOptions->getCheckMixedValueType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExportTableOptions.getExportAsString()]

      @return boolean
     */
    function getExportAsString()
    {
        return $this->m_ExportTableOptions->getExportAsString();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExportTableOptions.getExportColumnName()]

      @return boolean
     */
    function getExportColumnName()
    {
        return $this->m_ExportTableOptions->getExportColumnName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExportTableOptions.getIndexes()]

      @return int[]
     */
    function getIndexes()
    {
        return $this->m_ExportTableOptions->getIndexes();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExportTableOptions.getPlotVisibleCells()]

      @return boolean
     */
    function getPlotVisibleCells()
    {
        return $this->m_ExportTableOptions->getPlotVisibleCells();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExportTableOptions.getPlotVisibleColumns()]

      @return boolean
     */
    function getPlotVisibleColumns()
    {
        return $this->m_ExportTableOptions->getPlotVisibleColumns();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExportTableOptions.getPlotVisibleRows()]

      @return boolean
     */
    function getPlotVisibleRows()
    {
        return $this->m_ExportTableOptions->getPlotVisibleRows();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExportTableOptions.getSkipErrorValue()]

      @return boolean
     */
    function getSkipErrorValue()
    {
        return $this->m_ExportTableOptions->getSkipErrorValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExportTableOptions.isVertical()]

      @return boolean
     */
    function isVertical()
    {
        return $this->m_ExportTableOptions->isVertical();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExportTableOptions.setCheckMixedValueType(boolean)]

      @param pBoolean0  boolean
     */
    function setCheckMixedValueType($pBoolean0)
    {
        $this->m_ExportTableOptions->setCheckMixedValueType($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExportTableOptions.setExportAsString(boolean)]

      @param pBoolean0  boolean
     */
    function setExportAsString($pBoolean0)
    {
        $this->m_ExportTableOptions->setExportAsString($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExportTableOptions.setExportColumnName(boolean)]

      @param pBoolean0  boolean
     */
    function setExportColumnName($pBoolean0)
    {
        $this->m_ExportTableOptions->setExportColumnName($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExportTableOptions.setIndexes(int[])]

      @param arrP1DInt0  int[]
     */
    function setIndexes($arrP1DInt0)
    {
        $this->m_ExportTableOptions->setIndexes($arrP1DInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExportTableOptions.setPlotVisibleCells(boolean)]

      @param pBoolean0  boolean
     */
    function setPlotVisibleCells($pBoolean0)
    {
        $this->m_ExportTableOptions->setPlotVisibleCells($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExportTableOptions.setPlotVisibleColumns(boolean)]

      @param pBoolean0  boolean
     */
    function setPlotVisibleColumns($pBoolean0)
    {
        $this->m_ExportTableOptions->setPlotVisibleColumns($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExportTableOptions.setPlotVisibleRows(boolean)]

      @param pBoolean0  boolean
     */
    function setPlotVisibleRows($pBoolean0)
    {
        $this->m_ExportTableOptions->setPlotVisibleRows($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExportTableOptions.setSkipErrorValue(boolean)]

      @param pBoolean0  boolean
     */
    function setSkipErrorValue($pBoolean0)
    {
        $this->m_ExportTableOptions->setSkipErrorValue($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExportTableOptions.setVertical(boolean)]

      @param pBoolean0  boolean
     */
    function setVertical($pBoolean0)
    {
        $this->m_ExportTableOptions->setVertical($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ExternalConnection]
  
 */
class ExternalConnection
{
    public $m_ExternalConnection;
    
    function __construct($externalConnection)
    {
    	$this->m_ExternalConnection = $externalConnection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ExternalConnection.getBackgroundRefresh()]

      @return boolean
     */
    function getBackgroundRefresh()
    {
        return $this->m_ExternalConnection->getBackgroundRefresh();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalConnection.getConnectionDescription()]

      @return String
     */
    function getConnectionDescription()
    {
        return $this->m_ExternalConnection->getConnectionDescription();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalConnection.getConnectionId()]

      @return int
     */
    function getConnectionId()
    {
        return $this->m_ExternalConnection->getConnectionId();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalConnection.getCredentials()]

      @return int
     */
    function getCredentials()
    {
        return $this->m_ExternalConnection->getCredentials();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalConnection.getKeepAlive()]

      @return boolean
     */
    function getKeepAlive()
    {
        return $this->m_ExternalConnection->getKeepAlive();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalConnection.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_ExternalConnection->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalConnection.getOdcFile()]

      @return String
     */
    function getOdcFile()
    {
        return $this->m_ExternalConnection->getOdcFile();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalConnection.getOnlyUseConnectionFile()]

      @return boolean
     */
    function getOnlyUseConnectionFile()
    {
        return $this->m_ExternalConnection->getOnlyUseConnectionFile();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalConnection.getParameters()]

      @return com.aspose.cells.ConnectionParameterCollection
     */
    function getParameters()
    {
        return ClassFactory::_t2($this->m_ExternalConnection->getParameters());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalConnection.getReConnectionMethod()]

      @return int
     */
    function getReConnectionMethod()
    {
        return $this->m_ExternalConnection->getReConnectionMethod();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalConnection.getRefreshInternal()]

      @return int
     */
    function getRefreshInternal()
    {
        return $this->m_ExternalConnection->getRefreshInternal();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalConnection.getRefreshOnLoad()]

      @return boolean
     */
    function getRefreshOnLoad()
    {
        return $this->m_ExternalConnection->getRefreshOnLoad();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalConnection.getSSOId()]

      @return String
     */
    function getSSOId()
    {
        return $this->m_ExternalConnection->getSSOId();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalConnection.getSaveData()]

      @return boolean
     */
    function getSaveData()
    {
        return $this->m_ExternalConnection->getSaveData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalConnection.getSavePassword()]

      @return boolean
     */
    function getSavePassword()
    {
        return $this->m_ExternalConnection->getSavePassword();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalConnection.getSourceFile()]

      @return String
     */
    function getSourceFile()
    {
        return $this->m_ExternalConnection->getSourceFile();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalConnection.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_ExternalConnection->getType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalConnection.isDeleted()]

      @return boolean
     */
    function isDeleted()
    {
        return $this->m_ExternalConnection->isDeleted();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalConnection.isNew()]

      @return boolean
     */
    function isNew()
    {
        return $this->m_ExternalConnection->isNew();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ExternalConnectionCollection]
  
 */
class ExternalConnectionCollection extends CollectionBase
{
    public $m_ExternalConnectionCollection;
    
    function __construct($externalConnectionCollection)
    {
    	$this->m_ExternalConnectionCollection = $externalConnectionCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ExternalConnectionCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.ExternalConnection
     */
    function getI($pInt0)
    {
        return ClassFactory::_t2($this->m_ExternalConnectionCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalConnectionCollection.get(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.ExternalConnection
     */
    function getS($oString0)
    {
        return ClassFactory::_t2($this->m_ExternalConnectionCollection->get($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalConnectionCollection.getExternalConnectionById(int)]

      @param pInt0  int
      @return com.aspose.cells.ExternalConnection
     */
    function getExternalConnectionById($pInt0)
    {
        return ClassFactory::_t2($this->m_ExternalConnectionCollection->getExternalConnectionById($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalConnectionCollection.set(int, com.aspose.cells.ExternalConnection)]

      @param pInt0  int
      @param oExternalConnection1  com.aspose.cells.ExternalConnection
     */
    function set($pInt0, $oExternalConnection1)
    {
        $this->m_ExternalConnectionCollection->set($pInt0, ClassFactory::_t1($oExternalConnection1));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ExternalLink]
  
 */
class ExternalLink
{
    public $m_ExternalLink;
    
    function __construct($externalLink)
    {
    	$this->m_ExternalLink = $externalLink;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ExternalLink.addExternalName(java.lang.String, java.lang.String)]

      @param oString0  String
      @param oString1  String
     */
    function addExternalName($oString0, $oString1)
    {
        $this->m_ExternalLink->addExternalName($oString0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalLink.getDataSource()]

      @return String
     */
    function getDataSource()
    {
        return $this->m_ExternalLink->getDataSource();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalLink.isReferred()]

      @return boolean
     */
    function isReferred()
    {
        return $this->m_ExternalLink->isReferred();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalLink.setDataSource(java.lang.String)]

      @param oString0  String
     */
    function setDataSource($oString0)
    {
        $this->m_ExternalLink->setDataSource($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ExternalLinkCollection]
  
 */
class ExternalLinkCollection
{
    public $m_ExternalLinkCollection;
    
    function __construct($externalLinkCollection)
    {
    	$this->m_ExternalLinkCollection = $externalLinkCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ExternalLinkCollection.add(java.lang.String, java.lang.String[])]

      @param oString0  String
      @param arrD1DString1  array, corresponding java type is {String[]}
      @return int
     */
    function addSS($oString0, $arrD1DString1)
    {
        return $this->m_ExternalLinkCollection->add($oString0, $arrD1DString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalLinkCollection.add(int, java.lang.String, java.lang.String[])]

      @param pInt0  int
      @param oString1  String
      @param arrD1DString2  array, corresponding java type is {String[]}
      @return int
     */
    function addISS($pInt0, $oString1, $arrD1DString2)
    {
        return $this->m_ExternalLinkCollection->add($pInt0, $oString1, $arrD1DString2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalLinkCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.ExternalLink
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_ExternalLinkCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ExternalLinkCollection.getCount()]

      @return int
     */
    function getCount()
    {
        return $this->m_ExternalLinkCollection->getCount();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.FileFormatInfo]
  
 */
class FileFormatInfo
{
    public $m_FileFormatInfo;
    
    function __construct($fileFormatInfo)
    {
    	$this->m_FileFormatInfo = $fileFormatInfo;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.FileFormatInfo.getFileFormatType()]

      @return int
     */
    function getFileFormatType()
    {
        return $this->m_FileFormatInfo->getFileFormatType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FileFormatInfo.getLoadFormat()]

      @return int
     */
    function getLoadFormat()
    {
        return $this->m_FileFormatInfo->getLoadFormat();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FileFormatInfo.isEncrypted()]

      @return boolean
     */
    function isEncrypted()
    {
        return $this->m_FileFormatInfo->isEncrypted();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FileFormatInfo.isProtectedByRMS()]

      @return boolean
     */
    function isProtectedByRMS()
    {
        return $this->m_FileFormatInfo->isProtectedByRMS();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.FileFormatType]
  
 */
class FileFormatType
{
    public $m_FileFormatType;
    
    function __construct($fileFormatType)
    {
    	$this->m_FileFormatType = $fileFormatType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.FileFormatUtil]
  
 */
class FileFormatUtil
{
    public $m_FileFormatUtil;
    
    function __construct($fileFormatUtil)
    {
    	$this->m_FileFormatUtil = $fileFormatUtil;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.FileFormatUtil.detectFileFormat(java.io.InputStream)]

      @param oInputStream0  corresponding java type is {java.io.InputStream}
      @return com.aspose.cells.FileFormatInfo
     */
    function detectFileFormatI($oInputStream0)
    {
        return ClassFactory::_t2($this->m_FileFormatUtil->detectFileFormat(ClassFactory::_t1($oInputStream0)));
    }

    /*
      Wrapper for java version method [com.aspose.cells.FileFormatUtil.detectFileFormat(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.FileFormatInfo
     */
    function detectFileFormatS($oString0)
    {
        return ClassFactory::_t2($this->m_FileFormatUtil->detectFileFormat($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.FileFormatUtil.extensionToSaveFormat(java.lang.String)]

      @param oString0  String
      @return int
     */
    function extensionToSaveFormat($oString0)
    {
        return $this->m_FileFormatUtil->extensionToSaveFormat($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FileFormatUtil.isTemplateFormat(java.lang.String)]

      @param oString0  String
      @return boolean
     */
    function isTemplateFormat($oString0)
    {
        return $this->m_FileFormatUtil->isTemplateFormat($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FileFormatUtil.loadFormatToExtension(int)]

      @param pInt0  int
      @return String
     */
    function loadFormatToExtension($pInt0)
    {
        return $this->m_FileFormatUtil->loadFormatToExtension($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FileFormatUtil.loadFormatToSaveFormat(int)]

      @param pInt0  int
      @return int
     */
    function loadFormatToSaveFormat($pInt0)
    {
        return $this->m_FileFormatUtil->loadFormatToSaveFormat($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FileFormatUtil.saveFormatToExtension(int)]

      @param pInt0  int
      @return String
     */
    function saveFormatToExtension($pInt0)
    {
        return $this->m_FileFormatUtil->saveFormatToExtension($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FileFormatUtil.saveFormatToLoadFormat(int)]

      @param pInt0  int
      @return int
     */
    function saveFormatToLoadFormat($pInt0)
    {
        return $this->m_FileFormatUtil->saveFormatToLoadFormat($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.FillFormat]
  
 */
class FillFormat
{
    public $m_FillFormat;
    
    function __construct($fillFormat)
    {
    	$this->m_FillFormat = $fillFormat;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.getGradientColor1()]

      @return com.aspose.cells.Color
     */
    function getGradientColor1()
    {
        return ClassFactory::_t2($this->m_FillFormat->getGradientColor1());
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.getGradientColor2()]

      @return com.aspose.cells.Color
     */
    function getGradientColor2()
    {
        return ClassFactory::_t2($this->m_FillFormat->getGradientColor2());
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.getGradientColorType()]

      @return int
     */
    function getGradientColorType()
    {
        return $this->m_FillFormat->getGradientColorType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.getGradientDegree()]

      @return double
     */
    function getGradientDegree()
    {
        return $this->m_FillFormat->getGradientDegree();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.getGradientFill()]

      @return com.aspose.cells.GradientFill
     */
    function getGradientFill()
    {
        return ClassFactory::_t2($this->m_FillFormat->getGradientFill());
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.getGradientStyle()]

      @return int
     */
    function getGradientStyle()
    {
        return $this->m_FillFormat->getGradientStyle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.getGradientVariant()]

      @return int
     */
    function getGradientVariant()
    {
        return $this->m_FillFormat->getGradientVariant();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.getImageData()]

      @return byte[]
     */
    function getImageData()
    {
        return $this->m_FillFormat->getImageData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.getPattern()]

      @return int
     */
    function getPattern()
    {
        return $this->m_FillFormat->getPattern();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.getPatternFill()]

      @return com.aspose.cells.PatternFill
     */
    function getPatternFill()
    {
        return ClassFactory::_t2($this->m_FillFormat->getPatternFill());
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.getPictureFormatType()]

      @return int
     */
    function getPictureFormatType()
    {
        return $this->m_FillFormat->getPictureFormatType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.getPresetColor()]

      @return int
     */
    function getPresetColor()
    {
        return $this->m_FillFormat->getPresetColor();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.getScale()]

      @return double
     */
    function getScale()
    {
        return $this->m_FillFormat->getScale();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.getSetType()]

      @return int
     */
    function getSetType()
    {
        return $this->m_FillFormat->getSetType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.getSolidFill()]

      @return com.aspose.cells.SolidFill
     */
    function getSolidFill()
    {
        return ClassFactory::_t2($this->m_FillFormat->getSolidFill());
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.getTexture()]

      @return int
     */
    function getTexture()
    {
        return $this->m_FillFormat->getTexture();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.getTextureFill()]

      @return com.aspose.cells.TextureFill
     */
    function getTextureFill()
    {
        return ClassFactory::_t2($this->m_FillFormat->getTextureFill());
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_FillFormat->getType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.setImageData(byte[])]

      @param arrP1DByte0  byte[]
     */
    function setImageData($arrP1DByte0)
    {
        $this->m_FillFormat->setImageData($arrP1DByte0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.setOneColorGradient(com.aspose.cells.Color, double, int, int)]

      @param oColor0  com.aspose.cells.Color
      @param pDouble1  double
      @param pInt2  int
      @param pInt3  int
     */
    function setOneColorGradient($oColor0, $pDouble1, $pInt2, $pInt3)
    {
        $this->m_FillFormat->setOneColorGradient(ClassFactory::_t1($oColor0), $pDouble1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.setPattern(int)]

      @param pInt0  int
     */
    function setPattern($pInt0)
    {
        $this->m_FillFormat->setPattern($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.setPictureFormatType(int)]

      @param pInt0  int
     */
    function setPictureFormatType($pInt0)
    {
        $this->m_FillFormat->setPictureFormatType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.setPresetColorGradient(int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
     */
    function setPresetColorGradient($pInt0, $pInt1, $pInt2)
    {
        $this->m_FillFormat->setPresetColorGradient($pInt0, $pInt1, $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.setScale(double)]

      @param pDouble0  double
     */
    function setScale($pDouble0)
    {
        $this->m_FillFormat->setScale($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.setSetType(int)]

      @param pInt0  int
     */
    function setSetType($pInt0)
    {
        $this->m_FillFormat->setSetType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.setTexture(int)]

      @param pInt0  int
     */
    function setTexture($pInt0)
    {
        $this->m_FillFormat->setTexture($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.setTwoColorGradient(com.aspose.cells.Color, com.aspose.cells.Color, int, int)]

      @param oColor0  com.aspose.cells.Color
      @param oColor1  com.aspose.cells.Color
      @param pInt2  int
      @param pInt3  int
     */
    function setTwoColorGradientCCII($oColor0, $oColor1, $pInt2, $pInt3)
    {
        $this->m_FillFormat->setTwoColorGradient(ClassFactory::_t1($oColor0), ClassFactory::_t1($oColor1), $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.setTwoColorGradient(com.aspose.cells.Color, double, com.aspose.cells.Color, double, int, int)]

      @param oColor0  com.aspose.cells.Color
      @param pDouble1  double
      @param oColor2  com.aspose.cells.Color
      @param pDouble3  double
      @param pInt4  int
      @param pInt5  int
     */
    function setTwoColorGradientCDCDII($oColor0, $pDouble1, $oColor2, $pDouble3, $pInt4, $pInt5)
    {
        $this->m_FillFormat->setTwoColorGradient(ClassFactory::_t1($oColor0), $pDouble1, ClassFactory::_t1($oColor2), $pDouble3, $pInt4, $pInt5);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FillFormat.setType(int)]

      @param pInt0  int
     */
    function setType($pInt0)
    {
        $this->m_FillFormat->setType($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.FillPattern]
  
 */
class FillPattern
{
    public $m_FillPattern;
    
    function __construct($fillPattern)
    {
    	$this->m_FillPattern = $fillPattern;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.FillPictureType]
  
 */
class FillPictureType
{
    public $m_FillPictureType;
    
    function __construct($fillPictureType)
    {
    	$this->m_FillPictureType = $fillPictureType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.FillType]
  
 */
class FillType
{
    public $m_FillType;
    
    function __construct($fillType)
    {
    	$this->m_FillType = $fillType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.FillType]
  
 */
class FillType1
{
    public $m_FillType1;
    
    function __construct($fillType)
    {
    	$this->m_FillType1 = $fillType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.FilterColumn]
  
 */
class FilterColumn
{
    public $m_FilterColumn;
    
    function __construct($filterColumn)
    {
    	$this->m_FilterColumn = $filterColumn;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.FilterColumn.getFieldIndex()]

      @return int
     */
    function getFieldIndex()
    {
        return $this->m_FilterColumn->getFieldIndex();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FilterColumn.getFilter()]

      @return corresponding java type is {java.lang.Object}
     */
    function getFilter()
    {
        return ClassFactory::_t2($this->m_FilterColumn->getFilter());
    }

    /*
      Wrapper for java version method [com.aspose.cells.FilterColumn.getFilterType()]

      @return int
     */
    function getFilterType()
    {
        return $this->m_FilterColumn->getFilterType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FilterColumn.getVisibledropdown()]

      @return boolean
     */
    function getVisibledropdown()
    {
        return $this->m_FilterColumn->getVisibledropdown();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FilterColumn.setFieldIndex(int)]

      @param pInt0  int
     */
    function setFieldIndex($pInt0)
    {
        $this->m_FilterColumn->setFieldIndex($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FilterColumn.setFilter(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
     */
    function setFilter($oObject0)
    {
        $this->m_FilterColumn->setFilter(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.FilterColumn.setFilterType(int)]

      @param pInt0  int
     */
    function setFilterType($pInt0)
    {
        $this->m_FilterColumn->setFilterType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FilterColumn.setVisibledropdown(boolean)]

      @param pBoolean0  boolean
     */
    function setVisibledropdown($pBoolean0)
    {
        $this->m_FilterColumn->setVisibledropdown($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.FilterColumnCollection]
  
 */
class FilterColumnCollection extends CollectionBase
{
    public $m_FilterColumnCollection;
    
    function __construct($filterColumnCollection)
    {
    	$this->m_FilterColumnCollection = $filterColumnCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.FilterColumnCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.FilterColumn
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_FilterColumnCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.FilterColumnCollection.getByIndex(int)]

      @param pInt0  int
      @return com.aspose.cells.FilterColumn
     */
    function getByIndex($pInt0)
    {
        return ClassFactory::_t2($this->m_FilterColumnCollection->getByIndex($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.FilterColumnCollection.removeAt(int)]

      @param pInt0  int
     */
    function removeAt($pInt0)
    {
        $this->m_FilterColumnCollection->removeAt($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.FilterOperatorType]
  
 */
class FilterOperatorType
{
    public $m_FilterOperatorType;
    
    function __construct($filterOperatorType)
    {
    	$this->m_FilterOperatorType = $filterOperatorType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.FilterType]
  
 */
class FilterType
{
    public $m_FilterType;
    
    function __construct($filterType)
    {
    	$this->m_FilterType = $filterType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.FindOptions]
  
 */
class FindOptions
{
    public $m_FindOptions;
    
    function __construct($findOptions)
    {
    	$this->m_FindOptions = $findOptions;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.FindOptions.getCaseSensitive()]

      @return boolean
     */
    function getCaseSensitive()
    {
        return $this->m_FindOptions->getCaseSensitive();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FindOptions.getConvertNumericData()]

      @return boolean
     */
    function getConvertNumericData()
    {
        return $this->m_FindOptions->getConvertNumericData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FindOptions.getLookAtType()]

      @return int
     */
    function getLookAtType()
    {
        return $this->m_FindOptions->getLookAtType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FindOptions.getLookInType()]

      @return int
     */
    function getLookInType()
    {
        return $this->m_FindOptions->getLookInType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FindOptions.getRange()]

      @return com.aspose.cells.CellArea
     */
    function getRange()
    {
        return ClassFactory::_t2($this->m_FindOptions->getRange());
    }

    /*
      Wrapper for java version method [com.aspose.cells.FindOptions.getRegexKey()]

      @return boolean
     */
    function getRegexKey()
    {
        return $this->m_FindOptions->getRegexKey();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FindOptions.getSeachOrderByRows()]

      @return boolean
     */
    function getSeachOrderByRows()
    {
        return $this->m_FindOptions->getSeachOrderByRows();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FindOptions.getSearchNext()]

      @return boolean
     */
    function getSearchNext()
    {
        return $this->m_FindOptions->getSearchNext();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FindOptions.getStyle()]

      @return com.aspose.cells.Style
     */
    function getStyle()
    {
        return ClassFactory::_t2($this->m_FindOptions->getStyle());
    }

    /*
      Wrapper for java version method [com.aspose.cells.FindOptions.isRangeSet()]

      @return boolean
     */
    function isRangeSet()
    {
        return $this->m_FindOptions->isRangeSet();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FindOptions.setCaseSensitive(boolean)]

      @param pBoolean0  boolean
     */
    function setCaseSensitive($pBoolean0)
    {
        $this->m_FindOptions->setCaseSensitive($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FindOptions.setConvertNumericData(boolean)]

      @param pBoolean0  boolean
     */
    function setConvertNumericData($pBoolean0)
    {
        $this->m_FindOptions->setConvertNumericData($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FindOptions.setLookAtType(int)]

      @param pInt0  int
     */
    function setLookAtType($pInt0)
    {
        $this->m_FindOptions->setLookAtType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FindOptions.setLookInType(int)]

      @param pInt0  int
     */
    function setLookInType($pInt0)
    {
        $this->m_FindOptions->setLookInType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FindOptions.setRange(com.aspose.cells.CellArea)]

      @param oCellArea0  com.aspose.cells.CellArea
     */
    function setRange($oCellArea0)
    {
        $this->m_FindOptions->setRange(ClassFactory::_t1($oCellArea0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.FindOptions.setRegexKey(boolean)]

      @param pBoolean0  boolean
     */
    function setRegexKey($pBoolean0)
    {
        $this->m_FindOptions->setRegexKey($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FindOptions.setSeachOrderByRows(boolean)]

      @param pBoolean0  boolean
     */
    function setSeachOrderByRows($pBoolean0)
    {
        $this->m_FindOptions->setSeachOrderByRows($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FindOptions.setSearchNext(boolean)]

      @param pBoolean0  boolean
     */
    function setSearchNext($pBoolean0)
    {
        $this->m_FindOptions->setSearchNext($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FindOptions.setStyle(com.aspose.cells.Style)]

      @param oStyle0  com.aspose.cells.Style
     */
    function setStyle($oStyle0)
    {
        $this->m_FindOptions->setStyle(ClassFactory::_t1($oStyle0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.Floor]
  
 */
class Floor extends Area
{
    public $m_Floor;
    
    function __construct($floor)
    {
    	$this->m_Floor = $floor;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Floor.getBorder()]

      @return com.aspose.cells.Line
     */
    function getBorder()
    {
        return ClassFactory::_t2($this->m_Floor->getBorder());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Floor.setBorder(com.aspose.cells.Line)]

      @param oLine0  com.aspose.cells.Line
     */
    function setBorder($oLine0)
    {
        $this->m_Floor->setBorder(ClassFactory::_t1($oLine0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.Font]
  
 */
class Font
{
    public $m_Font;
    
    function __construct($font)
    {
    	$this->m_Font = $font;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Font.equals(com.aspose.cells.Font)]

      @param oFont0  com.aspose.cells.Font
      @return boolean
     */
    function equals($oFont0)
    {
        return $this->m_Font->equals(ClassFactory::_t1($oFont0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.getArgbColor()]

      @return int
     */
    function getArgbColor()
    {
        return $this->m_Font->getArgbColor();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.getCapsType()]

      @return int
     */
    function getCapsType()
    {
        return $this->m_Font->getCapsType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.getColor()]

      @return com.aspose.cells.Color
     */
    function getColor()
    {
        return ClassFactory::_t2($this->m_Font->getColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.getDoubleSize()]

      @return double
     */
    function getDoubleSize()
    {
        return $this->m_Font->getDoubleSize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_Font->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.getScriptOffset()]

      @return double
     */
    function getScriptOffset()
    {
        return $this->m_Font->getScriptOffset();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.getSize()]

      @return int
     */
    function getSize()
    {
        return $this->m_Font->getSize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.getStrikeType()]

      @return int
     */
    function getStrikeType()
    {
        return $this->m_Font->getStrikeType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.getThemeColor()]

      @return com.aspose.cells.ThemeColor
     */
    function getThemeColor()
    {
        return ClassFactory::_t2($this->m_Font->getThemeColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.getUnderline()]

      @return int
     */
    function getUnderline()
    {
        return $this->m_Font->getUnderline();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.isBold()]

      @return boolean
     */
    function isBold()
    {
        return $this->m_Font->isBold();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.isItalic()]

      @return boolean
     */
    function isItalic()
    {
        return $this->m_Font->isItalic();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.isNormalizeHeights()]

      @return boolean
     */
    function isNormalizeHeights()
    {
        return $this->m_Font->isNormalizeHeights();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.isStrikeout()]

      @return boolean
     */
    function isStrikeout()
    {
        return $this->m_Font->isStrikeout();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.isSubscript()]

      @return boolean
     */
    function isSubscript()
    {
        return $this->m_Font->isSubscript();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.isSuperscript()]

      @return boolean
     */
    function isSuperscript()
    {
        return $this->m_Font->isSuperscript();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.setArgbColor(int)]

      @param pInt0  int
     */
    function setArgbColor($pInt0)
    {
        $this->m_Font->setArgbColor($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.setBold(boolean)]

      @param pBoolean0  boolean
     */
    function setBold($pBoolean0)
    {
        $this->m_Font->setBold($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.setCapsType(int)]

      @param pInt0  int
     */
    function setCapsType($pInt0)
    {
        $this->m_Font->setCapsType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.setColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setColor($oColor0)
    {
        $this->m_Font->setColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.setDoubleSize(double)]

      @param pDouble0  double
     */
    function setDoubleSize($pDouble0)
    {
        $this->m_Font->setDoubleSize($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.setItalic(boolean)]

      @param pBoolean0  boolean
     */
    function setItalic($pBoolean0)
    {
        $this->m_Font->setItalic($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.setName(java.lang.String)]

      @param oString0  String
     */
    function setName($oString0)
    {
        $this->m_Font->setName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.setNormalizeHeights(boolean)]

      @param pBoolean0  boolean
     */
    function setNormalizeHeights($pBoolean0)
    {
        $this->m_Font->setNormalizeHeights($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.setScriptOffset(double)]

      @param pDouble0  double
     */
    function setScriptOffset($pDouble0)
    {
        $this->m_Font->setScriptOffset($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.setSize(int)]

      @param pInt0  int
     */
    function setSize($pInt0)
    {
        $this->m_Font->setSize($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.setStrikeType(int)]

      @param pInt0  int
     */
    function setStrikeType($pInt0)
    {
        $this->m_Font->setStrikeType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.setStrikeout(boolean)]

      @param pBoolean0  boolean
     */
    function setStrikeout($pBoolean0)
    {
        $this->m_Font->setStrikeout($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.setSubscript(boolean)]

      @param pBoolean0  boolean
     */
    function setSubscript($pBoolean0)
    {
        $this->m_Font->setSubscript($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.setSuperscript(boolean)]

      @param pBoolean0  boolean
     */
    function setSuperscript($pBoolean0)
    {
        $this->m_Font->setSuperscript($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.setThemeColor(com.aspose.cells.ThemeColor)]

      @param oThemeColor0  com.aspose.cells.ThemeColor
     */
    function setThemeColor($oThemeColor0)
    {
        $this->m_Font->setThemeColor(ClassFactory::_t1($oThemeColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.setUnderline(int)]

      @param pInt0  int
     */
    function setUnderline($pInt0)
    {
        $this->m_Font->setUnderline($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Font.toString()]

      @return String
     */
    function toString()
    {
        return $this->m_Font->toString();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.FontSetting]
  
 */
class FontSetting
{
    public $m_FontSetting;
    
    function __construct($fontSetting)
    {
    	$this->m_FontSetting = $fontSetting;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.FontSetting.getFont()]

      @return com.aspose.cells.Font
     */
    function getFont()
    {
        return ClassFactory::_t2($this->m_FontSetting->getFont());
    }

    /*
      Wrapper for java version method [com.aspose.cells.FontSetting.getLength()]

      @return int
     */
    function getLength()
    {
        return $this->m_FontSetting->getLength();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FontSetting.getStartIndex()]

      @return int
     */
    function getStartIndex()
    {
        return $this->m_FontSetting->getStartIndex();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.FontUnderlineType]
  
 */
class FontUnderlineType
{
    public $m_FontUnderlineType;
    
    function __construct($fontUnderlineType)
    {
    	$this->m_FontUnderlineType = $fontUnderlineType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Format3D]
  
 */
class Format3D
{
    public $m_Format3D;
    
    function __construct($format3D)
    {
    	$this->m_Format3D = $format3D;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Format3D.getLightingAngle()]

      @return double
     */
    function getLightingAngle()
    {
        return $this->m_Format3D->getLightingAngle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Format3D.getSurfaceLightingType()]

      @return int
     */
    function getSurfaceLightingType()
    {
        return $this->m_Format3D->getSurfaceLightingType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Format3D.getSurfaceMaterialType()]

      @return int
     */
    function getSurfaceMaterialType()
    {
        return $this->m_Format3D->getSurfaceMaterialType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Format3D.getTopBevel()]

      @return com.aspose.cells.Bevel
     */
    function getTopBevel()
    {
        return ClassFactory::_t2($this->m_Format3D->getTopBevel());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Format3D.hasTopBevelData()]

      @return boolean
     */
    function hasTopBevelData()
    {
        return $this->m_Format3D->hasTopBevelData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Format3D.setLightingAngle(double)]

      @param pDouble0  double
     */
    function setLightingAngle($pDouble0)
    {
        $this->m_Format3D->setLightingAngle($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Format3D.setSurfaceLightingType(int)]

      @param pInt0  int
     */
    function setSurfaceLightingType($pInt0)
    {
        $this->m_Format3D->setSurfaceLightingType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Format3D.setSurfaceMaterialType(int)]

      @param pInt0  int
     */
    function setSurfaceMaterialType($pInt0)
    {
        $this->m_Format3D->setSurfaceMaterialType($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.FormatCondition]
  
 */
class FormatCondition
{
    public $m_FormatCondition;
    
    function __construct($formatCondition)
    {
    	$this->m_FormatCondition = $formatCondition;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.getAboveAverage()]

      @return com.aspose.cells.AboveAverage
     */
    function getAboveAverage()
    {
        return ClassFactory::_t2($this->m_FormatCondition->getAboveAverage());
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.getColorScale()]

      @return com.aspose.cells.ColorScale
     */
    function getColorScale()
    {
        return ClassFactory::_t2($this->m_FormatCondition->getColorScale());
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.getDataBar()]

      @return com.aspose.cells.DataBar
     */
    function getDataBar()
    {
        return ClassFactory::_t2($this->m_FormatCondition->getDataBar());
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.getFormula1()]

      @return String
     */
    function getFormula1()
    {
        return $this->m_FormatCondition->getFormula1();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.getFormula1(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return String
     */
    function getFormula1II($pInt0, $pInt1)
    {
        return $this->m_FormatCondition->getFormula1($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.getFormula2()]

      @return String
     */
    function getFormula2()
    {
        return $this->m_FormatCondition->getFormula2();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.getFormula2(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return String
     */
    function getFormula2II($pInt0, $pInt1)
    {
        return $this->m_FormatCondition->getFormula2($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.getIconSet()]

      @return com.aspose.cells.IconSet
     */
    function getIconSet()
    {
        return ClassFactory::_t2($this->m_FormatCondition->getIconSet());
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.getOperator()]

      @return int
     */
    function getOperator()
    {
        return $this->m_FormatCondition->getOperator();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.getPriority()]

      @return int
     */
    function getPriority()
    {
        return $this->m_FormatCondition->getPriority();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.getStopIfTrue()]

      @return boolean
     */
    function getStopIfTrue()
    {
        return $this->m_FormatCondition->getStopIfTrue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.getStyle()]

      @return com.aspose.cells.Style
     */
    function getStyle()
    {
        return ClassFactory::_t2($this->m_FormatCondition->getStyle());
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.getText()]

      @return String
     */
    function getText()
    {
        return $this->m_FormatCondition->getText();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.getTimePeriod()]

      @return int
     */
    function getTimePeriod()
    {
        return $this->m_FormatCondition->getTimePeriod();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.getTop10()]

      @return com.aspose.cells.Top10
     */
    function getTop10()
    {
        return ClassFactory::_t2($this->m_FormatCondition->getTop10());
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_FormatCondition->getType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.setFormula1(java.lang.String)]

      @param oString0  String
     */
    function setFormula1($oString0)
    {
        $this->m_FormatCondition->setFormula1($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.setFormula2(java.lang.String)]

      @param oString0  String
     */
    function setFormula2($oString0)
    {
        $this->m_FormatCondition->setFormula2($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.setOperator(int)]

      @param pInt0  int
     */
    function setOperator($pInt0)
    {
        $this->m_FormatCondition->setOperator($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.setPriority(int)]

      @param pInt0  int
     */
    function setPriority($pInt0)
    {
        $this->m_FormatCondition->setPriority($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.setStopIfTrue(boolean)]

      @param pBoolean0  boolean
     */
    function setStopIfTrue($pBoolean0)
    {
        $this->m_FormatCondition->setStopIfTrue($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.setStyle(com.aspose.cells.Style)]

      @param oStyle0  com.aspose.cells.Style
     */
    function setStyle($oStyle0)
    {
        $this->m_FormatCondition->setStyle(ClassFactory::_t1($oStyle0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.setText(java.lang.String)]

      @param oString0  String
     */
    function setText($oString0)
    {
        $this->m_FormatCondition->setText($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.setTimePeriod(int)]

      @param pInt0  int
     */
    function setTimePeriod($pInt0)
    {
        $this->m_FormatCondition->setTimePeriod($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatCondition.setType(int)]

      @param pInt0  int
     */
    function setType($pInt0)
    {
        $this->m_FormatCondition->setType($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.FormatConditionCollection]
  
 */
class FormatConditionCollection
{
    public $m_FormatConditionCollection;
    
    function __construct($formatConditionCollection)
    {
    	$this->m_FormatConditionCollection = $formatConditionCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.FormatConditionCollection.add(com.aspose.cells.CellArea, int, int, java.lang.String, java.lang.String)]

      @param oCellArea0  com.aspose.cells.CellArea
      @param pInt1  int
      @param pInt2  int
      @param oString3  String
      @param oString4  String
      @return int[]
     */
    function add($oCellArea0, $pInt1, $pInt2, $oString3, $oString4)
    {
        return $this->m_FormatConditionCollection->add(ClassFactory::_t1($oCellArea0), $pInt1, $pInt2, $oString3, $oString4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatConditionCollection.addArea(com.aspose.cells.CellArea)]

      @param oCellArea0  com.aspose.cells.CellArea
      @return int
     */
    function addArea($oCellArea0)
    {
        return $this->m_FormatConditionCollection->addArea(ClassFactory::_t1($oCellArea0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatConditionCollection.addCondition(int)]

      @param pInt0  int
      @return int
     */
    function addConditionI($pInt0)
    {
        return $this->m_FormatConditionCollection->addCondition($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatConditionCollection.addCondition(int, int, java.lang.String, java.lang.String)]

      @param pInt0  int
      @param pInt1  int
      @param oString2  String
      @param oString3  String
      @return int
     */
    function addConditionIISS($pInt0, $pInt1, $oString2, $oString3)
    {
        return $this->m_FormatConditionCollection->addCondition($pInt0, $pInt1, $oString2, $oString3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatConditionCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.FormatCondition
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_FormatConditionCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatConditionCollection.getCellArea(int)]

      @param pInt0  int
      @return com.aspose.cells.CellArea
     */
    function getCellArea($pInt0)
    {
        return ClassFactory::_t2($this->m_FormatConditionCollection->getCellArea($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatConditionCollection.getCount()]

      @return int
     */
    function getCount()
    {
        return $this->m_FormatConditionCollection->getCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatConditionCollection.getRangeCount()]

      @return int
     */
    function getRangeCount()
    {
        return $this->m_FormatConditionCollection->getRangeCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatConditionCollection.removeArea(int)]

      @param pInt0  int
     */
    function removeAreaI($pInt0)
    {
        $this->m_FormatConditionCollection->removeArea($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatConditionCollection.removeArea(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @return boolean
     */
    function removeAreaIIII($pInt0, $pInt1, $pInt2, $pInt3)
    {
        return $this->m_FormatConditionCollection->removeArea($pInt0, $pInt1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.FormatConditionCollection.removeCondition(int)]

      @param pInt0  int
     */
    function removeCondition($pInt0)
    {
        $this->m_FormatConditionCollection->removeCondition($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.FormatConditionType]
  
 */
class FormatConditionType
{
    public $m_FormatConditionType;
    
    function __construct($formatConditionType)
    {
    	$this->m_FormatConditionType = $formatConditionType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.FormatConditionValueType]
  
 */
class FormatConditionValueType
{
    public $m_FormatConditionValueType;
    
    function __construct($formatConditionValueType)
    {
    	$this->m_FormatConditionValueType = $formatConditionValueType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.FormatSetType]
  
 */
class FormatSetType
{
    public $m_FormatSetType;
    
    function __construct($formatSetType)
    {
    	$this->m_FormatSetType = $formatSetType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.FormattingType]
  
 */
class FormattingType
{
    public $m_FormattingType;
    
    function __construct($formattingType)
    {
    	$this->m_FormattingType = $formattingType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.FormulaType]
  
 */
class FormulaType
{
    public $m_FormulaType;
    
    function __construct($formulaType)
    {
    	$this->m_FormulaType = $formulaType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.GlowEffect]
  
 */
class GlowEffect
{
    public $m_GlowEffect;
    
    function __construct($glowEffect)
    {
    	$this->m_GlowEffect = $glowEffect;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.GlowEffect.getCellsColor()]

      @return com.aspose.cells.CellsColor
     */
    function getCellsColor()
    {
        return ClassFactory::_t2($this->m_GlowEffect->getCellsColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.GlowEffect.getRadius()]

      @return double
     */
    function getRadius()
    {
        return $this->m_GlowEffect->getRadius();
    }

    /*
      Wrapper for java version method [com.aspose.cells.GlowEffect.getTransparency()]

      @return double
     */
    function getTransparency()
    {
        return $this->m_GlowEffect->getTransparency();
    }

    /*
      Wrapper for java version method [com.aspose.cells.GlowEffect.setCellsColor(com.aspose.cells.CellsColor)]

      @param oCellsColor0  com.aspose.cells.CellsColor
     */
    function setCellsColor($oCellsColor0)
    {
        $this->m_GlowEffect->setCellsColor(ClassFactory::_t1($oCellsColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.GlowEffect.setRadius(double)]

      @param pDouble0  double
     */
    function setRadius($pDouble0)
    {
        $this->m_GlowEffect->setRadius($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.GlowEffect.setTransparency(double)]

      @param pDouble0  double
     */
    function setTransparency($pDouble0)
    {
        $this->m_GlowEffect->setTransparency($pDouble0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.GradientColorType]
  
 */
class GradientColorType
{
    public $m_GradientColorType;
    
    function __construct($gradientColorType)
    {
    	$this->m_GradientColorType = $gradientColorType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.GradientDirectionType]
  
 */
class GradientDirectionType
{
    public $m_GradientDirectionType;
    
    function __construct($gradientDirectionType)
    {
    	$this->m_GradientDirectionType = $gradientDirectionType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.GradientFill]
  
 */
class GradientFill
{
    public $m_GradientFill;
    
    function __construct($gradientFill)
    {
    	$this->m_GradientFill = $gradientFill;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.GradientFill.getAngle()]

      @return float
     */
    function getAngle()
    {
        return $this->m_GradientFill->getAngle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientFill.getDirectionType()]

      @return int
     */
    function getDirectionType()
    {
        return $this->m_GradientFill->getDirectionType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientFill.getFillType()]

      @return int
     */
    function getFillType()
    {
        return $this->m_GradientFill->getFillType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientFill.getGradientColor1()]

      @return com.aspose.cells.Color
     */
    function getGradientColor1()
    {
        return ClassFactory::_t2($this->m_GradientFill->getGradientColor1());
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientFill.getGradientColor2()]

      @return com.aspose.cells.Color
     */
    function getGradientColor2()
    {
        return ClassFactory::_t2($this->m_GradientFill->getGradientColor2());
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientFill.getGradientColorType()]

      @return int
     */
    function getGradientColorType()
    {
        return $this->m_GradientFill->getGradientColorType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientFill.getGradientDegree()]

      @return double
     */
    function getGradientDegree()
    {
        return $this->m_GradientFill->getGradientDegree();
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientFill.getGradientStops()]

      @return com.aspose.cells.GradientStopCollection
     */
    function getGradientStops()
    {
        return ClassFactory::_t2($this->m_GradientFill->getGradientStops());
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientFill.getGradientStyle()]

      @return int
     */
    function getGradientStyle()
    {
        return $this->m_GradientFill->getGradientStyle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientFill.getPresetColor()]

      @return int
     */
    function getPresetColor()
    {
        return $this->m_GradientFill->getPresetColor();
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientFill.getVariant()]

      @return int
     */
    function getVariant()
    {
        return $this->m_GradientFill->getVariant();
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientFill.setAngle(float)]

      @param pFloat0  float
     */
    function setAngle($pFloat0)
    {
        $this->m_GradientFill->setAngle($pFloat0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientFill.setGradient(int, double, int)]

      @param pInt0  int
      @param pDouble1  double
      @param pInt2  int
     */
    function setGradient($pInt0, $pDouble1, $pInt2)
    {
        $this->m_GradientFill->setGradient($pInt0, $pDouble1, $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientFill.setOneColorGradient(com.aspose.cells.Color, double, int, int)]

      @param oColor0  com.aspose.cells.Color
      @param pDouble1  double
      @param pInt2  int
      @param pInt3  int
     */
    function setOneColorGradient($oColor0, $pDouble1, $pInt2, $pInt3)
    {
        $this->m_GradientFill->setOneColorGradient(ClassFactory::_t1($oColor0), $pDouble1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientFill.setPresetColor(int)]

      @param pInt0  int
     */
    function setPresetColor($pInt0)
    {
        $this->m_GradientFill->setPresetColor($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientFill.setPresetColorGradient(int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
     */
    function setPresetColorGradient($pInt0, $pInt1, $pInt2)
    {
        $this->m_GradientFill->setPresetColorGradient($pInt0, $pInt1, $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientFill.setTwoColorGradient(com.aspose.cells.Color, com.aspose.cells.Color, int, int)]

      @param oColor0  com.aspose.cells.Color
      @param oColor1  com.aspose.cells.Color
      @param pInt2  int
      @param pInt3  int
     */
    function setTwoColorGradientCCII($oColor0, $oColor1, $pInt2, $pInt3)
    {
        $this->m_GradientFill->setTwoColorGradient(ClassFactory::_t1($oColor0), ClassFactory::_t1($oColor1), $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientFill.setTwoColorGradient(com.aspose.cells.Color, double, com.aspose.cells.Color, double, int, int)]

      @param oColor0  com.aspose.cells.Color
      @param pDouble1  double
      @param oColor2  com.aspose.cells.Color
      @param pDouble3  double
      @param pInt4  int
      @param pInt5  int
     */
    function setTwoColorGradientCDCDII($oColor0, $pDouble1, $oColor2, $pDouble3, $pInt4, $pInt5)
    {
        $this->m_GradientFill->setTwoColorGradient(ClassFactory::_t1($oColor0), $pDouble1, ClassFactory::_t1($oColor2), $pDouble3, $pInt4, $pInt5);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.GradientFillType]
  
 */
class GradientFillType
{
    public $m_GradientFillType;
    
    function __construct($gradientFillType)
    {
    	$this->m_GradientFillType = $gradientFillType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.GradientPresetType]
  
 */
class GradientPresetType
{
    public $m_GradientPresetType;
    
    function __construct($gradientPresetType)
    {
    	$this->m_GradientPresetType = $gradientPresetType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.GradientStop]
  
 */
class GradientStop
{
    public $m_GradientStop;
    
    function __construct($gradientStop)
    {
    	$this->m_GradientStop = $gradientStop;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.GradientStop.getCellsColor()]

      @return com.aspose.cells.CellsColor
     */
    function getCellsColor()
    {
        return ClassFactory::_t2($this->m_GradientStop->getCellsColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientStop.getPosition()]

      @return double
     */
    function getPosition()
    {
        return $this->m_GradientStop->getPosition();
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientStop.getTransparency()]

      @return double
     */
    function getTransparency()
    {
        return $this->m_GradientStop->getTransparency();
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientStop.setPosition(double)]

      @param pDouble0  double
     */
    function setPosition($pDouble0)
    {
        $this->m_GradientStop->setPosition($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientStop.setTransparency(double)]

      @param pDouble0  double
     */
    function setTransparency($pDouble0)
    {
        $this->m_GradientStop->setTransparency($pDouble0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.GradientStopCollection]
  
 */
class GradientStopCollection extends CollectionBase
{
    public $m_GradientStopCollection;
    
    function __construct($gradientStopCollection)
    {
    	$this->m_GradientStopCollection = $gradientStopCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.GradientStopCollection.add(double, com.aspose.cells.CellsColor, int)]

      @param pDouble0  double
      @param oCellsColor1  com.aspose.cells.CellsColor
      @param pInt2  int
     */
    function addDCI($pDouble0, $oCellsColor1, $pInt2)
    {
        $this->m_GradientStopCollection->add($pDouble0, ClassFactory::_t1($oCellsColor1), $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientStopCollection.add(double, com.aspose.cells.Color, int)]

      @param pDouble0  double
      @param oColor1  com.aspose.cells.Color
      @param pInt2  int
     */
    function addDCI1($pDouble0, $oColor1, $pInt2)
    {
        $this->m_GradientStopCollection->add($pDouble0, ClassFactory::_t1($oColor1), $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientStopCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.GradientStop
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_GradientStopCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.GradientStopCollection.set(int, com.aspose.cells.GradientStop)]

      @param pInt0  int
      @param oGradientStop1  com.aspose.cells.GradientStop
     */
    function set($pInt0, $oGradientStop1)
    {
        $this->m_GradientStopCollection->set($pInt0, ClassFactory::_t1($oGradientStop1));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.GradientStyleType]
  
 */
class GradientStyleType
{
    public $m_GradientStyleType;
    
    function __construct($gradientStyleType)
    {
    	$this->m_GradientStyleType = $gradientStyleType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.GroupBox]
  
 */
class GroupBox extends Shape
{
    public $m_GroupBox;
    
    function __construct($groupBox)
    {
    	$this->m_GroupBox = $groupBox;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.GroupBox.getShadow()]

      @return boolean
     */
    function getShadow()
    {
        return $this->m_GroupBox->getShadow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.GroupBox.setShadow(boolean)]

      @param pBoolean0  boolean
     */
    function setShadow($pBoolean0)
    {
        $this->m_GroupBox->setShadow($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.GroupShape]
  
 */
class GroupShape extends Shape
{
    public $m_GroupShape;
    
    function __construct($groupShape)
    {
    	$this->m_GroupShape = $groupShape;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.GroupShape.get(int)]

      @param pInt0  int
      @return com.aspose.cells.Shape
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_GroupShape->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.GroupShape.getGroupedShapes()]

      @return com.aspose.cells.Shape[]
     */
    function getGroupedShapes()
    {
        return ClassFactory::_t2($this->m_GroupShape->getGroupedShapes());
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.HeaderFooterCommand]
  
 */
class HeaderFooterCommand
{
    public $m_HeaderFooterCommand;
    
    function __construct($headerFooterCommand)
    {
    	$this->m_HeaderFooterCommand = $headerFooterCommand;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.HeaderFooterCommand.getFont()]

      @return com.aspose.cells.Font
     */
    function getFont()
    {
        return ClassFactory::_t2($this->m_HeaderFooterCommand->getFont());
    }

    /*
      Wrapper for java version method [com.aspose.cells.HeaderFooterCommand.getText()]

      @return String
     */
    function getText()
    {
        return $this->m_HeaderFooterCommand->getText();
    }

    /*
      Wrapper for java version method [com.aspose.cells.HeaderFooterCommand.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_HeaderFooterCommand->getType();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.HeaderFooterCommandType]
  
 */
class HeaderFooterCommandType
{
    public $m_HeaderFooterCommandType;
    
    function __construct($headerFooterCommandType)
    {
    	$this->m_HeaderFooterCommandType = $headerFooterCommandType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.HeaderFooterSectionType]
  
 */
class HeaderFooterSectionType
{
    public $m_HeaderFooterSectionType;
    
    function __construct($headerFooterSectionType)
    {
    	$this->m_HeaderFooterSectionType = $headerFooterSectionType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.HorizontalPageBreak]
  
 */
class HorizontalPageBreak
{
    public $m_HorizontalPageBreak;
    
    function __construct($horizontalPageBreak)
    {
    	$this->m_HorizontalPageBreak = $horizontalPageBreak;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.HorizontalPageBreak.getEndColumn()]

      @return int
     */
    function getEndColumn()
    {
        return $this->m_HorizontalPageBreak->getEndColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.HorizontalPageBreak.getRow()]

      @return int
     */
    function getRow()
    {
        return $this->m_HorizontalPageBreak->getRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.HorizontalPageBreak.getStartColumn()]

      @return int
     */
    function getStartColumn()
    {
        return $this->m_HorizontalPageBreak->getStartColumn();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.HorizontalPageBreakCollection]
  
 */
class HorizontalPageBreakCollection extends CollectionBase
{
    public $m_HorizontalPageBreakCollection;
    
    function __construct($horizontalPageBreakCollection)
    {
    	$this->m_HorizontalPageBreakCollection = $horizontalPageBreakCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.HorizontalPageBreakCollection.add(int)]

      @param pInt0  int
      @return int
     */
    function addI($pInt0)
    {
        return $this->m_HorizontalPageBreakCollection->add($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HorizontalPageBreakCollection.add(java.lang.String)]

      @param oString0  String
      @return int
     */
    function addS($oString0)
    {
        return $this->m_HorizontalPageBreakCollection->add($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HorizontalPageBreakCollection.add(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return int
     */
    function addII($pInt0, $pInt1)
    {
        return $this->m_HorizontalPageBreakCollection->add($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HorizontalPageBreakCollection.add(int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @return int
     */
    function addIII($pInt0, $pInt1, $pInt2)
    {
        return $this->m_HorizontalPageBreakCollection->add($pInt0, $pInt1, $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HorizontalPageBreakCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.HorizontalPageBreak
     */
    function getI($pInt0)
    {
        return ClassFactory::_t2($this->m_HorizontalPageBreakCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.HorizontalPageBreakCollection.get(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.HorizontalPageBreak
     */
    function getS($oString0)
    {
        return ClassFactory::_t2($this->m_HorizontalPageBreakCollection->get($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.HorizontalPageBreakCollection.removeAt(int)]

      @param pInt0  int
     */
    function removeAt($pInt0)
    {
        $this->m_HorizontalPageBreakCollection->removeAt($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.HtmlCrossType]
  
 */
class HtmlCrossType
{
    public $m_HtmlCrossType;
    
    function __construct($htmlCrossType)
    {
    	$this->m_HtmlCrossType = $htmlCrossType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.HtmlHiddenColDisplayType]
  
 */
class HtmlHiddenColDisplayType
{
    public $m_HtmlHiddenColDisplayType;
    
    function __construct($htmlHiddenColDisplayType)
    {
    	$this->m_HtmlHiddenColDisplayType = $htmlHiddenColDisplayType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.HtmlHiddenRowDisplayType]
  
 */
class HtmlHiddenRowDisplayType
{
    public $m_HtmlHiddenRowDisplayType;
    
    function __construct($htmlHiddenRowDisplayType)
    {
    	$this->m_HtmlHiddenRowDisplayType = $htmlHiddenRowDisplayType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.HTMLLoadOptions]
  
 */
class HTMLLoadOptions extends LoadOptions
{
    public $m_HTMLLoadOptions;
    
    function __construct($hTMLLoadOptions)
    {
    	$this->m_HTMLLoadOptions = $hTMLLoadOptions;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.HTMLLoadOptions.getAttachedFilesDirectory()]

      @return String
     */
    function getAttachedFilesDirectory()
    {
        return $this->m_HTMLLoadOptions->getAttachedFilesDirectory();
    }

    /*
      Wrapper for java version method [com.aspose.cells.HTMLLoadOptions.getConvertDateTimeData()]

      @return boolean
     */
    function getConvertDateTimeData()
    {
        return $this->m_HTMLLoadOptions->getConvertDateTimeData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.HTMLLoadOptions.getConvertFormulasData()]

      @return boolean
     */
    function getConvertFormulasData()
    {
        return $this->m_HTMLLoadOptions->getConvertFormulasData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.HTMLLoadOptions.getConvertNumericData()]

      @return boolean
     */
    function getConvertNumericData()
    {
        return $this->m_HTMLLoadOptions->getConvertNumericData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.HTMLLoadOptions.getEncoding()]

      @return com.aspose.cells.Encoding
     */
    function getEncoding()
    {
        return ClassFactory::_t2($this->m_HTMLLoadOptions->getEncoding());
    }

    /*
      Wrapper for java version method [com.aspose.cells.HTMLLoadOptions.getLoadFormulas()]

      @return boolean
     */
    function getLoadFormulas()
    {
        return $this->m_HTMLLoadOptions->getLoadFormulas();
    }

    /*
      Wrapper for java version method [com.aspose.cells.HTMLLoadOptions.setAttachedFilesDirectory(java.lang.String)]

      @param oString0  String
     */
    function setAttachedFilesDirectory($oString0)
    {
        $this->m_HTMLLoadOptions->setAttachedFilesDirectory($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HTMLLoadOptions.setConvertDateTimeData(boolean)]

      @param pBoolean0  boolean
     */
    function setConvertDateTimeData($pBoolean0)
    {
        $this->m_HTMLLoadOptions->setConvertDateTimeData($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HTMLLoadOptions.setConvertFormulasData(boolean)]

      @param pBoolean0  boolean
     */
    function setConvertFormulasData($pBoolean0)
    {
        $this->m_HTMLLoadOptions->setConvertFormulasData($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HTMLLoadOptions.setConvertNumericData(boolean)]

      @param pBoolean0  boolean
     */
    function setConvertNumericData($pBoolean0)
    {
        $this->m_HTMLLoadOptions->setConvertNumericData($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HTMLLoadOptions.setEncoding(com.aspose.cells.Encoding)]

      @param oEncoding0  com.aspose.cells.Encoding
     */
    function setEncoding($oEncoding0)
    {
        $this->m_HTMLLoadOptions->setEncoding(ClassFactory::_t1($oEncoding0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.HTMLLoadOptions.setLoadFormulas(boolean)]

      @param pBoolean0  boolean
     */
    function setLoadFormulas($pBoolean0)
    {
        $this->m_HTMLLoadOptions->setLoadFormulas($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.HtmlSaveOptions]
  
 */
class HtmlSaveOptions extends SaveOptions
{
    public $m_HtmlSaveOptions;
    
    function __construct($htmlSaveOptions)
    {
    	$this->m_HtmlSaveOptions = $htmlSaveOptions;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.getAttachedFilesDirectory()]

      @return String
     */
    function getAttachedFilesDirectory()
    {
        return $this->m_HtmlSaveOptions->getAttachedFilesDirectory();
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.getAttachedFilesUrlPrefix()]

      @return String
     */
    function getAttachedFilesUrlPrefix()
    {
        return $this->m_HtmlSaveOptions->getAttachedFilesUrlPrefix();
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.getDisplayHTMLCrossString()]

      @return boolean
     */
    function getDisplayHTMLCrossString()
    {
        return $this->m_HtmlSaveOptions->getDisplayHTMLCrossString();
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.getEncoding()]

      @return com.aspose.cells.Encoding
     */
    function getEncoding()
    {
        return ClassFactory::_t2($this->m_HtmlSaveOptions->getEncoding());
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.getExportActiveWorksheetOnly()]

      @return boolean
     */
    function getExportActiveWorksheetOnly()
    {
        return $this->m_HtmlSaveOptions->getExportActiveWorksheetOnly();
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.getExportChartImageFormat()]

      @return com.aspose.cells.ImageFormat
     */
    function getExportChartImageFormat()
    {
        return ClassFactory::_t2($this->m_HtmlSaveOptions->getExportChartImageFormat());
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.getExportHiddenWorksheet()]

      @return boolean
     */
    function getExportHiddenWorksheet()
    {
        return $this->m_HtmlSaveOptions->getExportHiddenWorksheet();
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.getExportImagesAsBase64()]

      @return boolean
     */
    function getExportImagesAsBase64()
    {
        return $this->m_HtmlSaveOptions->getExportImagesAsBase64();
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.getExportObjectListener()]

      @return com.aspose.cells.IExportObjectListener
     */
    function getExportObjectListener()
    {
        return ClassFactory::_t2($this->m_HtmlSaveOptions->getExportObjectListener());
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.getHiddenColDisplayType()]

      @return int
     */
    function getHiddenColDisplayType()
    {
        return $this->m_HtmlSaveOptions->getHiddenColDisplayType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.getHiddenRowDisplayType()]

      @return int
     */
    function getHiddenRowDisplayType()
    {
        return $this->m_HtmlSaveOptions->getHiddenRowDisplayType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.getHtmlCrossStringType()]

      @return int
     */
    function getHtmlCrossStringType()
    {
        return $this->m_HtmlSaveOptions->getHtmlCrossStringType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.getImageOptions()]

      @return com.aspose.cells.ImageOrPrintOptions
     */
    function getImageOptions()
    {
        return ClassFactory::_t2($this->m_HtmlSaveOptions->getImageOptions());
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.getPageTitle()]

      @return String
     */
    function getPageTitle()
    {
        return $this->m_HtmlSaveOptions->getPageTitle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.getParseHtmlTagInCell()]

      @return boolean
     */
    function getParseHtmlTagInCell()
    {
        return $this->m_HtmlSaveOptions->getParseHtmlTagInCell();
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.getPresentationPreference()]

      @return boolean
     */
    function getPresentationPreference()
    {
        return $this->m_HtmlSaveOptions->getPresentationPreference();
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.getStreamProvider()]

      @return com.aspose.cells.IStreamProvider
     */
    function getStreamProvider()
    {
        return ClassFactory::_t2($this->m_HtmlSaveOptions->getStreamProvider());
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.isExpImageToTempDir()]

      @return boolean
     */
    function isExpImageToTempDir()
    {
        return $this->m_HtmlSaveOptions->isExpImageToTempDir();
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.setAttachedFilesDirectory(java.lang.String)]

      @param oString0  String
     */
    function setAttachedFilesDirectory($oString0)
    {
        $this->m_HtmlSaveOptions->setAttachedFilesDirectory($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.setAttachedFilesUrlPrefix(java.lang.String)]

      @param oString0  String
     */
    function setAttachedFilesUrlPrefix($oString0)
    {
        $this->m_HtmlSaveOptions->setAttachedFilesUrlPrefix($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.setDisplayHTMLCrossString(boolean)]

      @param pBoolean0  boolean
     */
    function setDisplayHTMLCrossString($pBoolean0)
    {
        $this->m_HtmlSaveOptions->setDisplayHTMLCrossString($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.setEncoding(com.aspose.cells.Encoding)]

      @param oEncoding0  com.aspose.cells.Encoding
     */
    function setEncoding($oEncoding0)
    {
        $this->m_HtmlSaveOptions->setEncoding(ClassFactory::_t1($oEncoding0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.setExpImageToTempDir(boolean)]

      @param pBoolean0  boolean
     */
    function setExpImageToTempDir($pBoolean0)
    {
        $this->m_HtmlSaveOptions->setExpImageToTempDir($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.setExportActiveWorksheetOnly(boolean)]

      @param pBoolean0  boolean
     */
    function setExportActiveWorksheetOnly($pBoolean0)
    {
        $this->m_HtmlSaveOptions->setExportActiveWorksheetOnly($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.setExportChartImageFormat(com.aspose.cells.ImageFormat)]

      @param oImageFormat0  com.aspose.cells.ImageFormat
     */
    function setExportChartImageFormat($oImageFormat0)
    {
        $this->m_HtmlSaveOptions->setExportChartImageFormat(ClassFactory::_t1($oImageFormat0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.setExportHiddenWorksheet(boolean)]

      @param pBoolean0  boolean
     */
    function setExportHiddenWorksheet($pBoolean0)
    {
        $this->m_HtmlSaveOptions->setExportHiddenWorksheet($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.setExportImagesAsBase64(boolean)]

      @param pBoolean0  boolean
     */
    function setExportImagesAsBase64($pBoolean0)
    {
        $this->m_HtmlSaveOptions->setExportImagesAsBase64($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.setExportObjectListener(com.aspose.cells.IExportObjectListener)]

      @param oIExportObjectListener0  com.aspose.cells.IExportObjectListener
     */
    function setExportObjectListener($oIExportObjectListener0)
    {
        $this->m_HtmlSaveOptions->setExportObjectListener(ClassFactory::_t1($oIExportObjectListener0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.setHiddenColDisplayType(int)]

      @param pInt0  int
     */
    function setHiddenColDisplayType($pInt0)
    {
        $this->m_HtmlSaveOptions->setHiddenColDisplayType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.setHiddenRowDisplayType(int)]

      @param pInt0  int
     */
    function setHiddenRowDisplayType($pInt0)
    {
        $this->m_HtmlSaveOptions->setHiddenRowDisplayType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.setHtmlCrossStringType(int)]

      @param pInt0  int
     */
    function setHtmlCrossStringType($pInt0)
    {
        $this->m_HtmlSaveOptions->setHtmlCrossStringType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.setPageTitle(java.lang.String)]

      @param oString0  String
     */
    function setPageTitle($oString0)
    {
        $this->m_HtmlSaveOptions->setPageTitle($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.setParseHtmlTagInCell(boolean)]

      @param pBoolean0  boolean
     */
    function setParseHtmlTagInCell($pBoolean0)
    {
        $this->m_HtmlSaveOptions->setParseHtmlTagInCell($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.setPresentationPreference(boolean)]

      @param pBoolean0  boolean
     */
    function setPresentationPreference($pBoolean0)
    {
        $this->m_HtmlSaveOptions->setPresentationPreference($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HtmlSaveOptions.setStreamProvider(com.aspose.cells.IStreamProvider)]

      @param oIStreamProvider0  com.aspose.cells.IStreamProvider
     */
    function setStreamProvider($oIStreamProvider0)
    {
        $this->m_HtmlSaveOptions->setStreamProvider(ClassFactory::_t1($oIStreamProvider0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.Hyperlink]
  
 */
class Hyperlink
{
    public $m_Hyperlink;
    
    function __construct($hyperlink)
    {
    	$this->m_Hyperlink = $hyperlink;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Hyperlink.getAddress()]

      @return String
     */
    function getAddress()
    {
        return $this->m_Hyperlink->getAddress();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Hyperlink.getArea()]

      @return com.aspose.cells.CellArea
     */
    function getArea()
    {
        return ClassFactory::_t2($this->m_Hyperlink->getArea());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Hyperlink.getScreenTip()]

      @return String
     */
    function getScreenTip()
    {
        return $this->m_Hyperlink->getScreenTip();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Hyperlink.getTextToDisplay()]

      @return String
     */
    function getTextToDisplay()
    {
        return $this->m_Hyperlink->getTextToDisplay();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Hyperlink.setAddress(java.lang.String)]

      @param oString0  String
     */
    function setAddress($oString0)
    {
        $this->m_Hyperlink->setAddress($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Hyperlink.setScreenTip(java.lang.String)]

      @param oString0  String
     */
    function setScreenTip($oString0)
    {
        $this->m_Hyperlink->setScreenTip($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Hyperlink.setTextToDisplay(java.lang.String)]

      @param oString0  String
     */
    function setTextToDisplay($oString0)
    {
        $this->m_Hyperlink->setTextToDisplay($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.HyperlinkCollection]
  
 */
class HyperlinkCollection extends CollectionBase
{
    public $m_HyperlinkCollection;
    
    function __construct($hyperlinkCollection)
    {
    	$this->m_HyperlinkCollection = $hyperlinkCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.HyperlinkCollection.add(java.lang.String, int, int, java.lang.String)]

      @param oString0  String
      @param pInt1  int
      @param pInt2  int
      @param oString3  String
      @return int
     */
    function addSIIS($oString0, $pInt1, $pInt2, $oString3)
    {
        return $this->m_HyperlinkCollection->add($oString0, $pInt1, $pInt2, $oString3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HyperlinkCollection.add(int, int, int, int, java.lang.String)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param oString4  String
      @return int
     */
    function addIIIIS($pInt0, $pInt1, $pInt2, $pInt3, $oString4)
    {
        return $this->m_HyperlinkCollection->add($pInt0, $pInt1, $pInt2, $pInt3, $oString4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HyperlinkCollection.add(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)]

      @param oString0  String
      @param oString1  String
      @param oString2  String
      @param oString3  String
      @param oString4  String
      @return int
     */
    function addSSSSS($oString0, $oString1, $oString2, $oString3, $oString4)
    {
        return $this->m_HyperlinkCollection->add($oString0, $oString1, $oString2, $oString3, $oString4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.HyperlinkCollection.clear()]

     */
    function clear()
    {
        $this->m_HyperlinkCollection->clear();
    }

    /*
      Wrapper for java version method [com.aspose.cells.HyperlinkCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.Hyperlink
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_HyperlinkCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.HyperlinkCollection.removeAt(int)]

      @param pInt0  int
     */
    function removeAt($pInt0)
    {
        $this->m_HyperlinkCollection->removeAt($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ICellsDataTable]
  
 */
class ICellsDataTable
{
    public $m_ICellsDataTable;
    
    function __construct($iCellsDataTable)
    {
    	$this->m_ICellsDataTable = $iCellsDataTable;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ICellsDataTable.beforeFirst()]

     */
    function beforeFirst()
    {
        $this->m_ICellsDataTable->beforeFirst();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ICellsDataTable.get(int)]

      @param pInt0  int
      @return corresponding java type is {java.lang.Object}
     */
    function getI($pInt0)
    {
        return ClassFactory::_t2($this->m_ICellsDataTable->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ICellsDataTable.get(java.lang.String)]

      @param oString0  String
      @return corresponding java type is {java.lang.Object}
     */
    function getS($oString0)
    {
        return ClassFactory::_t2($this->m_ICellsDataTable->get($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ICellsDataTable.getColumns()]

      @return array, corresponding java type is {String[]}
     */
    function getColumns()
    {
        return $this->m_ICellsDataTable->getColumns();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ICellsDataTable.getCount()]

      @return int
     */
    function getCount()
    {
        return $this->m_ICellsDataTable->getCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ICellsDataTable.next()]

      @return boolean
     */
    function next()
    {
        return $this->m_ICellsDataTable->next();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.IconFilter]
  
 */
class IconFilter
{
    public $m_IconFilter;
    
    function __construct($iconFilter)
    {
    	$this->m_IconFilter = $iconFilter;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.IconFilter.getIconId()]

      @return int
     */
    function getIconId()
    {
        return $this->m_IconFilter->getIconId();
    }

    /*
      Wrapper for java version method [com.aspose.cells.IconFilter.getIconSetType()]

      @return int
     */
    function getIconSetType()
    {
        return $this->m_IconFilter->getIconSetType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.IconFilter.setIconId(int)]

      @param pInt0  int
     */
    function setIconId($pInt0)
    {
        $this->m_IconFilter->setIconId($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.IconFilter.setIconSetType(int)]

      @param pInt0  int
     */
    function setIconSetType($pInt0)
    {
        $this->m_IconFilter->setIconSetType($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.IconSet]
  
 */
class IconSet
{
    public $m_IconSet;
    
    function __construct($iconSet)
    {
    	$this->m_IconSet = $iconSet;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.IconSet.getCfIcons()]

      @return com.aspose.cells.ConditionalFormattingIconCollection
     */
    function getCfIcons()
    {
        return ClassFactory::_t2($this->m_IconSet->getCfIcons());
    }

    /*
      Wrapper for java version method [com.aspose.cells.IconSet.getCfvos()]

      @return com.aspose.cells.ConditionalFormattingValueCollection
     */
    function getCfvos()
    {
        return ClassFactory::_t2($this->m_IconSet->getCfvos());
    }

    /*
      Wrapper for java version method [com.aspose.cells.IconSet.getReverse()]

      @return boolean
     */
    function getReverse()
    {
        return $this->m_IconSet->getReverse();
    }

    /*
      Wrapper for java version method [com.aspose.cells.IconSet.getShowValue()]

      @return boolean
     */
    function getShowValue()
    {
        return $this->m_IconSet->getShowValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.IconSet.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_IconSet->getType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.IconSet.isCustom()]

      @return boolean
     */
    function isCustom()
    {
        return $this->m_IconSet->isCustom();
    }

    /*
      Wrapper for java version method [com.aspose.cells.IconSet.setReverse(boolean)]

      @param pBoolean0  boolean
     */
    function setReverse($pBoolean0)
    {
        $this->m_IconSet->setReverse($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.IconSet.setShowValue(boolean)]

      @param pBoolean0  boolean
     */
    function setShowValue($pBoolean0)
    {
        $this->m_IconSet->setShowValue($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.IconSet.setType(int)]

      @param pInt0  int
     */
    function setType($pInt0)
    {
        $this->m_IconSet->setType($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.IconSetType]
  
 */
class IconSetType
{
    public $m_IconSetType;
    
    function __construct($iconSetType)
    {
    	$this->m_IconSetType = $iconSetType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.ICustomFunction]
  
 */
class ICustomFunction
{
    public $m_ICustomFunction;
    
    function __construct($iCustomFunction)
    {
    	$this->m_ICustomFunction = $iCustomFunction;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ICustomFunction.calculateCustomFunction(java.lang.String, java.util.ArrayList, java.util.ArrayList)]

      @param oString0  String
      @param arrA1DFromArrayList1  array, corresponding java type is {java.util.ArrayList}
      @param arrA1DFromArrayList2  array, corresponding java type is {java.util.ArrayList}
      @return corresponding java type is {java.lang.Object}
     */
    function calculateCustomFunction($oString0, $arrA1DFromArrayList1, $arrA1DFromArrayList2)
    {
        return ClassFactory::_t2($this->m_ICustomFunction->calculateCustomFunction($oString0, ClassFactory::_t1($arrA1DFromArrayList1), ClassFactory::_t1($arrA1DFromArrayList2)));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ICustomParser]
  
 */
class ICustomParser
{
    public $m_ICustomParser;
    
    function __construct($iCustomParser)
    {
    	$this->m_ICustomParser = $iCustomParser;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ICustomParser.getFormat()]

      @return String
     */
    function getFormat()
    {
        return $this->m_ICustomParser->getFormat();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ICustomParser.parseObject(java.lang.String)]

      @param oString0  String
      @return corresponding java type is {java.lang.Object}
     */
    function parseObject($oString0)
    {
        return ClassFactory::_t2($this->m_ICustomParser->parseObject($oString0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.IExportObjectListener]
  
 */
class IExportObjectListener
{
    public $m_IExportObjectListener;
    
    function __construct($iExportObjectListener)
    {
    	$this->m_IExportObjectListener = $iExportObjectListener;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.IExportObjectListener.exportObject(com.aspose.cells.ExportObjectEvent)]

      @param oExportObjectEvent0  com.aspose.cells.ExportObjectEvent
      @return corresponding java type is {java.lang.Object}
     */
    function exportObject($oExportObjectEvent0)
    {
        return ClassFactory::_t2($this->m_IExportObjectListener->exportObject(ClassFactory::_t1($oExportObjectEvent0)));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ImageFormat]
  
 */
class ImageFormat
{
    public $m_ImageFormat;
    
    function __construct($imageFormat)
    {
    	$this->m_ImageFormat = $imageFormat;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ImageFormat.equals(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
      @return boolean
     */
    function equals($oObject0)
    {
        return $this->m_ImageFormat->equals(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageFormat.getBmp()]

      @return com.aspose.cells.ImageFormat
     */
    function getBmp()
    {
        return ClassFactory::_t2($this->m_ImageFormat->getBmp());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageFormat.getEmf()]

      @return com.aspose.cells.ImageFormat
     */
    function getEmf()
    {
        return ClassFactory::_t2($this->m_ImageFormat->getEmf());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageFormat.getExif()]

      @return com.aspose.cells.ImageFormat
     */
    function getExif()
    {
        return ClassFactory::_t2($this->m_ImageFormat->getExif());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageFormat.getGif()]

      @return com.aspose.cells.ImageFormat
     */
    function getGif()
    {
        return ClassFactory::_t2($this->m_ImageFormat->getGif());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageFormat.getIcon()]

      @return com.aspose.cells.ImageFormat
     */
    function getIcon()
    {
        return ClassFactory::_t2($this->m_ImageFormat->getIcon());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageFormat.getImageFormatFromSuffixName(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.ImageFormat
     */
    function getImageFormatFromSuffixName($oString0)
    {
        return ClassFactory::_t2($this->m_ImageFormat->getImageFormatFromSuffixName($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageFormat.getJpeg()]

      @return com.aspose.cells.ImageFormat
     */
    function getJpeg()
    {
        return ClassFactory::_t2($this->m_ImageFormat->getJpeg());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageFormat.getMemoryBmp()]

      @return com.aspose.cells.ImageFormat
     */
    function getMemoryBmp()
    {
        return ClassFactory::_t2($this->m_ImageFormat->getMemoryBmp());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageFormat.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_ImageFormat->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageFormat.getPng()]

      @return com.aspose.cells.ImageFormat
     */
    function getPng()
    {
        return ClassFactory::_t2($this->m_ImageFormat->getPng());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageFormat.getTiff()]

      @return com.aspose.cells.ImageFormat
     */
    function getTiff()
    {
        return ClassFactory::_t2($this->m_ImageFormat->getTiff());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageFormat.getWmf()]

      @return com.aspose.cells.ImageFormat
     */
    function getWmf()
    {
        return ClassFactory::_t2($this->m_ImageFormat->getWmf());
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ImageOrPrintOptions]
  
 */
class ImageOrPrintOptions
{
    public $m_ImageOrPrintOptions;
    
    function __construct($imageOrPrintOptions)
    {
    	$this->m_ImageOrPrintOptions = $imageOrPrintOptions;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.getAllColumnsInOnePagePerSheet()]

      @return boolean
     */
    function getAllColumnsInOnePagePerSheet()
    {
        return $this->m_ImageOrPrintOptions->getAllColumnsInOnePagePerSheet();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.getChartImageType()]

      @return com.aspose.cells.ImageFormat
     */
    function getChartImageType()
    {
        return ClassFactory::_t2($this->m_ImageOrPrintOptions->getChartImageType());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.getDrawObjectEventHandler()]

      @return com.aspose.cells.DrawObjectEventHandler
     */
    function getDrawObjectEventHandler()
    {
        return ClassFactory::_t2($this->m_ImageOrPrintOptions->getDrawObjectEventHandler());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.getEmbededImageNameInSvg()]

      @return String
     */
    function getEmbededImageNameInSvg()
    {
        return $this->m_ImageOrPrintOptions->getEmbededImageNameInSvg();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.getHorizontalResolution()]

      @return int
     */
    function getHorizontalResolution()
    {
        return $this->m_ImageOrPrintOptions->getHorizontalResolution();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.getImageFormat()]

      @return com.aspose.cells.ImageFormat
     */
    function getImageFormat()
    {
        return ClassFactory::_t2($this->m_ImageOrPrintOptions->getImageFormat());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.getOnePagePerSheet()]

      @return boolean
     */
    function getOnePagePerSheet()
    {
        return $this->m_ImageOrPrintOptions->getOnePagePerSheet();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.getOnlyArea()]

      @return boolean
     */
    function getOnlyArea()
    {
        return $this->m_ImageOrPrintOptions->getOnlyArea();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.getPrintWithStatusDialog()]

      @return boolean
     */
    function getPrintWithStatusDialog()
    {
        return $this->m_ImageOrPrintOptions->getPrintWithStatusDialog();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.getPrintingPage()]

      @return int
     */
    function getPrintingPage()
    {
        return $this->m_ImageOrPrintOptions->getPrintingPage();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.getQuality()]

      @return int
     */
    function getQuality()
    {
        return $this->m_ImageOrPrintOptions->getQuality();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.getSaveFormat()]

      @return int
     */
    function getSaveFormat()
    {
        return $this->m_ImageOrPrintOptions->getSaveFormat();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.getTiffCompression()]

      @return int
     */
    function getTiffCompression()
    {
        return $this->m_ImageOrPrintOptions->getTiffCompression();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.getTiffPhotometricInterpretation()]

      @return int
     */
    function getTiffPhotometricInterpretation()
    {
        return $this->m_ImageOrPrintOptions->getTiffPhotometricInterpretation();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.getTransparent()]

      @return boolean
     */
    function getTransparent()
    {
        return $this->m_ImageOrPrintOptions->getTransparent();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.getVerticalResolution()]

      @return int
     */
    function getVerticalResolution()
    {
        return $this->m_ImageOrPrintOptions->getVerticalResolution();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.getWarningCallback()]

      @return com.aspose.cells.IWarningCallback
     */
    function getWarningCallback()
    {
        return ClassFactory::_t2($this->m_ImageOrPrintOptions->getWarningCallback());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.isCellAutoFit()]

      @return boolean
     */
    function isCellAutoFit()
    {
        return $this->m_ImageOrPrintOptions->isCellAutoFit();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.isImageFitToPage()]

      @return boolean
     */
    function isImageFitToPage()
    {
        return $this->m_ImageOrPrintOptions->isImageFitToPage();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.setAllColumnsInOnePagePerSheet(boolean)]

      @param pBoolean0  boolean
     */
    function setAllColumnsInOnePagePerSheet($pBoolean0)
    {
        $this->m_ImageOrPrintOptions->setAllColumnsInOnePagePerSheet($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.setCellAutoFit(boolean)]

      @param pBoolean0  boolean
     */
    function setCellAutoFit($pBoolean0)
    {
        $this->m_ImageOrPrintOptions->setCellAutoFit($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.setChartImageType(com.aspose.cells.ImageFormat)]

      @param oImageFormat0  com.aspose.cells.ImageFormat
     */
    function setChartImageType($oImageFormat0)
    {
        $this->m_ImageOrPrintOptions->setChartImageType(ClassFactory::_t1($oImageFormat0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.setDrawObjectEventHandler(com.aspose.cells.DrawObjectEventHandler)]

      @param oDrawObjectEventHandler0  com.aspose.cells.DrawObjectEventHandler
     */
    function setDrawObjectEventHandler($oDrawObjectEventHandler0)
    {
        $this->m_ImageOrPrintOptions->setDrawObjectEventHandler(ClassFactory::_t1($oDrawObjectEventHandler0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.setEmbededImageNameInSvg(java.lang.String)]

      @param oString0  String
     */
    function setEmbededImageNameInSvg($oString0)
    {
        $this->m_ImageOrPrintOptions->setEmbededImageNameInSvg($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.setHorizontalResolution(int)]

      @param pInt0  int
     */
    function setHorizontalResolution($pInt0)
    {
        $this->m_ImageOrPrintOptions->setHorizontalResolution($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.setImageFitToPage(boolean)]

      @param pBoolean0  boolean
     */
    function setImageFitToPage($pBoolean0)
    {
        $this->m_ImageOrPrintOptions->setImageFitToPage($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.setImageFormat(com.aspose.cells.ImageFormat)]

      @param oImageFormat0  com.aspose.cells.ImageFormat
     */
    function setImageFormat($oImageFormat0)
    {
        $this->m_ImageOrPrintOptions->setImageFormat(ClassFactory::_t1($oImageFormat0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.setOnePagePerSheet(boolean)]

      @param pBoolean0  boolean
     */
    function setOnePagePerSheet($pBoolean0)
    {
        $this->m_ImageOrPrintOptions->setOnePagePerSheet($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.setOnlyArea(boolean)]

      @param pBoolean0  boolean
     */
    function setOnlyArea($pBoolean0)
    {
        $this->m_ImageOrPrintOptions->setOnlyArea($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.setPrintWithStatusDialog(boolean)]

      @param pBoolean0  boolean
     */
    function setPrintWithStatusDialog($pBoolean0)
    {
        $this->m_ImageOrPrintOptions->setPrintWithStatusDialog($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.setPrintingPage(int)]

      @param pInt0  int
     */
    function setPrintingPage($pInt0)
    {
        $this->m_ImageOrPrintOptions->setPrintingPage($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.setQuality(int)]

      @param pInt0  int
     */
    function setQuality($pInt0)
    {
        $this->m_ImageOrPrintOptions->setQuality($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.setRenderingHint(java.awt.RenderingHints$Key, java.lang.Object)]

      @param oKey0  corresponding java type is {java.awt.RenderingHints$Key}
      @param oObject1  corresponding java type is {java.lang.Object}
     */
    function setRenderingHint($oKey0, $oObject1)
    {
        $this->m_ImageOrPrintOptions->setRenderingHint(ClassFactory::_t1($oKey0), ClassFactory::_t1($oObject1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.setSaveFormat(int)]

      @param pInt0  int
     */
    function setSaveFormat($pInt0)
    {
        $this->m_ImageOrPrintOptions->setSaveFormat($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.setTiffCompression(int)]

      @param pInt0  int
     */
    function setTiffCompression($pInt0)
    {
        $this->m_ImageOrPrintOptions->setTiffCompression($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.setTiffPhotometricInterpretation(int)]

      @param pInt0  int
     */
    function setTiffPhotometricInterpretation($pInt0)
    {
        $this->m_ImageOrPrintOptions->setTiffPhotometricInterpretation($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.setTransparent(boolean)]

      @param pBoolean0  boolean
     */
    function setTransparent($pBoolean0)
    {
        $this->m_ImageOrPrintOptions->setTransparent($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.setVerticalResolution(int)]

      @param pInt0  int
     */
    function setVerticalResolution($pInt0)
    {
        $this->m_ImageOrPrintOptions->setVerticalResolution($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImageOrPrintOptions.setWarningCallback(com.aspose.cells.IWarningCallback)]

      @param oIWarningCallback0  com.aspose.cells.IWarningCallback
     */
    function setWarningCallback($oIWarningCallback0)
    {
        $this->m_ImageOrPrintOptions->setWarningCallback(ClassFactory::_t1($oIWarningCallback0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ImageSaveOptions]
  
 */
class ImageSaveOptions extends SaveOptions
{
    public $m_ImageSaveOptions;
    
    function __construct($imageSaveOptions)
    {
    	$this->m_ImageSaveOptions = $imageSaveOptions;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ImageSaveOptions.getImageOrPrintOptions()]

      @return com.aspose.cells.ImageOrPrintOptions
     */
    function getImageOrPrintOptions()
    {
        return ClassFactory::_t2($this->m_ImageSaveOptions->getImageOrPrintOptions());
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ImportTableOptions]
  
 */
class ImportTableOptions
{
    public $m_ImportTableOptions;
    
    function __construct($importTableOptions)
    {
    	$this->m_ImportTableOptions = $importTableOptions;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ImportTableOptions.getColumnIndexes()]

      @return int[]
     */
    function getColumnIndexes()
    {
        return $this->m_ImportTableOptions->getColumnIndexes();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImportTableOptions.getConvertNumericData()]

      @return boolean
     */
    function getConvertNumericData()
    {
        return $this->m_ImportTableOptions->getConvertNumericData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImportTableOptions.getDateFormat()]

      @return String
     */
    function getDateFormat()
    {
        return $this->m_ImportTableOptions->getDateFormat();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImportTableOptions.getDefaultValues()]

      @return array, corresponding java type is {java.lang.Object[]}
     */
    function getDefaultValues()
    {
        return ClassFactory::_t2($this->m_ImportTableOptions->getDefaultValues());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImportTableOptions.getInsertRows()]

      @return boolean
     */
    function getInsertRows()
    {
        return $this->m_ImportTableOptions->getInsertRows();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImportTableOptions.getNumberFormats()]

      @return array, corresponding java type is {String[]}
     */
    function getNumberFormats()
    {
        return $this->m_ImportTableOptions->getNumberFormats();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImportTableOptions.getTotalColumns()]

      @return int
     */
    function getTotalColumns()
    {
        return $this->m_ImportTableOptions->getTotalColumns();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImportTableOptions.getTotalRows()]

      @return int
     */
    function getTotalRows()
    {
        return $this->m_ImportTableOptions->getTotalRows();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImportTableOptions.isFieldNameShown()]

      @return boolean
     */
    function isFieldNameShown()
    {
        return $this->m_ImportTableOptions->isFieldNameShown();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImportTableOptions.setColumnIndexes(int[])]

      @param arrP1DInt0  int[]
     */
    function setColumnIndexes($arrP1DInt0)
    {
        $this->m_ImportTableOptions->setColumnIndexes($arrP1DInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImportTableOptions.setConvertNumericData(boolean)]

      @param pBoolean0  boolean
     */
    function setConvertNumericData($pBoolean0)
    {
        $this->m_ImportTableOptions->setConvertNumericData($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImportTableOptions.setDateFormat(java.lang.String)]

      @param oString0  String
     */
    function setDateFormat($oString0)
    {
        $this->m_ImportTableOptions->setDateFormat($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImportTableOptions.setDefaultValues(java.lang.Object[])]

      @param arrO1DObject0  array, corresponding java type is {java.lang.Object[]}
     */
    function setDefaultValues($arrO1DObject0)
    {
        $this->m_ImportTableOptions->setDefaultValues(ClassFactory::_t1($arrO1DObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImportTableOptions.setFieldNameShown(boolean)]

      @param pBoolean0  boolean
     */
    function setFieldNameShown($pBoolean0)
    {
        $this->m_ImportTableOptions->setFieldNameShown($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImportTableOptions.setInsertRows(boolean)]

      @param pBoolean0  boolean
     */
    function setInsertRows($pBoolean0)
    {
        $this->m_ImportTableOptions->setInsertRows($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImportTableOptions.setNumberFormats(java.lang.String[])]

      @param arrD1DString0  array, corresponding java type is {String[]}
     */
    function setNumberFormats($arrD1DString0)
    {
        $this->m_ImportTableOptions->setNumberFormats($arrD1DString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImportTableOptions.setTotalColumns(int)]

      @param pInt0  int
     */
    function setTotalColumns($pInt0)
    {
        $this->m_ImportTableOptions->setTotalColumns($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ImportTableOptions.setTotalRows(int)]

      @param pInt0  int
     */
    function setTotalRows($pInt0)
    {
        $this->m_ImportTableOptions->setTotalRows($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.InterruptMonitor]
  
 */
class InterruptMonitor
{
    public $m_InterruptMonitor;
    
    function __construct($interruptMonitor)
    {
    	$this->m_InterruptMonitor = $interruptMonitor;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.InterruptMonitor.interrupt()]

     */
    function interrupt()
    {
        $this->m_InterruptMonitor->interrupt();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.IStreamProvider]
  
 */
class IStreamProvider
{
    public $m_IStreamProvider;
    
    function __construct($iStreamProvider)
    {
    	$this->m_IStreamProvider = $iStreamProvider;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.IStreamProvider.closeStream(com.aspose.cells.StreamProviderOptions)]

      @param oStreamProviderOptions0  com.aspose.cells.StreamProviderOptions
     */
    function closeStream($oStreamProviderOptions0)
    {
        $this->m_IStreamProvider->closeStream(ClassFactory::_t1($oStreamProviderOptions0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.IStreamProvider.initStream(com.aspose.cells.StreamProviderOptions)]

      @param oStreamProviderOptions0  com.aspose.cells.StreamProviderOptions
     */
    function initStream($oStreamProviderOptions0)
    {
        $this->m_IStreamProvider->initStream(ClassFactory::_t1($oStreamProviderOptions0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.IWarningCallback]
  
 */
class IWarningCallback
{
    public $m_IWarningCallback;
    
    function __construct($iWarningCallback)
    {
    	$this->m_IWarningCallback = $iWarningCallback;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.IWarningCallback.warning(com.aspose.cells.WarningInfo)]

      @param oWarningInfo0  com.aspose.cells.WarningInfo
     */
    function warning($oWarningInfo0)
    {
        $this->m_IWarningCallback->warning(ClassFactory::_t1($oWarningInfo0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.Label]
  
 */
class Label extends Shape
{
    public $m_Label;
    
    function __construct($label)
    {
    	$this->m_Label = $label;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.LabelPositionType]
  
 */
class LabelPositionType
{
    public $m_LabelPositionType;
    
    function __construct($labelPositionType)
    {
    	$this->m_LabelPositionType = $labelPositionType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Legend]
  
 */
class Legend extends ChartFrame
{
    public $m_Legend;
    
    function __construct($legend)
    {
    	$this->m_Legend = $legend;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Legend.getLegendEntries()]

      @return com.aspose.cells.LegendEntryCollection
     */
    function getLegendEntries()
    {
        return ClassFactory::_t2($this->m_Legend->getLegendEntries());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Legend.getPosition()]

      @return int
     */
    function getPosition()
    {
        return $this->m_Legend->getPosition();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Legend.setPosition(int)]

      @param pInt0  int
     */
    function setPosition($pInt0)
    {
        $this->m_Legend->setPosition($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.LegendEntry]
  
 */
class LegendEntry
{
    public $m_LegendEntry;
    
    function __construct($legendEntry)
    {
    	$this->m_LegendEntry = $legendEntry;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.LegendEntry.getAutoScaleFont()]

      @return boolean
     */
    function getAutoScaleFont()
    {
        return $this->m_LegendEntry->getAutoScaleFont();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LegendEntry.getBackground()]

      @return int
     */
    function getBackground()
    {
        return $this->m_LegendEntry->getBackground();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LegendEntry.getBackgroundMode()]

      @return int
     */
    function getBackgroundMode()
    {
        return $this->m_LegendEntry->getBackgroundMode();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LegendEntry.getFont()]

      @return com.aspose.cells.Font
     */
    function getFont()
    {
        return ClassFactory::_t2($this->m_LegendEntry->getFont());
    }

    /*
      Wrapper for java version method [com.aspose.cells.LegendEntry.getTextFont()]

      @return com.aspose.cells.Font
     */
    function getTextFont()
    {
        return ClassFactory::_t2($this->m_LegendEntry->getTextFont());
    }

    /*
      Wrapper for java version method [com.aspose.cells.LegendEntry.isDeleted()]

      @return boolean
     */
    function isDeleted()
    {
        return $this->m_LegendEntry->isDeleted();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LegendEntry.setAutoScaleFont(boolean)]

      @param pBoolean0  boolean
     */
    function setAutoScaleFont($pBoolean0)
    {
        $this->m_LegendEntry->setAutoScaleFont($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LegendEntry.setBackground(int)]

      @param pInt0  int
     */
    function setBackground($pInt0)
    {
        $this->m_LegendEntry->setBackground($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LegendEntry.setBackgroundMode(int)]

      @param pInt0  int
     */
    function setBackgroundMode($pInt0)
    {
        $this->m_LegendEntry->setBackgroundMode($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LegendEntry.setDeleted(boolean)]

      @param pBoolean0  boolean
     */
    function setDeleted($pBoolean0)
    {
        $this->m_LegendEntry->setDeleted($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.LegendEntryCollection]
  
 */
class LegendEntryCollection extends CollectionBase
{
    public $m_LegendEntryCollection;
    
    function __construct($legendEntryCollection)
    {
    	$this->m_LegendEntryCollection = $legendEntryCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.LegendEntryCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.LegendEntry
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_LegendEntryCollection->get($pInt0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.LegendPositionType]
  
 */
class LegendPositionType
{
    public $m_LegendPositionType;
    
    function __construct($legendPositionType)
    {
    	$this->m_LegendPositionType = $legendPositionType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.License]
  
 */
class License
{
    public $m_License;
    
    function __construct($license)
    {
    	$this->m_License = $license;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.License.getSubscriptionExpireDate()]

      @return corresponding java type is {java.util.Date}
     */
    function getSubscriptionExpireDate()
    {
        return ClassFactory::_t2($this->m_License->getSubscriptionExpireDate());
    }

    /*
      Wrapper for java version method [com.aspose.cells.License.isLicenseSet()]

      @return boolean
     */
    function isLicenseSet()
    {
        return $this->m_License->isLicenseSet();
    }

    /*
      Wrapper for java version method [com.aspose.cells.License.setLicense(java.io.InputStream)]

      @param oInputStream0  corresponding java type is {java.io.InputStream}
     */
    function setLicenseI($oInputStream0)
    {
        $this->m_License->setLicense(ClassFactory::_t1($oInputStream0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.License.setLicense(java.io.Reader)]

      @param oReader0  corresponding java type is {java.io.Reader}
     */
    function setLicenseR($oReader0)
    {
        $this->m_License->setLicense(ClassFactory::_t1($oReader0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.License.setLicense(java.lang.String)]

      @param oString0  String
     */
    function setLicenseS($oString0)
    {
        $this->m_License->setLicense($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.LightCell]
  
 */
class LightCell
{
    public $m_LightCell;
    
    function __construct($lightCell)
    {
    	$this->m_LightCell = $lightCell;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.LightCell.copy()]

      @return com.aspose.cells.LightCell
     */
    function copy()
    {
        return ClassFactory::_t2($this->m_LightCell->copy());
    }

    /*
      Wrapper for java version method [com.aspose.cells.LightCell.getColumnIndex()]

      @return short
     */
    function getColumnIndex()
    {
        return $this->m_LightCell->getColumnIndex();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LightCell.getFormula()]

      @return String
     */
    function getFormula()
    {
        return $this->m_LightCell->getFormula();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LightCell.getFormulaRange()]

      @return String
     */
    function getFormulaRange()
    {
        return $this->m_LightCell->getFormulaRange();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LightCell.getFormulaType()]

      @return byte
     */
    function getFormulaType()
    {
        return $this->m_LightCell->getFormulaType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LightCell.getRowIndex()]

      @return int
     */
    function getRowIndex()
    {
        return $this->m_LightCell->getRowIndex();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LightCell.getValue()]

      @return corresponding java type is {java.lang.Object}
     */
    function getValue()
    {
        return ClassFactory::_t2($this->m_LightCell->getValue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.LightCell.getValueType()]

      @return int
     */
    function getValueType()
    {
        return $this->m_LightCell->getValueType();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.LightCells]
  
 */
class LightCells
{
    public $m_LightCells;
    
    function __construct($lightCells)
    {
    	$this->m_LightCells = $lightCells;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.LightCells.getInstance(java.io.InputStream)]

      @param oInputStream0  corresponding java type is {java.io.InputStream}
      @return com.aspose.cells.LightCells
     */
    function getInstanceI($oInputStream0)
    {
        return ClassFactory::_t2($this->m_LightCells->getInstance(ClassFactory::_t1($oInputStream0)));
    }

    /*
      Wrapper for java version method [com.aspose.cells.LightCells.getInstance(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.LightCells
     */
    function getInstanceS($oString0)
    {
        return ClassFactory::_t2($this->m_LightCells->getInstance($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.LightCells.getSheetCount()]

      @return int
     */
    function getSheetCount()
    {
        return $this->m_LightCells->getSheetCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LightCells.getSheetName(int)]

      @param pInt0  int
      @return String
     */
    function getSheetName($pInt0)
    {
        return $this->m_LightCells->getSheetName($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LightCells.processWorkbook(com.aspose.cells.CellHandler)]

      @param oCellHandler0  com.aspose.cells.CellHandler
     */
    function processWorkbook($oCellHandler0)
    {
        $this->m_LightCells->processWorkbook(ClassFactory::_t1($oCellHandler0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.LightCells.processWorksheet(int, com.aspose.cells.CellHandler)]

      @param pInt0  int
      @param oCellHandler1  com.aspose.cells.CellHandler
     */
    function processWorksheetIC($pInt0, $oCellHandler1)
    {
        $this->m_LightCells->processWorksheet($pInt0, ClassFactory::_t1($oCellHandler1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.LightCells.processWorksheet(java.lang.String, com.aspose.cells.CellHandler)]

      @param oString0  String
      @param oCellHandler1  com.aspose.cells.CellHandler
     */
    function processWorksheetSC($oString0, $oCellHandler1)
    {
        $this->m_LightCells->processWorksheet($oString0, ClassFactory::_t1($oCellHandler1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.LightCells.release()]

     */
    function release()
    {
        $this->m_LightCells->release();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.LightCellsDataHandler]
  
 */
class LightCellsDataHandler
{
    public $m_LightCellsDataHandler;
    
    function __construct($lightCellsDataHandler)
    {
    	$this->m_LightCellsDataHandler = $lightCellsDataHandler;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.LightCellsDataHandler.processCell(com.aspose.cells.Cell)]

      @param oCell0  com.aspose.cells.Cell
      @return boolean
     */
    function processCell($oCell0)
    {
        return $this->m_LightCellsDataHandler->processCell(ClassFactory::_t1($oCell0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.LightCellsDataHandler.processRow(com.aspose.cells.Row)]

      @param oRow0  com.aspose.cells.Row
      @return boolean
     */
    function processRow($oRow0)
    {
        return $this->m_LightCellsDataHandler->processRow(ClassFactory::_t1($oRow0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.LightCellsDataHandler.startCell(int)]

      @param pInt0  int
      @return boolean
     */
    function startCell($pInt0)
    {
        return $this->m_LightCellsDataHandler->startCell($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LightCellsDataHandler.startRow(int)]

      @param pInt0  int
      @return boolean
     */
    function startRow($pInt0)
    {
        return $this->m_LightCellsDataHandler->startRow($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LightCellsDataHandler.startSheet(com.aspose.cells.Worksheet)]

      @param oWorksheet0  com.aspose.cells.Worksheet
      @return boolean
     */
    function startSheet($oWorksheet0)
    {
        return $this->m_LightCellsDataHandler->startSheet(ClassFactory::_t1($oWorksheet0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.LightCellsDataProvider]
  
 */
class LightCellsDataProvider
{
    public $m_LightCellsDataProvider;
    
    function __construct($lightCellsDataProvider)
    {
    	$this->m_LightCellsDataProvider = $lightCellsDataProvider;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.LightCellsDataProvider.isGatherString()]

      @return boolean
     */
    function isGatherString()
    {
        return $this->m_LightCellsDataProvider->isGatherString();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LightCellsDataProvider.nextCell()]

      @return int
     */
    function nextCell()
    {
        return $this->m_LightCellsDataProvider->nextCell();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LightCellsDataProvider.nextRow()]

      @return int
     */
    function nextRow()
    {
        return $this->m_LightCellsDataProvider->nextRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LightCellsDataProvider.startCell(com.aspose.cells.Cell)]

      @param oCell0  com.aspose.cells.Cell
     */
    function startCell($oCell0)
    {
        $this->m_LightCellsDataProvider->startCell(ClassFactory::_t1($oCell0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.LightCellsDataProvider.startRow(com.aspose.cells.Row)]

      @param oRow0  com.aspose.cells.Row
     */
    function startRow($oRow0)
    {
        $this->m_LightCellsDataProvider->startRow(ClassFactory::_t1($oRow0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.LightCellsDataProvider.startSheet(int)]

      @param pInt0  int
      @return boolean
     */
    function startSheet($pInt0)
    {
        return $this->m_LightCellsDataProvider->startSheet($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.LightRigType]
  
 */
class LightRigType
{
    public $m_LightRigType;
    
    function __construct($lightRigType)
    {
    	$this->m_LightRigType = $lightRigType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Line]
  
 */
class Line
{
    public $m_Line;
    
    function __construct($line)
    {
    	$this->m_Line = $line;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Line.getBeginArrowLength()]

      @return int
     */
    function getBeginArrowLength()
    {
        return $this->m_Line->getBeginArrowLength();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.getBeginArrowWidth()]

      @return int
     */
    function getBeginArrowWidth()
    {
        return $this->m_Line->getBeginArrowWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.getBeginType()]

      @return int
     */
    function getBeginType()
    {
        return $this->m_Line->getBeginType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.getCapType()]

      @return int
     */
    function getCapType()
    {
        return $this->m_Line->getCapType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.getColor()]

      @return com.aspose.cells.Color
     */
    function getColor()
    {
        return ClassFactory::_t2($this->m_Line->getColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.getCompoundType()]

      @return int
     */
    function getCompoundType()
    {
        return $this->m_Line->getCompoundType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.getDashType()]

      @return int
     */
    function getDashType()
    {
        return $this->m_Line->getDashType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.getEndArrowLength()]

      @return int
     */
    function getEndArrowLength()
    {
        return $this->m_Line->getEndArrowLength();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.getEndArrowWidth()]

      @return int
     */
    function getEndArrowWidth()
    {
        return $this->m_Line->getEndArrowWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.getEndType()]

      @return int
     */
    function getEndType()
    {
        return $this->m_Line->getEndType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.getFormattingType()]

      @return int
     */
    function getFormattingType()
    {
        return $this->m_Line->getFormattingType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.getGradientFill()]

      @return com.aspose.cells.GradientFill
     */
    function getGradientFill()
    {
        return ClassFactory::_t2($this->m_Line->getGradientFill());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.getJoinType()]

      @return int
     */
    function getJoinType()
    {
        return $this->m_Line->getJoinType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.getStyle()]

      @return int
     */
    function getStyle()
    {
        return $this->m_Line->getStyle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.getTransparency()]

      @return double
     */
    function getTransparency()
    {
        return $this->m_Line->getTransparency();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.getWeight()]

      @return int
     */
    function getWeight()
    {
        return $this->m_Line->getWeight();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.getWeightPt()]

      @return double
     */
    function getWeightPt()
    {
        return $this->m_Line->getWeightPt();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.getWeightPx()]

      @return double
     */
    function getWeightPx()
    {
        return $this->m_Line->getWeightPx();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.isAuto()]

      @return boolean
     */
    function isAuto()
    {
        return $this->m_Line->isAuto();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.isAutomaticColor()]

      @return boolean
     */
    function isAutomaticColor()
    {
        return $this->m_Line->isAutomaticColor();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.isVisible()]

      @return boolean
     */
    function isVisible()
    {
        return $this->m_Line->isVisible();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.setAuto(boolean)]

      @param pBoolean0  boolean
     */
    function setAuto($pBoolean0)
    {
        $this->m_Line->setAuto($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.setBeginArrowLength(int)]

      @param pInt0  int
     */
    function setBeginArrowLength($pInt0)
    {
        $this->m_Line->setBeginArrowLength($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.setBeginArrowWidth(int)]

      @param pInt0  int
     */
    function setBeginArrowWidth($pInt0)
    {
        $this->m_Line->setBeginArrowWidth($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.setBeginType(int)]

      @param pInt0  int
     */
    function setBeginType($pInt0)
    {
        $this->m_Line->setBeginType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.setCapType(int)]

      @param pInt0  int
     */
    function setCapType($pInt0)
    {
        $this->m_Line->setCapType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.setColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setColor($oColor0)
    {
        $this->m_Line->setColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.setCompoundType(int)]

      @param pInt0  int
     */
    function setCompoundType($pInt0)
    {
        $this->m_Line->setCompoundType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.setDashType(int)]

      @param pInt0  int
     */
    function setDashType($pInt0)
    {
        $this->m_Line->setDashType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.setEndArrowLength(int)]

      @param pInt0  int
     */
    function setEndArrowLength($pInt0)
    {
        $this->m_Line->setEndArrowLength($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.setEndArrowWidth(int)]

      @param pInt0  int
     */
    function setEndArrowWidth($pInt0)
    {
        $this->m_Line->setEndArrowWidth($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.setEndType(int)]

      @param pInt0  int
     */
    function setEndType($pInt0)
    {
        $this->m_Line->setEndType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.setFormattingType(int)]

      @param pInt0  int
     */
    function setFormattingType($pInt0)
    {
        $this->m_Line->setFormattingType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.setJoinType(int)]

      @param pInt0  int
     */
    function setJoinType($pInt0)
    {
        $this->m_Line->setJoinType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.setStyle(int)]

      @param pInt0  int
     */
    function setStyle($pInt0)
    {
        $this->m_Line->setStyle($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.setTransparency(double)]

      @param pDouble0  double
     */
    function setTransparency($pDouble0)
    {
        $this->m_Line->setTransparency($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.setVisible(boolean)]

      @param pBoolean0  boolean
     */
    function setVisible($pBoolean0)
    {
        $this->m_Line->setVisible($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.setWeight(int)]

      @param pInt0  int
     */
    function setWeight($pInt0)
    {
        $this->m_Line->setWeight($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.setWeightPt(double)]

      @param pDouble0  double
     */
    function setWeightPt($pDouble0)
    {
        $this->m_Line->setWeightPt($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Line.setWeightPx(double)]

      @param pDouble0  double
     */
    function setWeightPx($pDouble0)
    {
        $this->m_Line->setWeightPx($pDouble0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.LineCapType]
  
 */
class LineCapType
{
    public $m_LineCapType;
    
    function __construct($lineCapType)
    {
    	$this->m_LineCapType = $lineCapType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.LineJoinType]
  
 */
class LineJoinType
{
    public $m_LineJoinType;
    
    function __construct($lineJoinType)
    {
    	$this->m_LineJoinType = $lineJoinType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.LineShape]
  
 */
class LineShape extends Shape
{
    public $m_LineShape;
    
    function __construct($lineShape)
    {
    	$this->m_LineShape = $lineShape;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.LineShape.getBeginArrowheadLength()]

      @return int
     */
    function getBeginArrowheadLength()
    {
        return $this->m_LineShape->getBeginArrowheadLength();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LineShape.getBeginArrowheadStyle()]

      @return int
     */
    function getBeginArrowheadStyle()
    {
        return $this->m_LineShape->getBeginArrowheadStyle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LineShape.getBeginArrowheadWidth()]

      @return int
     */
    function getBeginArrowheadWidth()
    {
        return $this->m_LineShape->getBeginArrowheadWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LineShape.getEndArrowheadLength()]

      @return int
     */
    function getEndArrowheadLength()
    {
        return $this->m_LineShape->getEndArrowheadLength();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LineShape.getEndArrowheadStyle()]

      @return int
     */
    function getEndArrowheadStyle()
    {
        return $this->m_LineShape->getEndArrowheadStyle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LineShape.getEndArrowheadWidth()]

      @return int
     */
    function getEndArrowheadWidth()
    {
        return $this->m_LineShape->getEndArrowheadWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LineShape.setBeginArrowheadLength(int)]

      @param pInt0  int
     */
    function setBeginArrowheadLength($pInt0)
    {
        $this->m_LineShape->setBeginArrowheadLength($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LineShape.setBeginArrowheadStyle(int)]

      @param pInt0  int
     */
    function setBeginArrowheadStyle($pInt0)
    {
        $this->m_LineShape->setBeginArrowheadStyle($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LineShape.setBeginArrowheadWidth(int)]

      @param pInt0  int
     */
    function setBeginArrowheadWidth($pInt0)
    {
        $this->m_LineShape->setBeginArrowheadWidth($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LineShape.setEndArrowheadLength(int)]

      @param pInt0  int
     */
    function setEndArrowheadLength($pInt0)
    {
        $this->m_LineShape->setEndArrowheadLength($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LineShape.setEndArrowheadStyle(int)]

      @param pInt0  int
     */
    function setEndArrowheadStyle($pInt0)
    {
        $this->m_LineShape->setEndArrowheadStyle($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LineShape.setEndArrowheadWidth(int)]

      @param pInt0  int
     */
    function setEndArrowheadWidth($pInt0)
    {
        $this->m_LineShape->setEndArrowheadWidth($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.LineType]
  
 */
class LineType
{
    public $m_LineType;
    
    function __construct($lineType)
    {
    	$this->m_LineType = $lineType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.ListBox]
  
 */
class ListBox extends Shape
{
    public $m_ListBox;
    
    function __construct($listBox)
    {
    	$this->m_ListBox = $listBox;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ListBox.getItemCount()]

      @return int
     */
    function getItemCount()
    {
        return $this->m_ListBox->getItemCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListBox.getPageChange()]

      @return int
     */
    function getPageChange()
    {
        return $this->m_ListBox->getPageChange();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListBox.getSelectedCells()]

      @return com.aspose.cells.Cell[]
     */
    function getSelectedCells()
    {
        return ClassFactory::_t2($this->m_ListBox->getSelectedCells());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListBox.getSelectedIndex()]

      @return int
     */
    function getSelectedIndex()
    {
        return $this->m_ListBox->getSelectedIndex();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListBox.getSelectionType()]

      @return int
     */
    function getSelectionType()
    {
        return $this->m_ListBox->getSelectionType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListBox.getShadow()]

      @return boolean
     */
    function getShadow()
    {
        return $this->m_ListBox->getShadow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListBox.isSelected(int)]

      @param pInt0  int
      @return boolean
     */
    function isSelected($pInt0)
    {
        return $this->m_ListBox->isSelected($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListBox.selectedItem(int, boolean)]

      @param pInt0  int
      @param pBoolean1  boolean
     */
    function selectedItem($pInt0, $pBoolean1)
    {
        $this->m_ListBox->selectedItem($pInt0, $pBoolean1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListBox.setPageChange(int)]

      @param pInt0  int
     */
    function setPageChange($pInt0)
    {
        $this->m_ListBox->setPageChange($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListBox.setSelectedIndex(int)]

      @param pInt0  int
     */
    function setSelectedIndex($pInt0)
    {
        $this->m_ListBox->setSelectedIndex($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListBox.setSelectionType(int)]

      @param pInt0  int
     */
    function setSelectionType($pInt0)
    {
        $this->m_ListBox->setSelectionType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListBox.setShadow(boolean)]

      @param pBoolean0  boolean
     */
    function setShadow($pBoolean0)
    {
        $this->m_ListBox->setShadow($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ListColumn]
  
 */
class ListColumn
{
    public $m_ListColumn;
    
    function __construct($listColumn)
    {
    	$this->m_ListColumn = $listColumn;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ListColumn.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_ListColumn->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListColumn.getRange()]

      @return com.aspose.cells.Range
     */
    function getRange()
    {
        return ClassFactory::_t2($this->m_ListColumn->getRange());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListColumn.getTotalsCalculation()]

      @return int
     */
    function getTotalsCalculation()
    {
        return $this->m_ListColumn->getTotalsCalculation();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListColumn.setName(java.lang.String)]

      @param oString0  String
     */
    function setName($oString0)
    {
        $this->m_ListColumn->setName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListColumn.setTotalsCalculation(int)]

      @param pInt0  int
     */
    function setTotalsCalculation($pInt0)
    {
        $this->m_ListColumn->setTotalsCalculation($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ListColumnCollection]
  
 */
class ListColumnCollection extends CollectionBase
{
    public $m_ListColumnCollection;
    
    function __construct($listColumnCollection)
    {
    	$this->m_ListColumnCollection = $listColumnCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ListColumnCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.ListColumn
     */
    function getI($pInt0)
    {
        return ClassFactory::_t2($this->m_ListColumnCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListColumnCollection.get(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.ListColumn
     */
    function getS($oString0)
    {
        return ClassFactory::_t2($this->m_ListColumnCollection->get($oString0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ListObject]
  
 */
class ListObject
{
    public $m_ListObject;
    
    function __construct($listObject)
    {
    	$this->m_ListObject = $listObject;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ListObject.applyStyleToRange()]

     */
    function applyStyleToRange()
    {
        $this->m_ListObject->applyStyleToRange();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.convertToRange()]

     */
    function convertToRange()
    {
        $this->m_ListObject->convertToRange();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.getAutoFilter()]

      @return com.aspose.cells.AutoFilter
     */
    function getAutoFilter()
    {
        return ClassFactory::_t2($this->m_ListObject->getAutoFilter());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.getDataRange()]

      @return com.aspose.cells.Range
     */
    function getDataRange()
    {
        return ClassFactory::_t2($this->m_ListObject->getDataRange());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.getDisplayName()]

      @return String
     */
    function getDisplayName()
    {
        return $this->m_ListObject->getDisplayName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.getEndColumn()]

      @return int
     */
    function getEndColumn()
    {
        return $this->m_ListObject->getEndColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.getEndRow()]

      @return int
     */
    function getEndRow()
    {
        return $this->m_ListObject->getEndRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.getListColumns()]

      @return com.aspose.cells.ListColumnCollection
     */
    function getListColumns()
    {
        return ClassFactory::_t2($this->m_ListObject->getListColumns());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.getShowHeaderRow()]

      @return boolean
     */
    function getShowHeaderRow()
    {
        return $this->m_ListObject->getShowHeaderRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.getShowTableStyleColumnStripes()]

      @return boolean
     */
    function getShowTableStyleColumnStripes()
    {
        return $this->m_ListObject->getShowTableStyleColumnStripes();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.getShowTableStyleFirstColumn()]

      @return boolean
     */
    function getShowTableStyleFirstColumn()
    {
        return $this->m_ListObject->getShowTableStyleFirstColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.getShowTableStyleLastColumn()]

      @return boolean
     */
    function getShowTableStyleLastColumn()
    {
        return $this->m_ListObject->getShowTableStyleLastColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.getShowTableStyleRowStripes()]

      @return boolean
     */
    function getShowTableStyleRowStripes()
    {
        return $this->m_ListObject->getShowTableStyleRowStripes();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.getShowTotals()]

      @return boolean
     */
    function getShowTotals()
    {
        return $this->m_ListObject->getShowTotals();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.getStartColumn()]

      @return int
     */
    function getStartColumn()
    {
        return $this->m_ListObject->getStartColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.getStartRow()]

      @return int
     */
    function getStartRow()
    {
        return $this->m_ListObject->getStartRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.getTableStyleName()]

      @return String
     */
    function getTableStyleName()
    {
        return $this->m_ListObject->getTableStyleName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.getTableStyleType()]

      @return int
     */
    function getTableStyleType()
    {
        return $this->m_ListObject->getTableStyleType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.resize(int, int, int, int, boolean)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pBoolean4  boolean
     */
    function resize($pInt0, $pInt1, $pInt2, $pInt3, $pBoolean4)
    {
        $this->m_ListObject->resize($pInt0, $pInt1, $pInt2, $pInt3, $pBoolean4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.setDisplayName(java.lang.String)]

      @param oString0  String
     */
    function setDisplayName($oString0)
    {
        $this->m_ListObject->setDisplayName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.setShowHeaderRow(boolean)]

      @param pBoolean0  boolean
     */
    function setShowHeaderRow($pBoolean0)
    {
        $this->m_ListObject->setShowHeaderRow($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.setShowTableStyleColumnStripes(boolean)]

      @param pBoolean0  boolean
     */
    function setShowTableStyleColumnStripes($pBoolean0)
    {
        $this->m_ListObject->setShowTableStyleColumnStripes($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.setShowTableStyleFirstColumn(boolean)]

      @param pBoolean0  boolean
     */
    function setShowTableStyleFirstColumn($pBoolean0)
    {
        $this->m_ListObject->setShowTableStyleFirstColumn($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.setShowTableStyleLastColumn(boolean)]

      @param pBoolean0  boolean
     */
    function setShowTableStyleLastColumn($pBoolean0)
    {
        $this->m_ListObject->setShowTableStyleLastColumn($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.setShowTableStyleRowStripes(boolean)]

      @param pBoolean0  boolean
     */
    function setShowTableStyleRowStripes($pBoolean0)
    {
        $this->m_ListObject->setShowTableStyleRowStripes($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.setShowTotals(boolean)]

      @param pBoolean0  boolean
     */
    function setShowTotals($pBoolean0)
    {
        $this->m_ListObject->setShowTotals($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.setTableStyleName(java.lang.String)]

      @param oString0  String
     */
    function setTableStyleName($oString0)
    {
        $this->m_ListObject->setTableStyleName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.setTableStyleType(int)]

      @param pInt0  int
     */
    function setTableStyleType($pInt0)
    {
        $this->m_ListObject->setTableStyleType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObject.updateColumnName()]

     */
    function updateColumnName()
    {
        $this->m_ListObject->updateColumnName();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ListObjectCollection]
  
 */
class ListObjectCollection extends CollectionBase
{
    public $m_ListObjectCollection;
    
    function __construct($listObjectCollection)
    {
    	$this->m_ListObjectCollection = $listObjectCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ListObjectCollection.add(java.lang.String, java.lang.String, boolean)]

      @param oString0  String
      @param oString1  String
      @param pBoolean2  boolean
      @return int
     */
    function addSSB($oString0, $oString1, $pBoolean2)
    {
        return $this->m_ListObjectCollection->add($oString0, $oString1, $pBoolean2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObjectCollection.add(int, int, int, int, boolean)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pBoolean4  boolean
      @return int
     */
    function addIIIIB($pInt0, $pInt1, $pInt2, $pInt3, $pBoolean4)
    {
        return $this->m_ListObjectCollection->add($pInt0, $pInt1, $pInt2, $pInt3, $pBoolean4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObjectCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.ListObject
     */
    function getI($pInt0)
    {
        return ClassFactory::_t2($this->m_ListObjectCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObjectCollection.get(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.ListObject
     */
    function getS($oString0)
    {
        return ClassFactory::_t2($this->m_ListObjectCollection->get($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ListObjectCollection.updateColumnName()]

     */
    function updateColumnName()
    {
        $this->m_ListObjectCollection->updateColumnName();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.LoadDataOption]
  
 */
class LoadDataOption
{
    public $m_LoadDataOption;
    
    function __construct($loadDataOption)
    {
    	$this->m_LoadDataOption = $loadDataOption;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.LoadDataOption.getFormula()]

      @return boolean
     */
    function getFormula()
    {
        return $this->m_LoadDataOption->getFormula();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadDataOption.getImportFormula()]

      @return boolean
     */
    function getImportFormula()
    {
        return $this->m_LoadDataOption->getImportFormula();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadDataOption.getOnlyCreateWorksheet()]

      @return boolean
     */
    function getOnlyCreateWorksheet()
    {
        return $this->m_LoadDataOption->getOnlyCreateWorksheet();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadDataOption.setFormula(boolean)]

      @param pBoolean0  boolean
     */
    function setFormula($pBoolean0)
    {
        $this->m_LoadDataOption->setFormula($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadDataOption.setImportFormula(boolean)]

      @param pBoolean0  boolean
     */
    function setImportFormula($pBoolean0)
    {
        $this->m_LoadDataOption->setImportFormula($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadDataOption.setOnlyCreateWorksheet(boolean)]

      @param pBoolean0  boolean
     */
    function setOnlyCreateWorksheet($pBoolean0)
    {
        $this->m_LoadDataOption->setOnlyCreateWorksheet($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.LoadFormat]
  
 */
class LoadFormat
{
    public $m_LoadFormat;
    
    function __construct($loadFormat)
    {
    	$this->m_LoadFormat = $loadFormat;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.LoadOptions]
  
 */
class LoadOptions
{
    public $m_LoadOptions;
    
    function __construct($loadOptions)
    {
    	$this->m_LoadOptions = $loadOptions;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.getCheckExcelRestriction()]

      @return boolean
     */
    function getCheckExcelRestriction()
    {
        return $this->m_LoadOptions->getCheckExcelRestriction();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.getConvertNumericData()]

      @return boolean
     */
    function getConvertNumericData()
    {
        return $this->m_LoadOptions->getConvertNumericData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.getIgnoreNotPrinted()]

      @return boolean
     */
    function getIgnoreNotPrinted()
    {
        return $this->m_LoadOptions->getIgnoreNotPrinted();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.getInterruptMonitor()]

      @return com.aspose.cells.InterruptMonitor
     */
    function getInterruptMonitor()
    {
        return ClassFactory::_t2($this->m_LoadOptions->getInterruptMonitor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.getLanguageCode()]

      @return int
     */
    function getLanguageCode()
    {
        return $this->m_LoadOptions->getLanguageCode();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.getLightCellsDataHandler()]

      @return com.aspose.cells.LightCellsDataHandler
     */
    function getLightCellsDataHandler()
    {
        return ClassFactory::_t2($this->m_LoadOptions->getLightCellsDataHandler());
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.getLoadDataAndFormatting()]

      @return boolean
     */
    function getLoadDataAndFormatting()
    {
        return $this->m_LoadOptions->getLoadDataAndFormatting();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.getLoadDataOnly()]

      @return boolean
     */
    function getLoadDataOnly()
    {
        return $this->m_LoadOptions->getLoadDataOnly();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.getLoadDataOptions()]

      @return com.aspose.cells.LoadDataOption
     */
    function getLoadDataOptions()
    {
        return ClassFactory::_t2($this->m_LoadOptions->getLoadDataOptions());
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.getLoadFormat()]

      @return int
     */
    function getLoadFormat()
    {
        return $this->m_LoadOptions->getLoadFormat();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.getLocale()]

      @return corresponding java type is {java.util.Locale}
     */
    function getLocale()
    {
        return ClassFactory::_t2($this->m_LoadOptions->getLocale());
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.getMemorySetting()]

      @return int
     */
    function getMemorySetting()
    {
        return $this->m_LoadOptions->getMemorySetting();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.getOnlyLoadDocumentProperties()]

      @return boolean
     */
    function getOnlyLoadDocumentProperties()
    {
        return $this->m_LoadOptions->getOnlyLoadDocumentProperties();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.getParsingFormulaOnOpen()]

      @return boolean
     */
    function getParsingFormulaOnOpen()
    {
        return $this->m_LoadOptions->getParsingFormulaOnOpen();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.getPassword()]

      @return String
     */
    function getPassword()
    {
        return $this->m_LoadOptions->getPassword();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.getRegion()]

      @return int
     */
    function getRegion()
    {
        return $this->m_LoadOptions->getRegion();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.getStandardFont()]

      @return String
     */
    function getStandardFont()
    {
        return $this->m_LoadOptions->getStandardFont();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.getStandardFontSize()]

      @return double
     */
    function getStandardFontSize()
    {
        return $this->m_LoadOptions->getStandardFontSize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.setCheckExcelRestriction(boolean)]

      @param pBoolean0  boolean
     */
    function setCheckExcelRestriction($pBoolean0)
    {
        $this->m_LoadOptions->setCheckExcelRestriction($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.setConvertNumericData(boolean)]

      @param pBoolean0  boolean
     */
    function setConvertNumericData($pBoolean0)
    {
        $this->m_LoadOptions->setConvertNumericData($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.setIgnoreNotPrinted(boolean)]

      @param pBoolean0  boolean
     */
    function setIgnoreNotPrinted($pBoolean0)
    {
        $this->m_LoadOptions->setIgnoreNotPrinted($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.setInterruptMonitor(com.aspose.cells.InterruptMonitor)]

      @param oInterruptMonitor0  com.aspose.cells.InterruptMonitor
     */
    function setInterruptMonitor($oInterruptMonitor0)
    {
        $this->m_LoadOptions->setInterruptMonitor(ClassFactory::_t1($oInterruptMonitor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.setLanguageCode(int)]

      @param pInt0  int
     */
    function setLanguageCode($pInt0)
    {
        $this->m_LoadOptions->setLanguageCode($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.setLightCellsDataHandler(com.aspose.cells.LightCellsDataHandler)]

      @param oLightCellsDataHandler0  com.aspose.cells.LightCellsDataHandler
     */
    function setLightCellsDataHandler($oLightCellsDataHandler0)
    {
        $this->m_LoadOptions->setLightCellsDataHandler(ClassFactory::_t1($oLightCellsDataHandler0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.setLoadDataAndFormatting(boolean)]

      @param pBoolean0  boolean
     */
    function setLoadDataAndFormatting($pBoolean0)
    {
        $this->m_LoadOptions->setLoadDataAndFormatting($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.setLoadDataOnly(boolean)]

      @param pBoolean0  boolean
     */
    function setLoadDataOnly($pBoolean0)
    {
        $this->m_LoadOptions->setLoadDataOnly($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.setLoadDataOptions(com.aspose.cells.LoadDataOption)]

      @param oLoadDataOption0  com.aspose.cells.LoadDataOption
     */
    function setLoadDataOptions($oLoadDataOption0)
    {
        $this->m_LoadOptions->setLoadDataOptions(ClassFactory::_t1($oLoadDataOption0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.setLocale(java.util.Locale)]

      @param oLocale0  corresponding java type is {java.util.Locale}
     */
    function setLocale($oLocale0)
    {
        $this->m_LoadOptions->setLocale(ClassFactory::_t1($oLocale0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.setMemorySetting(int)]

      @param pInt0  int
     */
    function setMemorySetting($pInt0)
    {
        $this->m_LoadOptions->setMemorySetting($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.setOnlyLoadDocumentProperties(boolean)]

      @param pBoolean0  boolean
     */
    function setOnlyLoadDocumentProperties($pBoolean0)
    {
        $this->m_LoadOptions->setOnlyLoadDocumentProperties($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.setParsingFormulaOnOpen(boolean)]

      @param pBoolean0  boolean
     */
    function setParsingFormulaOnOpen($pBoolean0)
    {
        $this->m_LoadOptions->setParsingFormulaOnOpen($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.setPassword(java.lang.String)]

      @param oString0  String
     */
    function setPassword($oString0)
    {
        $this->m_LoadOptions->setPassword($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.setRegion(int)]

      @param pInt0  int
     */
    function setRegion($pInt0)
    {
        $this->m_LoadOptions->setRegion($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.setStandardFont(java.lang.String)]

      @param oString0  String
     */
    function setStandardFont($oString0)
    {
        $this->m_LoadOptions->setStandardFont($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.LoadOptions.setStandardFontSize(double)]

      @param pDouble0  double
     */
    function setStandardFontSize($pDouble0)
    {
        $this->m_LoadOptions->setStandardFontSize($pDouble0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.LookAtType]
  
 */
class LookAtType
{
    public $m_LookAtType;
    
    function __construct($lookAtType)
    {
    	$this->m_LookAtType = $lookAtType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.LookInType]
  
 */
class LookInType
{
    public $m_LookInType;
    
    function __construct($lookInType)
    {
    	$this->m_LookInType = $lookInType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Marker]
  
 */
class Marker
{
    public $m_Marker;
    
    function __construct($marker)
    {
    	$this->m_Marker = $marker;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Marker.getArea()]

      @return com.aspose.cells.Area
     */
    function getArea()
    {
        return ClassFactory::_t2($this->m_Marker->getArea());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Marker.getBorder()]

      @return com.aspose.cells.Line
     */
    function getBorder()
    {
        return ClassFactory::_t2($this->m_Marker->getBorder());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Marker.getMarkerSize()]

      @return int
     */
    function getMarkerSize()
    {
        return $this->m_Marker->getMarkerSize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Marker.getMarkerSizePx()]

      @return int
     */
    function getMarkerSizePx()
    {
        return $this->m_Marker->getMarkerSizePx();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Marker.getMarkerStyle()]

      @return int
     */
    function getMarkerStyle()
    {
        return $this->m_Marker->getMarkerStyle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Marker.setMarkerSize(int)]

      @param pInt0  int
     */
    function setMarkerSize($pInt0)
    {
        $this->m_Marker->setMarkerSize($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Marker.setMarkerSizePx(int)]

      @param pInt0  int
     */
    function setMarkerSizePx($pInt0)
    {
        $this->m_Marker->setMarkerSizePx($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Marker.setMarkerStyle(int)]

      @param pInt0  int
     */
    function setMarkerStyle($pInt0)
    {
        $this->m_Marker->setMarkerStyle($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.MemorySetting]
  
 */
class MemorySetting
{
    public $m_MemorySetting;
    
    function __construct($memorySetting)
    {
    	$this->m_MemorySetting = $memorySetting;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.MirrorType]
  
 */
class MirrorType
{
    public $m_MirrorType;
    
    function __construct($mirrorType)
    {
    	$this->m_MirrorType = $mirrorType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.MsoArrowheadLength]
  
 */
class MsoArrowheadLength
{
    public $m_MsoArrowheadLength;
    
    function __construct($msoArrowheadLength)
    {
    	$this->m_MsoArrowheadLength = $msoArrowheadLength;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.MsoArrowheadStyle]
  
 */
class MsoArrowheadStyle
{
    public $m_MsoArrowheadStyle;
    
    function __construct($msoArrowheadStyle)
    {
    	$this->m_MsoArrowheadStyle = $msoArrowheadStyle;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.MsoArrowheadWidth]
  
 */
class MsoArrowheadWidth
{
    public $m_MsoArrowheadWidth;
    
    function __construct($msoArrowheadWidth)
    {
    	$this->m_MsoArrowheadWidth = $msoArrowheadWidth;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.MsoDrawingType]
  
 */
class MsoDrawingType
{
    public $m_MsoDrawingType;
    
    function __construct($msoDrawingType)
    {
    	$this->m_MsoDrawingType = $msoDrawingType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.MsoFillFormat]
  
 */
class MsoFillFormat
{
    public $m_MsoFillFormat;
    
    function __construct($msoFillFormat)
    {
    	$this->m_MsoFillFormat = $msoFillFormat;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormat.getBackColor()]

      @return com.aspose.cells.Color
     */
    function getBackColor()
    {
        return ClassFactory::_t2($this->m_MsoFillFormat->getBackColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormat.getForeColor()]

      @return com.aspose.cells.Color
     */
    function getForeColor()
    {
        return ClassFactory::_t2($this->m_MsoFillFormat->getForeColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormat.getImageData()]

      @return byte[]
     */
    function getImageData()
    {
        return $this->m_MsoFillFormat->getImageData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormat.getTexture()]

      @return int
     */
    function getTexture()
    {
        return $this->m_MsoFillFormat->getTexture();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormat.getTransparency()]

      @return double
     */
    function getTransparency()
    {
        return $this->m_MsoFillFormat->getTransparency();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormat.isVisible()]

      @return boolean
     */
    function isVisible()
    {
        return $this->m_MsoFillFormat->isVisible();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormat.setBackColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setBackColor($oColor0)
    {
        $this->m_MsoFillFormat->setBackColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormat.setForeColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setForeColor($oColor0)
    {
        $this->m_MsoFillFormat->setForeColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormat.setImageData(byte[])]

      @param arrP1DByte0  byte[]
     */
    function setImageData($arrP1DByte0)
    {
        $this->m_MsoFillFormat->setImageData($arrP1DByte0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormat.setOneColorGradient(com.aspose.cells.Color, double, int, int)]

      @param oColor0  com.aspose.cells.Color
      @param pDouble1  double
      @param pInt2  int
      @param pInt3  int
     */
    function setOneColorGradient($oColor0, $pDouble1, $pInt2, $pInt3)
    {
        $this->m_MsoFillFormat->setOneColorGradient(ClassFactory::_t1($oColor0), $pDouble1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormat.setTransparency(double)]

      @param pDouble0  double
     */
    function setTransparency($pDouble0)
    {
        $this->m_MsoFillFormat->setTransparency($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormat.setVisible(boolean)]

      @param pBoolean0  boolean
     */
    function setVisible($pBoolean0)
    {
        $this->m_MsoFillFormat->setVisible($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.MsoFillFormatHelper]
  
 */
class MsoFillFormatHelper
{
    public $m_MsoFillFormatHelper;
    
    function __construct($msoFillFormatHelper)
    {
    	$this->m_MsoFillFormatHelper = $msoFillFormatHelper;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormatHelper.getBackColor()]

      @return com.aspose.cells.Color
     */
    function getBackColor()
    {
        return ClassFactory::_t2($this->m_MsoFillFormatHelper->getBackColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormatHelper.getForeColor()]

      @return com.aspose.cells.Color
     */
    function getForeColor()
    {
        return ClassFactory::_t2($this->m_MsoFillFormatHelper->getForeColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormatHelper.getForeColorTransparency()]

      @return double
     */
    function getForeColorTransparency()
    {
        return $this->m_MsoFillFormatHelper->getForeColorTransparency();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormatHelper.getImageData()]

      @return byte[]
     */
    function getImageData()
    {
        return $this->m_MsoFillFormatHelper->getImageData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormatHelper.getTexture()]

      @return int
     */
    function getTexture()
    {
        return $this->m_MsoFillFormatHelper->getTexture();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormatHelper.isVisible()]

      @return boolean
     */
    function isVisible()
    {
        return $this->m_MsoFillFormatHelper->isVisible();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormatHelper.setBackColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setBackColor($oColor0)
    {
        $this->m_MsoFillFormatHelper->setBackColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormatHelper.setForeColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setForeColor($oColor0)
    {
        $this->m_MsoFillFormatHelper->setForeColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormatHelper.setForeColorTransparency(double)]

      @param pDouble0  double
     */
    function setForeColorTransparency($pDouble0)
    {
        $this->m_MsoFillFormatHelper->setForeColorTransparency($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormatHelper.setImageData(byte[])]

      @param arrP1DByte0  byte[]
     */
    function setImageData($arrP1DByte0)
    {
        $this->m_MsoFillFormatHelper->setImageData($arrP1DByte0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormatHelper.setOneColorGradient(com.aspose.cells.Color, double, int, int)]

      @param oColor0  com.aspose.cells.Color
      @param pDouble1  double
      @param pInt2  int
      @param pInt3  int
     */
    function setOneColorGradient($oColor0, $pDouble1, $pInt2, $pInt3)
    {
        $this->m_MsoFillFormatHelper->setOneColorGradient(ClassFactory::_t1($oColor0), $pDouble1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFillFormatHelper.setVisible(boolean)]

      @param pBoolean0  boolean
     */
    function setVisible($pBoolean0)
    {
        $this->m_MsoFillFormatHelper->setVisible($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.MsoFormatPicture]
  
 */
class MsoFormatPicture
{
    public $m_MsoFormatPicture;
    
    function __construct($msoFormatPicture)
    {
    	$this->m_MsoFormatPicture = $msoFormatPicture;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.MsoFormatPicture.getBottomCrop()]

      @return double
     */
    function getBottomCrop()
    {
        return $this->m_MsoFormatPicture->getBottomCrop();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFormatPicture.getBrightness()]

      @return double
     */
    function getBrightness()
    {
        return $this->m_MsoFormatPicture->getBrightness();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFormatPicture.getContrast()]

      @return double
     */
    function getContrast()
    {
        return $this->m_MsoFormatPicture->getContrast();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFormatPicture.getLeftCrop()]

      @return double
     */
    function getLeftCrop()
    {
        return $this->m_MsoFormatPicture->getLeftCrop();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFormatPicture.getRightCrop()]

      @return double
     */
    function getRightCrop()
    {
        return $this->m_MsoFormatPicture->getRightCrop();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFormatPicture.getTopCrop()]

      @return double
     */
    function getTopCrop()
    {
        return $this->m_MsoFormatPicture->getTopCrop();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFormatPicture.getTransparentColor()]

      @return com.aspose.cells.CellsColor
     */
    function getTransparentColor()
    {
        return ClassFactory::_t2($this->m_MsoFormatPicture->getTransparentColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFormatPicture.isBiLevel()]

      @return boolean
     */
    function isBiLevel()
    {
        return $this->m_MsoFormatPicture->isBiLevel();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFormatPicture.isGray()]

      @return boolean
     */
    function isGray()
    {
        return $this->m_MsoFormatPicture->isGray();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFormatPicture.setBiLevel(boolean)]

      @param pBoolean0  boolean
     */
    function setBiLevel($pBoolean0)
    {
        $this->m_MsoFormatPicture->setBiLevel($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFormatPicture.setBottomCrop(double)]

      @param pDouble0  double
     */
    function setBottomCrop($pDouble0)
    {
        $this->m_MsoFormatPicture->setBottomCrop($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFormatPicture.setBrightness(double)]

      @param pDouble0  double
     */
    function setBrightness($pDouble0)
    {
        $this->m_MsoFormatPicture->setBrightness($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFormatPicture.setContrast(double)]

      @param pDouble0  double
     */
    function setContrast($pDouble0)
    {
        $this->m_MsoFormatPicture->setContrast($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFormatPicture.setGray(boolean)]

      @param pBoolean0  boolean
     */
    function setGray($pBoolean0)
    {
        $this->m_MsoFormatPicture->setGray($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFormatPicture.setLeftCrop(double)]

      @param pDouble0  double
     */
    function setLeftCrop($pDouble0)
    {
        $this->m_MsoFormatPicture->setLeftCrop($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFormatPicture.setRightCrop(double)]

      @param pDouble0  double
     */
    function setRightCrop($pDouble0)
    {
        $this->m_MsoFormatPicture->setRightCrop($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFormatPicture.setTopCrop(double)]

      @param pDouble0  double
     */
    function setTopCrop($pDouble0)
    {
        $this->m_MsoFormatPicture->setTopCrop($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoFormatPicture.setTransparentColor(com.aspose.cells.CellsColor)]

      @param oCellsColor0  com.aspose.cells.CellsColor
     */
    function setTransparentColor($oCellsColor0)
    {
        $this->m_MsoFormatPicture->setTransparentColor(ClassFactory::_t1($oCellsColor0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.MsoLineDashStyle]
  
 */
class MsoLineDashStyle
{
    public $m_MsoLineDashStyle;
    
    function __construct($msoLineDashStyle)
    {
    	$this->m_MsoLineDashStyle = $msoLineDashStyle;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.MsoLineFormat]
  
 */
class MsoLineFormat
{
    public $m_MsoLineFormat;
    
    function __construct($msoLineFormat)
    {
    	$this->m_MsoLineFormat = $msoLineFormat;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.MsoLineFormat.getBackColor()]

      @return com.aspose.cells.Color
     */
    function getBackColor()
    {
        return ClassFactory::_t2($this->m_MsoLineFormat->getBackColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoLineFormat.getDashStyle()]

      @return int
     */
    function getDashStyle()
    {
        return $this->m_MsoLineFormat->getDashStyle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoLineFormat.getForeColor()]

      @return com.aspose.cells.Color
     */
    function getForeColor()
    {
        return ClassFactory::_t2($this->m_MsoLineFormat->getForeColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoLineFormat.getStyle()]

      @return int
     */
    function getStyle()
    {
        return $this->m_MsoLineFormat->getStyle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoLineFormat.getTransparency()]

      @return double
     */
    function getTransparency()
    {
        return $this->m_MsoLineFormat->getTransparency();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoLineFormat.getWeight()]

      @return double
     */
    function getWeight()
    {
        return $this->m_MsoLineFormat->getWeight();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoLineFormat.isVisible()]

      @return boolean
     */
    function isVisible()
    {
        return $this->m_MsoLineFormat->isVisible();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoLineFormat.setBackColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setBackColor($oColor0)
    {
        $this->m_MsoLineFormat->setBackColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoLineFormat.setDashStyle(int)]

      @param pInt0  int
     */
    function setDashStyle($pInt0)
    {
        $this->m_MsoLineFormat->setDashStyle($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoLineFormat.setForeColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setForeColor($oColor0)
    {
        $this->m_MsoLineFormat->setForeColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoLineFormat.setStyle(int)]

      @param pInt0  int
     */
    function setStyle($pInt0)
    {
        $this->m_MsoLineFormat->setStyle($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoLineFormat.setTransparency(double)]

      @param pDouble0  double
     */
    function setTransparency($pDouble0)
    {
        $this->m_MsoLineFormat->setTransparency($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoLineFormat.setVisible(boolean)]

      @param pBoolean0  boolean
     */
    function setVisible($pBoolean0)
    {
        $this->m_MsoLineFormat->setVisible($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoLineFormat.setWeight(double)]

      @param pDouble0  double
     */
    function setWeight($pDouble0)
    {
        $this->m_MsoLineFormat->setWeight($pDouble0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.MsoLineStyle]
  
 */
class MsoLineStyle
{
    public $m_MsoLineStyle;
    
    function __construct($msoLineStyle)
    {
    	$this->m_MsoLineStyle = $msoLineStyle;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.MsoPresetTextEffect]
  
 */
class MsoPresetTextEffect
{
    public $m_MsoPresetTextEffect;
    
    function __construct($msoPresetTextEffect)
    {
    	$this->m_MsoPresetTextEffect = $msoPresetTextEffect;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.MsoPresetTextEffectShape]
  
 */
class MsoPresetTextEffectShape
{
    public $m_MsoPresetTextEffectShape;
    
    function __construct($msoPresetTextEffectShape)
    {
    	$this->m_MsoPresetTextEffectShape = $msoPresetTextEffectShape;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.MsoTextFrame]
  
 */
class MsoTextFrame
{
    public $m_MsoTextFrame;
    
    function __construct($msoTextFrame)
    {
    	$this->m_MsoTextFrame = $msoTextFrame;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.MsoTextFrame.getAutoSize()]

      @return boolean
     */
    function getAutoSize()
    {
        return $this->m_MsoTextFrame->getAutoSize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoTextFrame.getBottomMarginPt()]

      @return double
     */
    function getBottomMarginPt()
    {
        return $this->m_MsoTextFrame->getBottomMarginPt();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoTextFrame.getLeftMarginPt()]

      @return double
     */
    function getLeftMarginPt()
    {
        return $this->m_MsoTextFrame->getLeftMarginPt();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoTextFrame.getRightMarginPt()]

      @return double
     */
    function getRightMarginPt()
    {
        return $this->m_MsoTextFrame->getRightMarginPt();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoTextFrame.getTopMarginPt()]

      @return double
     */
    function getTopMarginPt()
    {
        return $this->m_MsoTextFrame->getTopMarginPt();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoTextFrame.isAutoMargin()]

      @return boolean
     */
    function isAutoMargin()
    {
        return $this->m_MsoTextFrame->isAutoMargin();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoTextFrame.setAutoMargin(boolean)]

      @param pBoolean0  boolean
     */
    function setAutoMargin($pBoolean0)
    {
        $this->m_MsoTextFrame->setAutoMargin($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoTextFrame.setAutoSize(boolean)]

      @param pBoolean0  boolean
     */
    function setAutoSize($pBoolean0)
    {
        $this->m_MsoTextFrame->setAutoSize($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoTextFrame.setBottomMarginPt(double)]

      @param pDouble0  double
     */
    function setBottomMarginPt($pDouble0)
    {
        $this->m_MsoTextFrame->setBottomMarginPt($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoTextFrame.setLeftMarginPt(double)]

      @param pDouble0  double
     */
    function setLeftMarginPt($pDouble0)
    {
        $this->m_MsoTextFrame->setLeftMarginPt($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoTextFrame.setRightMarginPt(double)]

      @param pDouble0  double
     */
    function setRightMarginPt($pDouble0)
    {
        $this->m_MsoTextFrame->setRightMarginPt($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.MsoTextFrame.setTopMarginPt(double)]

      @param pDouble0  double
     */
    function setTopMarginPt($pDouble0)
    {
        $this->m_MsoTextFrame->setTopMarginPt($pDouble0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.MultipleFilterCollection]
  
 */
class MultipleFilterCollection extends CollectionBase
{
    public $m_MultipleFilterCollection;
    
    function __construct($multipleFilterCollection)
    {
    	$this->m_MultipleFilterCollection = $multipleFilterCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.MultipleFilterCollection.get(int)]

      @param pInt0  int
      @return corresponding java type is {java.lang.Object}
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_MultipleFilterCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.MultipleFilterCollection.getMatchBlank()]

      @return boolean
     */
    function getMatchBlank()
    {
        return $this->m_MultipleFilterCollection->getMatchBlank();
    }

    /*
      Wrapper for java version method [com.aspose.cells.MultipleFilterCollection.setMatchBlank(boolean)]

      @param pBoolean0  boolean
     */
    function setMatchBlank($pBoolean0)
    {
        $this->m_MultipleFilterCollection->setMatchBlank($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.Name]
  
 */
class Name
{
    public $m_Name;
    
    function __construct($name)
    {
    	$this->m_Name = $name;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Name.getComment()]

      @return String
     */
    function getComment()
    {
        return $this->m_Name->getComment();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Name.getFullText()]

      @return String
     */
    function getFullText()
    {
        return $this->m_Name->getFullText();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Name.getR1C1RefersTo()]

      @return String
     */
    function getR1C1RefersTo()
    {
        return $this->m_Name->getR1C1RefersTo();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Name.getRange()]

      @return com.aspose.cells.Range
     */
    function getRange()
    {
        return ClassFactory::_t2($this->m_Name->getRange());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Name.getRanges()]

      @return com.aspose.cells.Range[]
     */
    function getRanges()
    {
        return ClassFactory::_t2($this->m_Name->getRanges());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Name.getRefersTo()]

      @return String
     */
    function getRefersTo()
    {
        return $this->m_Name->getRefersTo();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Name.getSheetIndex()]

      @return int
     */
    function getSheetIndex()
    {
        return $this->m_Name->getSheetIndex();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Name.getText()]

      @return String
     */
    function getText()
    {
        return $this->m_Name->getText();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Name.isReferred()]

      @return boolean
     */
    function isReferred()
    {
        return $this->m_Name->isReferred();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Name.isVisible()]

      @return boolean
     */
    function isVisible()
    {
        return $this->m_Name->isVisible();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Name.setComment(java.lang.String)]

      @param oString0  String
     */
    function setComment($oString0)
    {
        $this->m_Name->setComment($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Name.setR1C1RefersTo(java.lang.String)]

      @param oString0  String
     */
    function setR1C1RefersTo($oString0)
    {
        $this->m_Name->setR1C1RefersTo($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Name.setRefersTo(java.lang.String)]

      @param oString0  String
     */
    function setRefersTo($oString0)
    {
        $this->m_Name->setRefersTo($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Name.setSheetIndex(int)]

      @param pInt0  int
     */
    function setSheetIndex($pInt0)
    {
        $this->m_Name->setSheetIndex($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Name.setText(java.lang.String)]

      @param oString0  String
     */
    function setText($oString0)
    {
        $this->m_Name->setText($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Name.setVisible(boolean)]

      @param pBoolean0  boolean
     */
    function setVisible($pBoolean0)
    {
        $this->m_Name->setVisible($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Name.toString()]

      @return String
     */
    function toString()
    {
        return $this->m_Name->toString();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.NameCollection]
  
 */
class NameCollection extends CollectionBase
{
    public $m_NameCollection;
    
    function __construct($nameCollection)
    {
    	$this->m_NameCollection = $nameCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.NameCollection.add(java.lang.String)]

      @param oString0  String
      @return int
     */
    function add($oString0)
    {
        return $this->m_NameCollection->add($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.NameCollection.clear()]

     */
    function clear()
    {
        $this->m_NameCollection->clear();
    }

    /*
      Wrapper for java version method [com.aspose.cells.NameCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.Name
     */
    function getI($pInt0)
    {
        return ClassFactory::_t2($this->m_NameCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.NameCollection.get(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.Name
     */
    function getS($oString0)
    {
        return ClassFactory::_t2($this->m_NameCollection->get($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.NameCollection.remove(java.lang.String)]

      @param oString0  String
     */
    function removeS($oString0)
    {
        $this->m_NameCollection->remove($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.NameCollection.remove(java.lang.String[])]

      @param arrD1DString0  array, corresponding java type is {String[]}
     */
    function removeS1($arrD1DString0)
    {
        $this->m_NameCollection->remove($arrD1DString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.NameCollection.removeAt(int)]

      @param pInt0  int
     */
    function removeAt($pInt0)
    {
        $this->m_NameCollection->removeAt($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.NameCollection.removeDuplicateNames()]

     */
    function removeDuplicateNames()
    {
        $this->m_NameCollection->removeDuplicateNames();
    }

    /*
      Wrapper for java version method [com.aspose.cells.NameCollection.sort()]

     */
    function sort()
    {
        $this->m_NameCollection->sort();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.NegativeBarFormat]
  
 */
class NegativeBarFormat
{
    public $m_NegativeBarFormat;
    
    function __construct($negativeBarFormat)
    {
    	$this->m_NegativeBarFormat = $negativeBarFormat;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.NegativeBarFormat.getBorderColor()]

      @return com.aspose.cells.Color
     */
    function getBorderColor()
    {
        return ClassFactory::_t2($this->m_NegativeBarFormat->getBorderColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.NegativeBarFormat.getBorderColorType()]

      @return int
     */
    function getBorderColorType()
    {
        return $this->m_NegativeBarFormat->getBorderColorType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.NegativeBarFormat.getColor()]

      @return com.aspose.cells.Color
     */
    function getColor()
    {
        return ClassFactory::_t2($this->m_NegativeBarFormat->getColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.NegativeBarFormat.getColorType()]

      @return int
     */
    function getColorType()
    {
        return $this->m_NegativeBarFormat->getColorType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.NegativeBarFormat.setBorderColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setBorderColor($oColor0)
    {
        $this->m_NegativeBarFormat->setBorderColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.NegativeBarFormat.setBorderColorType(int)]

      @param pInt0  int
     */
    function setBorderColorType($pInt0)
    {
        $this->m_NegativeBarFormat->setBorderColorType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.NegativeBarFormat.setColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setColor($oColor0)
    {
        $this->m_NegativeBarFormat->setColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.NegativeBarFormat.setColorType(int)]

      @param pInt0  int
     */
    function setColorType($pInt0)
    {
        $this->m_NegativeBarFormat->setColorType($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.NumberCategoryType]
  
 */
class NumberCategoryType
{
    public $m_NumberCategoryType;
    
    function __construct($numberCategoryType)
    {
    	$this->m_NumberCategoryType = $numberCategoryType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.OdsSaveOptions]
  
 */
class OdsSaveOptions extends SaveOptions
{
    public $m_OdsSaveOptions;
    
    function __construct($odsSaveOptions)
    {
    	$this->m_OdsSaveOptions = $odsSaveOptions;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.OLEDBCommandType]
  
 */
class OLEDBCommandType
{
    public $m_OLEDBCommandType;
    
    function __construct($oLEDBCommandType)
    {
    	$this->m_OLEDBCommandType = $oLEDBCommandType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.OleFileType]
  
 */
class OleFileType
{
    public $m_OleFileType;
    
    function __construct($oleFileType)
    {
    	$this->m_OleFileType = $oleFileType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.OleObject]
  
 */
class OleObject extends Shape
{
    public $m_OleObject;
    
    function __construct($oleObject)
    {
    	$this->m_OleObject = $oleObject;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.OleObject.getDisplayAsIcon()]

      @return boolean
     */
    function getDisplayAsIcon()
    {
        return $this->m_OleObject->getDisplayAsIcon();
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObject.getFileFormatType()]

      @return int
     */
    function getFileFormatType()
    {
        return $this->m_OleObject->getFileFormatType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObject.getFileType()]

      @return int
     */
    function getFileType()
    {
        return $this->m_OleObject->getFileType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObject.getImageData()]

      @return byte[]
     */
    function getImageData()
    {
        return $this->m_OleObject->getImageData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObject.getImageFormat()]

      @return com.aspose.cells.ImageFormat
     */
    function getImageFormat()
    {
        return ClassFactory::_t2($this->m_OleObject->getImageFormat());
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObject.getImageSourceFullName()]

      @return String
     */
    function getImageSourceFullName()
    {
        return $this->m_OleObject->getImageSourceFullName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObject.getObjectData()]

      @return byte[]
     */
    function getObjectData()
    {
        return $this->m_OleObject->getObjectData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObject.getObjectSourceFullName()]

      @return String
     */
    function getObjectSourceFullName()
    {
        return $this->m_OleObject->getObjectSourceFullName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObject.getProgID()]

      @return String
     */
    function getProgID()
    {
        return $this->m_OleObject->getProgID();
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObject.getSourceFullName()]

      @return String
     */
    function getSourceFullName()
    {
        return $this->m_OleObject->getSourceFullName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObject.isAutoSize()]

      @return boolean
     */
    function isAutoSize()
    {
        return $this->m_OleObject->isAutoSize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObject.isLink()]

      @return boolean
     */
    function isLink()
    {
        return $this->m_OleObject->isLink();
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObject.setAutoSize(boolean)]

      @param pBoolean0  boolean
     */
    function setAutoSize($pBoolean0)
    {
        $this->m_OleObject->setAutoSize($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObject.setDisplayAsIcon(boolean)]

      @param pBoolean0  boolean
     */
    function setDisplayAsIcon($pBoolean0)
    {
        $this->m_OleObject->setDisplayAsIcon($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObject.setFileFormatType(int)]

      @param pInt0  int
     */
    function setFileFormatType($pInt0)
    {
        $this->m_OleObject->setFileFormatType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObject.setFileType(int)]

      @param pInt0  int
     */
    function setFileType($pInt0)
    {
        $this->m_OleObject->setFileType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObject.setImageSourceFullName(java.lang.String)]

      @param oString0  String
     */
    function setImageSourceFullName($oString0)
    {
        $this->m_OleObject->setImageSourceFullName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObject.setLink(boolean)]

      @param pBoolean0  boolean
     */
    function setLink($pBoolean0)
    {
        $this->m_OleObject->setLink($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObject.setNativeSourceFullName(java.lang.String)]

      @param oString0  String
     */
    function setNativeSourceFullName($oString0)
    {
        $this->m_OleObject->setNativeSourceFullName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObject.setObjectData(byte[])]

      @param arrP1DByte0  byte[]
     */
    function setObjectData($arrP1DByte0)
    {
        $this->m_OleObject->setObjectData($arrP1DByte0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObject.setObjectSourceFullName(java.lang.String)]

      @param oString0  String
     */
    function setObjectSourceFullName($oString0)
    {
        $this->m_OleObject->setObjectSourceFullName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObject.setProgID(java.lang.String)]

      @param oString0  String
     */
    function setProgID($oString0)
    {
        $this->m_OleObject->setProgID($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObject.setSourceFullName(java.lang.String)]

      @param oString0  String
     */
    function setSourceFullName($oString0)
    {
        $this->m_OleObject->setSourceFullName($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.OleObjectCollection]
  
 */
class OleObjectCollection extends CollectionBase
{
    public $m_OleObjectCollection;
    
    function __construct($oleObjectCollection)
    {
    	$this->m_OleObjectCollection = $oleObjectCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.OleObjectCollection.add(int, int, int, int, byte[])]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param arrP1DByte4  byte[]
      @return int
     */
    function addIIIIB($pInt0, $pInt1, $pInt2, $pInt3, $arrP1DByte4)
    {
        return $this->m_OleObjectCollection->add($pInt0, $pInt1, $pInt2, $pInt3, $arrP1DByte4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObjectCollection.add(int, int, int, int, byte[], java.lang.String)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param arrP1DByte4  byte[]
      @param oString5  String
      @return int
     */
    function addIIIIBS($pInt0, $pInt1, $pInt2, $pInt3, $arrP1DByte4, $oString5)
    {
        return $this->m_OleObjectCollection->add($pInt0, $pInt1, $pInt2, $pInt3, $arrP1DByte4, $oString5);
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObjectCollection.clear()]

     */
    function clear()
    {
        $this->m_OleObjectCollection->clear();
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObjectCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.OleObject
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_OleObjectCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.OleObjectCollection.removeAt(int)]

      @param pInt0  int
     */
    function removeAt($pInt0)
    {
        $this->m_OleObjectCollection->removeAt($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.OoxmlSaveOptions]
  
 */
class OoxmlSaveOptions extends SaveOptions
{
    public $m_OoxmlSaveOptions;
    
    function __construct($ooxmlSaveOptions)
    {
    	$this->m_OoxmlSaveOptions = $ooxmlSaveOptions;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.OoxmlSaveOptions.getExportCellName()]

      @return boolean
     */
    function getExportCellName()
    {
        return $this->m_OoxmlSaveOptions->getExportCellName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.OoxmlSaveOptions.getLightCellsDataProvider()]

      @return com.aspose.cells.LightCellsDataProvider
     */
    function getLightCellsDataProvider()
    {
        return ClassFactory::_t2($this->m_OoxmlSaveOptions->getLightCellsDataProvider());
    }

    /*
      Wrapper for java version method [com.aspose.cells.OoxmlSaveOptions.setExportCellName(boolean)]

      @param pBoolean0  boolean
     */
    function setExportCellName($pBoolean0)
    {
        $this->m_OoxmlSaveOptions->setExportCellName($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.OoxmlSaveOptions.setLightCellsDataProvider(com.aspose.cells.LightCellsDataProvider)]

      @param oLightCellsDataProvider0  com.aspose.cells.LightCellsDataProvider
     */
    function setLightCellsDataProvider($oLightCellsDataProvider0)
    {
        $this->m_OoxmlSaveOptions->setLightCellsDataProvider(ClassFactory::_t1($oLightCellsDataProvider0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.OperatorType]
  
 */
class OperatorType
{
    public $m_OperatorType;
    
    function __construct($operatorType)
    {
    	$this->m_OperatorType = $operatorType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Outline]
  
 */
class Outline
{
    public $m_Outline;
    
    function __construct($outline)
    {
    	$this->m_Outline = $outline;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Oval]
  
 */
class Oval extends Shape
{
    public $m_Oval;
    
    function __construct($oval)
    {
    	$this->m_Oval = $oval;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PageOrientationType]
  
 */
class PageOrientationType
{
    public $m_PageOrientationType;
    
    function __construct($pageOrientationType)
    {
    	$this->m_PageOrientationType = $pageOrientationType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PageSetup]
  
 */
class PageSetup
{
    public $m_PageSetup;
    
    function __construct($pageSetup)
    {
    	$this->m_PageSetup = $pageSetup;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.clearHeaderFooter()]

     */
    function clearHeaderFooter()
    {
        $this->m_PageSetup->clearHeaderFooter();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getBlackAndWhite()]

      @return boolean
     */
    function getBlackAndWhite()
    {
        return $this->m_PageSetup->getBlackAndWhite();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getBottomMargin()]

      @return double
     */
    function getBottomMargin()
    {
        return $this->m_PageSetup->getBottomMargin();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getBottomMarginInch()]

      @return double
     */
    function getBottomMarginInch()
    {
        return $this->m_PageSetup->getBottomMarginInch();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getCenterHorizontally()]

      @return boolean
     */
    function getCenterHorizontally()
    {
        return $this->m_PageSetup->getCenterHorizontally();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getCenterVertically()]

      @return boolean
     */
    function getCenterVertically()
    {
        return $this->m_PageSetup->getCenterVertically();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getCommands(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.HeaderFooterCommand[]
     */
    function getCommands($oString0)
    {
        return ClassFactory::_t2($this->m_PageSetup->getCommands($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getDraft()]

      @return boolean
     */
    function getDraft()
    {
        return $this->m_PageSetup->getDraft();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getEvenFooter(int)]

      @param pInt0  int
      @return String
     */
    function getEvenFooter($pInt0)
    {
        return $this->m_PageSetup->getEvenFooter($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getEvenHeader(int)]

      @param pInt0  int
      @return String
     */
    function getEvenHeader($pInt0)
    {
        return $this->m_PageSetup->getEvenHeader($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getFirstPageFooter(int)]

      @param pInt0  int
      @return String
     */
    function getFirstPageFooter($pInt0)
    {
        return $this->m_PageSetup->getFirstPageFooter($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getFirstPageHeader(int)]

      @param pInt0  int
      @return String
     */
    function getFirstPageHeader($pInt0)
    {
        return $this->m_PageSetup->getFirstPageHeader($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getFirstPageNumber()]

      @return int
     */
    function getFirstPageNumber()
    {
        return $this->m_PageSetup->getFirstPageNumber();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getFitToPagesTall()]

      @return int
     */
    function getFitToPagesTall()
    {
        return $this->m_PageSetup->getFitToPagesTall();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getFitToPagesWide()]

      @return int
     */
    function getFitToPagesWide()
    {
        return $this->m_PageSetup->getFitToPagesWide();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getFooter(int)]

      @param pInt0  int
      @return String
     */
    function getFooter($pInt0)
    {
        return $this->m_PageSetup->getFooter($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getFooterMargin()]

      @return double
     */
    function getFooterMargin()
    {
        return $this->m_PageSetup->getFooterMargin();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getFooterMarginInch()]

      @return double
     */
    function getFooterMarginInch()
    {
        return $this->m_PageSetup->getFooterMarginInch();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getHeader(int)]

      @param pInt0  int
      @return String
     */
    function getHeader($pInt0)
    {
        return $this->m_PageSetup->getHeader($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getHeaderMargin()]

      @return double
     */
    function getHeaderMargin()
    {
        return $this->m_PageSetup->getHeaderMargin();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getHeaderMarginInch()]

      @return double
     */
    function getHeaderMarginInch()
    {
        return $this->m_PageSetup->getHeaderMarginInch();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getLeftMargin()]

      @return double
     */
    function getLeftMargin()
    {
        return $this->m_PageSetup->getLeftMargin();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getLeftMarginInch()]

      @return double
     */
    function getLeftMarginInch()
    {
        return $this->m_PageSetup->getLeftMarginInch();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getOrder()]

      @return int
     */
    function getOrder()
    {
        return $this->m_PageSetup->getOrder();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getOrientation()]

      @return int
     */
    function getOrientation()
    {
        return $this->m_PageSetup->getOrientation();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getPaperSize()]

      @return int
     */
    function getPaperSize()
    {
        return $this->m_PageSetup->getPaperSize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getPicture(boolean, int)]

      @param pBoolean0  boolean
      @param pInt1  int
      @return com.aspose.cells.Picture
     */
    function getPictureBI($pBoolean0, $pInt1)
    {
        return ClassFactory::_t2($this->m_PageSetup->getPicture($pBoolean0, $pInt1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getPicture(boolean, boolean, boolean, int)]

      @param pBoolean0  boolean
      @param pBoolean1  boolean
      @param pBoolean2  boolean
      @param pInt3  int
      @return com.aspose.cells.Picture
     */
    function getPictureBBBI($pBoolean0, $pBoolean1, $pBoolean2, $pInt3)
    {
        return ClassFactory::_t2($this->m_PageSetup->getPicture($pBoolean0, $pBoolean1, $pBoolean2, $pInt3));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getPrintArea()]

      @return String
     */
    function getPrintArea()
    {
        return $this->m_PageSetup->getPrintArea();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getPrintComments()]

      @return int
     */
    function getPrintComments()
    {
        return $this->m_PageSetup->getPrintComments();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getPrintCopies()]

      @return int
     */
    function getPrintCopies()
    {
        return $this->m_PageSetup->getPrintCopies();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getPrintDraft()]

      @return boolean
     */
    function getPrintDraft()
    {
        return $this->m_PageSetup->getPrintDraft();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getPrintErrors()]

      @return int
     */
    function getPrintErrors()
    {
        return $this->m_PageSetup->getPrintErrors();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getPrintGridlines()]

      @return boolean
     */
    function getPrintGridlines()
    {
        return $this->m_PageSetup->getPrintGridlines();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getPrintHeadings()]

      @return boolean
     */
    function getPrintHeadings()
    {
        return $this->m_PageSetup->getPrintHeadings();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getPrintQuality()]

      @return int
     */
    function getPrintQuality()
    {
        return $this->m_PageSetup->getPrintQuality();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getPrintTitleColumns()]

      @return String
     */
    function getPrintTitleColumns()
    {
        return $this->m_PageSetup->getPrintTitleColumns();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getPrintTitleRows()]

      @return String
     */
    function getPrintTitleRows()
    {
        return $this->m_PageSetup->getPrintTitleRows();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getRightMargin()]

      @return double
     */
    function getRightMargin()
    {
        return $this->m_PageSetup->getRightMargin();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getRightMarginInch()]

      @return double
     */
    function getRightMarginInch()
    {
        return $this->m_PageSetup->getRightMarginInch();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getTopMargin()]

      @return double
     */
    function getTopMargin()
    {
        return $this->m_PageSetup->getTopMargin();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getTopMarginInch()]

      @return double
     */
    function getTopMarginInch()
    {
        return $this->m_PageSetup->getTopMarginInch();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.getZoom()]

      @return int
     */
    function getZoom()
    {
        return $this->m_PageSetup->getZoom();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.isAutoFirstPageNumber()]

      @return boolean
     */
    function isAutoFirstPageNumber()
    {
        return $this->m_PageSetup->isAutoFirstPageNumber();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.isHFAlignMargins()]

      @return boolean
     */
    function isHFAlignMargins()
    {
        return $this->m_PageSetup->isHFAlignMargins();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.isHFDiffFirst()]

      @return boolean
     */
    function isHFDiffFirst()
    {
        return $this->m_PageSetup->isHFDiffFirst();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.isHFDiffOddEven()]

      @return boolean
     */
    function isHFDiffOddEven()
    {
        return $this->m_PageSetup->isHFDiffOddEven();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.isHFScaleWithDoc()]

      @return boolean
     */
    function isHFScaleWithDoc()
    {
        return $this->m_PageSetup->isHFScaleWithDoc();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.isPercentScale()]

      @return boolean
     */
    function isPercentScale()
    {
        return $this->m_PageSetup->isPercentScale();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setAutoFirstPageNumber(boolean)]

      @param pBoolean0  boolean
     */
    function setAutoFirstPageNumber($pBoolean0)
    {
        $this->m_PageSetup->setAutoFirstPageNumber($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setBlackAndWhite(boolean)]

      @param pBoolean0  boolean
     */
    function setBlackAndWhite($pBoolean0)
    {
        $this->m_PageSetup->setBlackAndWhite($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setBottomMargin(double)]

      @param pDouble0  double
     */
    function setBottomMargin($pDouble0)
    {
        $this->m_PageSetup->setBottomMargin($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setBottomMarginInch(double)]

      @param pDouble0  double
     */
    function setBottomMarginInch($pDouble0)
    {
        $this->m_PageSetup->setBottomMarginInch($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setCenterHorizontally(boolean)]

      @param pBoolean0  boolean
     */
    function setCenterHorizontally($pBoolean0)
    {
        $this->m_PageSetup->setCenterHorizontally($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setCenterVertically(boolean)]

      @param pBoolean0  boolean
     */
    function setCenterVertically($pBoolean0)
    {
        $this->m_PageSetup->setCenterVertically($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setDraft(boolean)]

      @param pBoolean0  boolean
     */
    function setDraft($pBoolean0)
    {
        $this->m_PageSetup->setDraft($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setEvenFooter(int, java.lang.String)]

      @param pInt0  int
      @param oString1  String
     */
    function setEvenFooter($pInt0, $oString1)
    {
        $this->m_PageSetup->setEvenFooter($pInt0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setEvenHeader(int, java.lang.String)]

      @param pInt0  int
      @param oString1  String
     */
    function setEvenHeader($pInt0, $oString1)
    {
        $this->m_PageSetup->setEvenHeader($pInt0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setFirstPageFooter(int, java.lang.String)]

      @param pInt0  int
      @param oString1  String
     */
    function setFirstPageFooter($pInt0, $oString1)
    {
        $this->m_PageSetup->setFirstPageFooter($pInt0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setFirstPageHeader(int, java.lang.String)]

      @param pInt0  int
      @param oString1  String
     */
    function setFirstPageHeader($pInt0, $oString1)
    {
        $this->m_PageSetup->setFirstPageHeader($pInt0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setFirstPageNumber(int)]

      @param pInt0  int
     */
    function setFirstPageNumber($pInt0)
    {
        $this->m_PageSetup->setFirstPageNumber($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setFitToPagesTall(int)]

      @param pInt0  int
     */
    function setFitToPagesTall($pInt0)
    {
        $this->m_PageSetup->setFitToPagesTall($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setFitToPagesWide(int)]

      @param pInt0  int
     */
    function setFitToPagesWide($pInt0)
    {
        $this->m_PageSetup->setFitToPagesWide($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setFooter(int, java.lang.String)]

      @param pInt0  int
      @param oString1  String
     */
    function setFooter($pInt0, $oString1)
    {
        $this->m_PageSetup->setFooter($pInt0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setFooterMargin(double)]

      @param pDouble0  double
     */
    function setFooterMargin($pDouble0)
    {
        $this->m_PageSetup->setFooterMargin($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setFooterMarginInch(double)]

      @param pDouble0  double
     */
    function setFooterMarginInch($pDouble0)
    {
        $this->m_PageSetup->setFooterMarginInch($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setFooterPicture(int, byte[])]

      @param pInt0  int
      @param arrP1DByte1  byte[]
      @return com.aspose.cells.Picture
     */
    function setFooterPicture($pInt0, $arrP1DByte1)
    {
        return ClassFactory::_t2($this->m_PageSetup->setFooterPicture($pInt0, $arrP1DByte1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setHFAlignMargins(boolean)]

      @param pBoolean0  boolean
     */
    function setHFAlignMargins($pBoolean0)
    {
        $this->m_PageSetup->setHFAlignMargins($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setHFDiffFirst(boolean)]

      @param pBoolean0  boolean
     */
    function setHFDiffFirst($pBoolean0)
    {
        $this->m_PageSetup->setHFDiffFirst($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setHFDiffOddEven(boolean)]

      @param pBoolean0  boolean
     */
    function setHFDiffOddEven($pBoolean0)
    {
        $this->m_PageSetup->setHFDiffOddEven($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setHFScaleWithDoc(boolean)]

      @param pBoolean0  boolean
     */
    function setHFScaleWithDoc($pBoolean0)
    {
        $this->m_PageSetup->setHFScaleWithDoc($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setHeader(int, java.lang.String)]

      @param pInt0  int
      @param oString1  String
     */
    function setHeader($pInt0, $oString1)
    {
        $this->m_PageSetup->setHeader($pInt0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setHeaderMargin(double)]

      @param pDouble0  double
     */
    function setHeaderMargin($pDouble0)
    {
        $this->m_PageSetup->setHeaderMargin($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setHeaderMarginInch(double)]

      @param pDouble0  double
     */
    function setHeaderMarginInch($pDouble0)
    {
        $this->m_PageSetup->setHeaderMarginInch($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setHeaderPicture(int, byte[])]

      @param pInt0  int
      @param arrP1DByte1  byte[]
      @return com.aspose.cells.Picture
     */
    function setHeaderPicture($pInt0, $arrP1DByte1)
    {
        return ClassFactory::_t2($this->m_PageSetup->setHeaderPicture($pInt0, $arrP1DByte1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setLeftMargin(double)]

      @param pDouble0  double
     */
    function setLeftMargin($pDouble0)
    {
        $this->m_PageSetup->setLeftMargin($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setLeftMarginInch(double)]

      @param pDouble0  double
     */
    function setLeftMarginInch($pDouble0)
    {
        $this->m_PageSetup->setLeftMarginInch($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setOrder(int)]

      @param pInt0  int
     */
    function setOrder($pInt0)
    {
        $this->m_PageSetup->setOrder($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setOrientation(int)]

      @param pInt0  int
     */
    function setOrientation($pInt0)
    {
        $this->m_PageSetup->setOrientation($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setPaperSize(int)]

      @param pInt0  int
     */
    function setPaperSize($pInt0)
    {
        $this->m_PageSetup->setPaperSize($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setPercentScale(boolean)]

      @param pBoolean0  boolean
     */
    function setPercentScale($pBoolean0)
    {
        $this->m_PageSetup->setPercentScale($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setPicture(boolean, boolean, boolean, int, byte[])]

      @param pBoolean0  boolean
      @param pBoolean1  boolean
      @param pBoolean2  boolean
      @param pInt3  int
      @param arrP1DByte4  byte[]
      @return com.aspose.cells.Picture
     */
    function setPicture($pBoolean0, $pBoolean1, $pBoolean2, $pInt3, $arrP1DByte4)
    {
        return ClassFactory::_t2($this->m_PageSetup->setPicture($pBoolean0, $pBoolean1, $pBoolean2, $pInt3, $arrP1DByte4));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setPrintArea(java.lang.String)]

      @param oString0  String
     */
    function setPrintArea($oString0)
    {
        $this->m_PageSetup->setPrintArea($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setPrintComments(int)]

      @param pInt0  int
     */
    function setPrintComments($pInt0)
    {
        $this->m_PageSetup->setPrintComments($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setPrintCopies(int)]

      @param pInt0  int
     */
    function setPrintCopies($pInt0)
    {
        $this->m_PageSetup->setPrintCopies($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setPrintDraft(boolean)]

      @param pBoolean0  boolean
     */
    function setPrintDraft($pBoolean0)
    {
        $this->m_PageSetup->setPrintDraft($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setPrintErrors(int)]

      @param pInt0  int
     */
    function setPrintErrors($pInt0)
    {
        $this->m_PageSetup->setPrintErrors($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setPrintGridlines(boolean)]

      @param pBoolean0  boolean
     */
    function setPrintGridlines($pBoolean0)
    {
        $this->m_PageSetup->setPrintGridlines($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setPrintHeadings(boolean)]

      @param pBoolean0  boolean
     */
    function setPrintHeadings($pBoolean0)
    {
        $this->m_PageSetup->setPrintHeadings($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setPrintQuality(int)]

      @param pInt0  int
     */
    function setPrintQuality($pInt0)
    {
        $this->m_PageSetup->setPrintQuality($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setPrintTitleColumns(java.lang.String)]

      @param oString0  String
     */
    function setPrintTitleColumns($oString0)
    {
        $this->m_PageSetup->setPrintTitleColumns($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setPrintTitleRows(java.lang.String)]

      @param oString0  String
     */
    function setPrintTitleRows($oString0)
    {
        $this->m_PageSetup->setPrintTitleRows($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setRightMargin(double)]

      @param pDouble0  double
     */
    function setRightMargin($pDouble0)
    {
        $this->m_PageSetup->setRightMargin($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setRightMarginInch(double)]

      @param pDouble0  double
     */
    function setRightMarginInch($pDouble0)
    {
        $this->m_PageSetup->setRightMarginInch($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setTopMargin(double)]

      @param pDouble0  double
     */
    function setTopMargin($pDouble0)
    {
        $this->m_PageSetup->setTopMargin($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setTopMarginInch(double)]

      @param pDouble0  double
     */
    function setTopMarginInch($pDouble0)
    {
        $this->m_PageSetup->setTopMarginInch($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PageSetup.setZoom(int)]

      @param pInt0  int
     */
    function setZoom($pInt0)
    {
        $this->m_PageSetup->setZoom($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.PaneCollection]
  
 */
class PaneCollection
{
    public $m_PaneCollection;
    
    function __construct($paneCollection)
    {
    	$this->m_PaneCollection = $paneCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.PaneCollection.getAcitvePaneType()]

      @return int
     */
    function getAcitvePaneType()
    {
        return $this->m_PaneCollection->getAcitvePaneType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PaneCollection.getFirstVisibleColumnOfRightPane()]

      @return int
     */
    function getFirstVisibleColumnOfRightPane()
    {
        return $this->m_PaneCollection->getFirstVisibleColumnOfRightPane();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PaneCollection.getFirstVisibleRowOfBottomPane()]

      @return int
     */
    function getFirstVisibleRowOfBottomPane()
    {
        return $this->m_PaneCollection->getFirstVisibleRowOfBottomPane();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PaneCollection.setAcitvePaneType(int)]

      @param pInt0  int
     */
    function setAcitvePaneType($pInt0)
    {
        $this->m_PaneCollection->setAcitvePaneType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PaneCollection.setFirstVisibleColumnOfRightPane(int)]

      @param pInt0  int
     */
    function setFirstVisibleColumnOfRightPane($pInt0)
    {
        $this->m_PaneCollection->setFirstVisibleColumnOfRightPane($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PaneCollection.setFirstVisibleRowOfBottomPane(int)]

      @param pInt0  int
     */
    function setFirstVisibleRowOfBottomPane($pInt0)
    {
        $this->m_PaneCollection->setFirstVisibleRowOfBottomPane($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.PaperSizeType]
  
 */
class PaperSizeType
{
    public $m_PaperSizeType;
    
    function __construct($paperSizeType)
    {
    	$this->m_PaperSizeType = $paperSizeType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.ParameterType]
  
 */
class ParameterType
{
    public $m_ParameterType;
    
    function __construct($parameterType)
    {
    	$this->m_ParameterType = $parameterType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.ParsedInfo]
  
 */
class ParsedInfo
{
    public $m_ParsedInfo;
    
    function __construct($parsedInfo)
    {
    	$this->m_ParsedInfo = $parsedInfo;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ParsedInfo.getCurrency()]

      @return String
     */
    function getCurrency()
    {
        return $this->m_ParsedInfo->getCurrency();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ParsedInfo.getFormat()]

      @return String
     */
    function getFormat()
    {
        return $this->m_ParsedInfo->getFormat();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ParsedInfo.getPercent()]

      @return String
     */
    function getPercent()
    {
        return $this->m_ParsedInfo->getPercent();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ParsedInfo.getValue()]

      @return corresponding java type is {java.lang.Object}
     */
    function getValue()
    {
        return ClassFactory::_t2($this->m_ParsedInfo->getValue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ParsedInfo.getValueType()]

      @return int
     */
    function getValueType()
    {
        return $this->m_ParsedInfo->getValueType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ParsedInfo.reset()]

     */
    function reset()
    {
        $this->m_ParsedInfo->reset();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ParsedInfo.setCurrency(java.lang.String)]

      @param oString0  String
     */
    function setCurrency($oString0)
    {
        $this->m_ParsedInfo->setCurrency($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ParsedInfo.setFormat(java.lang.String)]

      @param oString0  String
     */
    function setFormat($oString0)
    {
        $this->m_ParsedInfo->setFormat($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ParsedInfo.setPercent(java.lang.String)]

      @param oString0  String
     */
    function setPercent($oString0)
    {
        $this->m_ParsedInfo->setPercent($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ParsedInfo.setValue(int, java.lang.Object)]

      @param pInt0  int
      @param oObject1  corresponding java type is {java.lang.Object}
     */
    function setValue($pInt0, $oObject1)
    {
        $this->m_ParsedInfo->setValue($pInt0, ClassFactory::_t1($oObject1));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.PasteOptions]
  
 */
class PasteOptions
{
    public $m_PasteOptions;
    
    function __construct($pasteOptions)
    {
    	$this->m_PasteOptions = $pasteOptions;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.PasteOptions.getPasteType()]

      @return int
     */
    function getPasteType()
    {
        return $this->m_PasteOptions->getPasteType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PasteOptions.getSkipBlanks()]

      @return boolean
     */
    function getSkipBlanks()
    {
        return $this->m_PasteOptions->getSkipBlanks();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PasteOptions.getTranspose()]

      @return boolean
     */
    function getTranspose()
    {
        return $this->m_PasteOptions->getTranspose();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PasteOptions.setPasteType(int)]

      @param pInt0  int
     */
    function setPasteType($pInt0)
    {
        $this->m_PasteOptions->setPasteType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PasteOptions.setSkipBlanks(boolean)]

      @param pBoolean0  boolean
     */
    function setSkipBlanks($pBoolean0)
    {
        $this->m_PasteOptions->setSkipBlanks($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PasteOptions.setTranspose(boolean)]

      @param pBoolean0  boolean
     */
    function setTranspose($pBoolean0)
    {
        $this->m_PasteOptions->setTranspose($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.PasteType]
  
 */
class PasteType
{
    public $m_PasteType;
    
    function __construct($pasteType)
    {
    	$this->m_PasteType = $pasteType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PatternFill]
  
 */
class PatternFill
{
    public $m_PatternFill;
    
    function __construct($patternFill)
    {
    	$this->m_PatternFill = $patternFill;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.PatternFill.getBackTransparency()]

      @return double
     */
    function getBackTransparency()
    {
        return $this->m_PatternFill->getBackTransparency();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PatternFill.getBackgroundCellsColor()]

      @return com.aspose.cells.CellsColor
     */
    function getBackgroundCellsColor()
    {
        return ClassFactory::_t2($this->m_PatternFill->getBackgroundCellsColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PatternFill.getBackgroundColor()]

      @return com.aspose.cells.Color
     */
    function getBackgroundColor()
    {
        return ClassFactory::_t2($this->m_PatternFill->getBackgroundColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PatternFill.getForeTransparency()]

      @return double
     */
    function getForeTransparency()
    {
        return $this->m_PatternFill->getForeTransparency();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PatternFill.getForegroundCellsColor()]

      @return com.aspose.cells.CellsColor
     */
    function getForegroundCellsColor()
    {
        return ClassFactory::_t2($this->m_PatternFill->getForegroundCellsColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PatternFill.getForegroundColor()]

      @return com.aspose.cells.Color
     */
    function getForegroundColor()
    {
        return ClassFactory::_t2($this->m_PatternFill->getForegroundColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PatternFill.getPattern()]

      @return int
     */
    function getPattern()
    {
        return $this->m_PatternFill->getPattern();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PatternFill.setBackTransparency(double)]

      @param pDouble0  double
     */
    function setBackTransparency($pDouble0)
    {
        $this->m_PatternFill->setBackTransparency($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PatternFill.setBackgroundCellsColor(com.aspose.cells.CellsColor)]

      @param oCellsColor0  com.aspose.cells.CellsColor
     */
    function setBackgroundCellsColor($oCellsColor0)
    {
        $this->m_PatternFill->setBackgroundCellsColor(ClassFactory::_t1($oCellsColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PatternFill.setBackgroundColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setBackgroundColor($oColor0)
    {
        $this->m_PatternFill->setBackgroundColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PatternFill.setForeTransparency(double)]

      @param pDouble0  double
     */
    function setForeTransparency($pDouble0)
    {
        $this->m_PatternFill->setForeTransparency($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PatternFill.setForegroundCellsColor(com.aspose.cells.CellsColor)]

      @param oCellsColor0  com.aspose.cells.CellsColor
     */
    function setForegroundCellsColor($oCellsColor0)
    {
        $this->m_PatternFill->setForegroundCellsColor(ClassFactory::_t1($oCellsColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PatternFill.setForegroundColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setForegroundColor($oColor0)
    {
        $this->m_PatternFill->setForegroundColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PatternFill.setPattern(int)]

      @param pInt0  int
     */
    function setPattern($pInt0)
    {
        $this->m_PatternFill->setPattern($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.PdfBookmarkEntry]
  
 */
class PdfBookmarkEntry
{
    public $m_PdfBookmarkEntry;
    
    function __construct($pdfBookmarkEntry)
    {
    	$this->m_PdfBookmarkEntry = $pdfBookmarkEntry;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.PdfBookmarkEntry.getDestination()]

      @return com.aspose.cells.Cell
     */
    function getDestination()
    {
        return ClassFactory::_t2($this->m_PdfBookmarkEntry->getDestination());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfBookmarkEntry.getSubEntry()]

      @return array, corresponding java type is {java.util.ArrayList}
     */
    function getSubEntry()
    {
        return ClassFactory::_t2($this->m_PdfBookmarkEntry->getSubEntry());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfBookmarkEntry.getText()]

      @return String
     */
    function getText()
    {
        return $this->m_PdfBookmarkEntry->getText();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfBookmarkEntry.isCollapse()]

      @return boolean
     */
    function isCollapse()
    {
        return $this->m_PdfBookmarkEntry->isCollapse();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfBookmarkEntry.isOpen()]

      @return boolean
     */
    function isOpen()
    {
        return $this->m_PdfBookmarkEntry->isOpen();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfBookmarkEntry.setCollapse(boolean)]

      @param pBoolean0  boolean
     */
    function setCollapse($pBoolean0)
    {
        $this->m_PdfBookmarkEntry->setCollapse($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfBookmarkEntry.setDestination(com.aspose.cells.Cell)]

      @param oCell0  com.aspose.cells.Cell
     */
    function setDestination($oCell0)
    {
        $this->m_PdfBookmarkEntry->setDestination(ClassFactory::_t1($oCell0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfBookmarkEntry.setOpen(boolean)]

      @param pBoolean0  boolean
     */
    function setOpen($pBoolean0)
    {
        $this->m_PdfBookmarkEntry->setOpen($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfBookmarkEntry.setSubEntry(java.util.ArrayList)]

      @param arrA1DFromArrayList0  array, corresponding java type is {java.util.ArrayList}
     */
    function setSubEntry($arrA1DFromArrayList0)
    {
        $this->m_PdfBookmarkEntry->setSubEntry(ClassFactory::_t1($arrA1DFromArrayList0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfBookmarkEntry.setText(java.lang.String)]

      @param oString0  String
     */
    function setText($oString0)
    {
        $this->m_PdfBookmarkEntry->setText($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.PdfCompliance]
  
 */
class PdfCompliance
{
    public $m_PdfCompliance;
    
    function __construct($pdfCompliance)
    {
    	$this->m_PdfCompliance = $pdfCompliance;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PdfCompressionCore]
  
 */
class PdfCompressionCore
{
    public $m_PdfCompressionCore;
    
    function __construct($pdfCompressionCore)
    {
    	$this->m_PdfCompressionCore = $pdfCompressionCore;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PdfSaveOptions]
  
 */
class PdfSaveOptions extends SaveOptions
{
    public $m_PdfSaveOptions;
    
    function __construct($pdfSaveOptions)
    {
    	$this->m_PdfSaveOptions = $pdfSaveOptions;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.getAllColumnsInOnePagePerSheet()]

      @return boolean
     */
    function getAllColumnsInOnePagePerSheet()
    {
        return $this->m_PdfSaveOptions->getAllColumnsInOnePagePerSheet();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.getBookmark()]

      @return com.aspose.cells.PdfBookmarkEntry
     */
    function getBookmark()
    {
        return ClassFactory::_t2($this->m_PdfSaveOptions->getBookmark());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.getCalculateFormula()]

      @return boolean
     */
    function getCalculateFormula()
    {
        return $this->m_PdfSaveOptions->getCalculateFormula();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.getCheckFontCompatibility()]

      @return boolean
     */
    function getCheckFontCompatibility()
    {
        return $this->m_PdfSaveOptions->getCheckFontCompatibility();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.getCompliance()]

      @return int
     */
    function getCompliance()
    {
        return $this->m_PdfSaveOptions->getCompliance();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.getCreatedTime()]

      @return corresponding java type is {com.aspose.cells.DateTime}
     */
    function getCreatedTime()
    {
        return ClassFactory::_t2($this->m_PdfSaveOptions->getCreatedTime());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.getDefaultFont()]

      @return String
     */
    function getDefaultFont()
    {
        return $this->m_PdfSaveOptions->getDefaultFont();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.getEmbedStandardWindowsFonts()]

      @return boolean
     */
    function getEmbedStandardWindowsFonts()
    {
        return $this->m_PdfSaveOptions->getEmbedStandardWindowsFonts();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.getImageType()]

      @return com.aspose.cells.ImageFormat
     */
    function getImageType()
    {
        return ClassFactory::_t2($this->m_PdfSaveOptions->getImageType());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.getOnePagePerSheet()]

      @return boolean
     */
    function getOnePagePerSheet()
    {
        return $this->m_PdfSaveOptions->getOnePagePerSheet();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.getPageCount()]

      @return int
     */
    function getPageCount()
    {
        return $this->m_PdfSaveOptions->getPageCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.getPageIndex()]

      @return int
     */
    function getPageIndex()
    {
        return $this->m_PdfSaveOptions->getPageIndex();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.getPdfCompression()]

      @return int
     */
    function getPdfCompression()
    {
        return $this->m_PdfSaveOptions->getPdfCompression();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.getPrintingPageType()]

      @return int
     */
    function getPrintingPageType()
    {
        return $this->m_PdfSaveOptions->getPrintingPageType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.getSecurityOptions()]

      @return com.aspose.cells.PdfSecurityOptions
     */
    function getSecurityOptions()
    {
        return ClassFactory::_t2($this->m_PdfSaveOptions->getSecurityOptions());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.setAllColumnsInOnePagePerSheet(boolean)]

      @param pBoolean0  boolean
     */
    function setAllColumnsInOnePagePerSheet($pBoolean0)
    {
        $this->m_PdfSaveOptions->setAllColumnsInOnePagePerSheet($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.setBookmark(com.aspose.cells.PdfBookmarkEntry)]

      @param oPdfBookmarkEntry0  com.aspose.cells.PdfBookmarkEntry
     */
    function setBookmark($oPdfBookmarkEntry0)
    {
        $this->m_PdfSaveOptions->setBookmark(ClassFactory::_t1($oPdfBookmarkEntry0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.setCalculateFormula(boolean)]

      @param pBoolean0  boolean
     */
    function setCalculateFormula($pBoolean0)
    {
        $this->m_PdfSaveOptions->setCalculateFormula($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.setCheckFontCompatibility(boolean)]

      @param pBoolean0  boolean
     */
    function setCheckFontCompatibility($pBoolean0)
    {
        $this->m_PdfSaveOptions->setCheckFontCompatibility($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.setCompliance(int)]

      @param pInt0  int
     */
    function setCompliance($pInt0)
    {
        $this->m_PdfSaveOptions->setCompliance($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.setCreatedTime(com.aspose.cells.DateTime)]

      @param oCells_DateTime0  corresponding java type is {com.aspose.cells.DateTime}
     */
    function setCreatedTime($oCells_DateTime0)
    {
        $this->m_PdfSaveOptions->setCreatedTime(ClassFactory::_t1($oCells_DateTime0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.setDefaultFont(java.lang.String)]

      @param oString0  String
     */
    function setDefaultFont($oString0)
    {
        $this->m_PdfSaveOptions->setDefaultFont($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.setEmbedStandardWindowsFonts(boolean)]

      @param pBoolean0  boolean
     */
    function setEmbedStandardWindowsFonts($pBoolean0)
    {
        $this->m_PdfSaveOptions->setEmbedStandardWindowsFonts($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.setImageResample(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function setImageResample($pInt0, $pInt1)
    {
        $this->m_PdfSaveOptions->setImageResample($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.setImageType(com.aspose.cells.ImageFormat)]

      @param oImageFormat0  com.aspose.cells.ImageFormat
     */
    function setImageType($oImageFormat0)
    {
        $this->m_PdfSaveOptions->setImageType(ClassFactory::_t1($oImageFormat0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.setOnePagePerSheet(boolean)]

      @param pBoolean0  boolean
     */
    function setOnePagePerSheet($pBoolean0)
    {
        $this->m_PdfSaveOptions->setOnePagePerSheet($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.setPageCount(int)]

      @param pInt0  int
     */
    function setPageCount($pInt0)
    {
        $this->m_PdfSaveOptions->setPageCount($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.setPageIndex(int)]

      @param pInt0  int
     */
    function setPageIndex($pInt0)
    {
        $this->m_PdfSaveOptions->setPageIndex($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.setPdfCompression(int)]

      @param pInt0  int
     */
    function setPdfCompression($pInt0)
    {
        $this->m_PdfSaveOptions->setPdfCompression($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.setPrintingPageType(int)]

      @param pInt0  int
     */
    function setPrintingPageType($pInt0)
    {
        $this->m_PdfSaveOptions->setPrintingPageType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSaveOptions.setSecurityOptions(com.aspose.cells.PdfSecurityOptions)]

      @param oPdfSecurityOptions0  com.aspose.cells.PdfSecurityOptions
     */
    function setSecurityOptions($oPdfSecurityOptions0)
    {
        $this->m_PdfSaveOptions->setSecurityOptions(ClassFactory::_t1($oPdfSecurityOptions0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.PdfSecurityOptions]
  
 */
class PdfSecurityOptions
{
    public $m_PdfSecurityOptions;
    
    function __construct($pdfSecurityOptions)
    {
    	$this->m_PdfSecurityOptions = $pdfSecurityOptions;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.PdfSecurityOptions.getAnnotationsPermission()]

      @return boolean
     */
    function getAnnotationsPermission()
    {
        return $this->m_PdfSecurityOptions->getAnnotationsPermission();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSecurityOptions.getAssembleDocumentPermission()]

      @return boolean
     */
    function getAssembleDocumentPermission()
    {
        return $this->m_PdfSecurityOptions->getAssembleDocumentPermission();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSecurityOptions.getExtractContentPermission()]

      @return boolean
     */
    function getExtractContentPermission()
    {
        return $this->m_PdfSecurityOptions->getExtractContentPermission();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSecurityOptions.getExtractContentPermissionObsolete()]

      @return boolean
     */
    function getExtractContentPermissionObsolete()
    {
        return $this->m_PdfSecurityOptions->getExtractContentPermissionObsolete();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSecurityOptions.getFillFormsPermission()]

      @return boolean
     */
    function getFillFormsPermission()
    {
        return $this->m_PdfSecurityOptions->getFillFormsPermission();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSecurityOptions.getFullQualityPrintPermission()]

      @return boolean
     */
    function getFullQualityPrintPermission()
    {
        return $this->m_PdfSecurityOptions->getFullQualityPrintPermission();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSecurityOptions.getModifyDocumentPermission()]

      @return boolean
     */
    function getModifyDocumentPermission()
    {
        return $this->m_PdfSecurityOptions->getModifyDocumentPermission();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSecurityOptions.getOwnerPassword()]

      @return String
     */
    function getOwnerPassword()
    {
        return $this->m_PdfSecurityOptions->getOwnerPassword();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSecurityOptions.getPrintPermission()]

      @return boolean
     */
    function getPrintPermission()
    {
        return $this->m_PdfSecurityOptions->getPrintPermission();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSecurityOptions.getUserPassword()]

      @return String
     */
    function getUserPassword()
    {
        return $this->m_PdfSecurityOptions->getUserPassword();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSecurityOptions.setAnnotationsPermission(boolean)]

      @param pBoolean0  boolean
     */
    function setAnnotationsPermission($pBoolean0)
    {
        $this->m_PdfSecurityOptions->setAnnotationsPermission($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSecurityOptions.setAssembleDocumentPermission(boolean)]

      @param pBoolean0  boolean
     */
    function setAssembleDocumentPermission($pBoolean0)
    {
        $this->m_PdfSecurityOptions->setAssembleDocumentPermission($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSecurityOptions.setExtractContentPermission(boolean)]

      @param pBoolean0  boolean
     */
    function setExtractContentPermission($pBoolean0)
    {
        $this->m_PdfSecurityOptions->setExtractContentPermission($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSecurityOptions.setExtractContentPermissionObsolete(boolean)]

      @param pBoolean0  boolean
     */
    function setExtractContentPermissionObsolete($pBoolean0)
    {
        $this->m_PdfSecurityOptions->setExtractContentPermissionObsolete($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSecurityOptions.setFillFormsPermission(boolean)]

      @param pBoolean0  boolean
     */
    function setFillFormsPermission($pBoolean0)
    {
        $this->m_PdfSecurityOptions->setFillFormsPermission($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSecurityOptions.setFullQualityPrintPermission(boolean)]

      @param pBoolean0  boolean
     */
    function setFullQualityPrintPermission($pBoolean0)
    {
        $this->m_PdfSecurityOptions->setFullQualityPrintPermission($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSecurityOptions.setModifyDocumentPermission(boolean)]

      @param pBoolean0  boolean
     */
    function setModifyDocumentPermission($pBoolean0)
    {
        $this->m_PdfSecurityOptions->setModifyDocumentPermission($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSecurityOptions.setOwnerPassword(java.lang.String)]

      @param oString0  String
     */
    function setOwnerPassword($oString0)
    {
        $this->m_PdfSecurityOptions->setOwnerPassword($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSecurityOptions.setPrintPermission(boolean)]

      @param pBoolean0  boolean
     */
    function setPrintPermission($pBoolean0)
    {
        $this->m_PdfSecurityOptions->setPrintPermission($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PdfSecurityOptions.setUserPassword(java.lang.String)]

      @param oString0  String
     */
    function setUserPassword($oString0)
    {
        $this->m_PdfSecurityOptions->setUserPassword($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.PicFormatOption]
  
 */
class PicFormatOption
{
    public $m_PicFormatOption;
    
    function __construct($picFormatOption)
    {
    	$this->m_PicFormatOption = $picFormatOption;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.PicFormatOption.getBottom()]

      @return double
     */
    function getBottom()
    {
        return $this->m_PicFormatOption->getBottom();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PicFormatOption.getLeft()]

      @return double
     */
    function getLeft()
    {
        return $this->m_PicFormatOption->getLeft();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PicFormatOption.getRight()]

      @return double
     */
    function getRight()
    {
        return $this->m_PicFormatOption->getRight();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PicFormatOption.getScale()]

      @return double
     */
    function getScale()
    {
        return $this->m_PicFormatOption->getScale();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PicFormatOption.getTop()]

      @return double
     */
    function getTop()
    {
        return $this->m_PicFormatOption->getTop();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PicFormatOption.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_PicFormatOption->getType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PicFormatOption.setBottom(double)]

      @param pDouble0  double
     */
    function setBottom($pDouble0)
    {
        $this->m_PicFormatOption->setBottom($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PicFormatOption.setLeft(double)]

      @param pDouble0  double
     */
    function setLeft($pDouble0)
    {
        $this->m_PicFormatOption->setLeft($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PicFormatOption.setRight(double)]

      @param pDouble0  double
     */
    function setRight($pDouble0)
    {
        $this->m_PicFormatOption->setRight($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PicFormatOption.setScale(double)]

      @param pDouble0  double
     */
    function setScale($pDouble0)
    {
        $this->m_PicFormatOption->setScale($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PicFormatOption.setTop(double)]

      @param pDouble0  double
     */
    function setTop($pDouble0)
    {
        $this->m_PicFormatOption->setTop($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PicFormatOption.setType(int)]

      @param pInt0  int
     */
    function setType($pInt0)
    {
        $this->m_PicFormatOption->setType($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.Picture]
  
 */
class Picture extends Shape
{
    public $m_Picture;
    
    function __construct($picture)
    {
    	$this->m_Picture = $picture;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Picture.getBorderLineColor()]

      @return com.aspose.cells.Color
     */
    function getBorderLineColor()
    {
        return ClassFactory::_t2($this->m_Picture->getBorderLineColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.getBorderWeight()]

      @return double
     */
    function getBorderWeight()
    {
        return $this->m_Picture->getBorderWeight();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.getData()]

      @return byte[]
     */
    function getData()
    {
        return $this->m_Picture->getData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.getDisplayAsIcon()]

      @return boolean
     */
    function getDisplayAsIcon()
    {
        return $this->m_Picture->getDisplayAsIcon();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.getFormula()]

      @return String
     */
    function getFormula()
    {
        return $this->m_Picture->getFormula();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.getImageFormat()]

      @return com.aspose.cells.ImageFormat
     */
    function getImageFormat()
    {
        return ClassFactory::_t2($this->m_Picture->getImageFormat());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.getOriginalHeight()]

      @return int
     */
    function getOriginalHeight()
    {
        return $this->m_Picture->getOriginalHeight();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.getOriginalHeightCM()]

      @return double
     */
    function getOriginalHeightCM()
    {
        return $this->m_Picture->getOriginalHeightCM();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.getOriginalHeightInch()]

      @return double
     */
    function getOriginalHeightInch()
    {
        return $this->m_Picture->getOriginalHeightInch();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.getOriginalWidth()]

      @return int
     */
    function getOriginalWidth()
    {
        return $this->m_Picture->getOriginalWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.getOriginalWidthCM()]

      @return double
     */
    function getOriginalWidthCM()
    {
        return $this->m_Picture->getOriginalWidthCM();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.getOriginalWidthInch()]

      @return double
     */
    function getOriginalWidthInch()
    {
        return $this->m_Picture->getOriginalWidthInch();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.getSourceFullName()]

      @return String
     */
    function getSourceFullName()
    {
        return $this->m_Picture->getSourceFullName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.isAutoSize()]

      @return boolean
     */
    function isAutoSize()
    {
        return $this->m_Picture->isAutoSize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.isDynamicDataExchange()]

      @return boolean
     */
    function isDynamicDataExchange()
    {
        return $this->m_Picture->isDynamicDataExchange();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.isLink()]

      @return boolean
     */
    function isLink()
    {
        return $this->m_Picture->isLink();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.move(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function move($pInt0, $pInt1)
    {
        $this->m_Picture->move($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.setAutoSize(boolean)]

      @param pBoolean0  boolean
     */
    function setAutoSize($pBoolean0)
    {
        $this->m_Picture->setAutoSize($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.setBorderLineColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setBorderLineColor($oColor0)
    {
        $this->m_Picture->setBorderLineColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.setBorderWeight(double)]

      @param pDouble0  double
     */
    function setBorderWeight($pDouble0)
    {
        $this->m_Picture->setBorderWeight($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.setData(byte[])]

      @param arrP1DByte0  byte[]
     */
    function setData($arrP1DByte0)
    {
        $this->m_Picture->setData($arrP1DByte0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.setDisplayAsIcon(boolean)]

      @param pBoolean0  boolean
     */
    function setDisplayAsIcon($pBoolean0)
    {
        $this->m_Picture->setDisplayAsIcon($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.setDynamicDataExchange(boolean)]

      @param pBoolean0  boolean
     */
    function setDynamicDataExchange($pBoolean0)
    {
        $this->m_Picture->setDynamicDataExchange($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.setFormula(java.lang.String)]

      @param oString0  String
     */
    function setFormula($oString0)
    {
        $this->m_Picture->setFormula($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.setLink(boolean)]

      @param pBoolean0  boolean
     */
    function setLink($pBoolean0)
    {
        $this->m_Picture->setLink($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Picture.setSourceFullName(java.lang.String)]

      @param oString0  String
     */
    function setSourceFullName($oString0)
    {
        $this->m_Picture->setSourceFullName($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.PictureCollection]
  
 */
class PictureCollection extends CollectionBase
{
    public $m_PictureCollection;
    
    function __construct($pictureCollection)
    {
    	$this->m_PictureCollection = $pictureCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.PictureCollection.add(int, int, java.io.InputStream)]

      @param pInt0  int
      @param pInt1  int
      @param oInputStream2  corresponding java type is {java.io.InputStream}
      @return int
     */
    function addIII($pInt0, $pInt1, $oInputStream2)
    {
        return $this->m_PictureCollection->add($pInt0, $pInt1, ClassFactory::_t1($oInputStream2));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PictureCollection.add(int, int, java.lang.String)]

      @param pInt0  int
      @param pInt1  int
      @param oString2  String
      @return int
     */
    function addIIS($pInt0, $pInt1, $oString2)
    {
        return $this->m_PictureCollection->add($pInt0, $pInt1, $oString2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PictureCollection.add(int, int, int, int, java.io.InputStream)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param oInputStream4  corresponding java type is {java.io.InputStream}
      @return int
     */
    function addIIIII($pInt0, $pInt1, $pInt2, $pInt3, $oInputStream4)
    {
        return $this->m_PictureCollection->add($pInt0, $pInt1, $pInt2, $pInt3, ClassFactory::_t1($oInputStream4));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PictureCollection.add(int, int, int, int, java.lang.String)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param oString4  String
      @return int
     */
    function addIIIIS($pInt0, $pInt1, $pInt2, $pInt3, $oString4)
    {
        return $this->m_PictureCollection->add($pInt0, $pInt1, $pInt2, $pInt3, $oString4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PictureCollection.add(int, int, java.io.InputStream, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param oInputStream2  corresponding java type is {java.io.InputStream}
      @param pInt3  int
      @param pInt4  int
      @return int
     */
    function addIIIII1($pInt0, $pInt1, $oInputStream2, $pInt3, $pInt4)
    {
        return $this->m_PictureCollection->add($pInt0, $pInt1, ClassFactory::_t1($oInputStream2), $pInt3, $pInt4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PictureCollection.add(int, int, java.lang.String, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param oString2  String
      @param pInt3  int
      @param pInt4  int
      @return int
     */
    function addIISII($pInt0, $pInt1, $oString2, $pInt3, $pInt4)
    {
        return $this->m_PictureCollection->add($pInt0, $pInt1, $oString2, $pInt3, $pInt4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PictureCollection.clear()]

     */
    function clear()
    {
        $this->m_PictureCollection->clear();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PictureCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.Picture
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_PictureCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PictureCollection.removeAt(int)]

      @param pInt0  int
     */
    function removeAt($pInt0)
    {
        $this->m_PictureCollection->removeAt($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.PivotConditionFormatRuleType]
  
 */
class PivotConditionFormatRuleType
{
    public $m_PivotConditionFormatRuleType;
    
    function __construct($pivotConditionFormatRuleType)
    {
    	$this->m_PivotConditionFormatRuleType = $pivotConditionFormatRuleType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PivotConditionFormatScopeType]
  
 */
class PivotConditionFormatScopeType
{
    public $m_PivotConditionFormatScopeType;
    
    function __construct($pivotConditionFormatScopeType)
    {
    	$this->m_PivotConditionFormatScopeType = $pivotConditionFormatScopeType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PivotField]
  
 */
class PivotField
{
    public $m_PivotField;
    
    function __construct($pivotField)
    {
    	$this->m_PivotField = $pivotField;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.PivotField.addCalculatedItem(java.lang.String, java.lang.String)]

      @param oString0  String
      @param oString1  String
     */
    function addCalculatedItem($oString0, $oString1)
    {
        $this->m_PivotField->addCalculatedItem($oString0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.dragToColumn()]

      @return boolean
     */
    function dragToColumn()
    {
        return $this->m_PivotField->dragToColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.dragToHide()]

      @return boolean
     */
    function dragToHide()
    {
        return $this->m_PivotField->dragToHide();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.dragToPage()]

      @return boolean
     */
    function dragToPage()
    {
        return $this->m_PivotField->dragToPage();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.dragToRow()]

      @return boolean
     */
    function dragToRow()
    {
        return $this->m_PivotField->dragToRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getAutoShowCount()]

      @return int
     */
    function getAutoShowCount()
    {
        return $this->m_PivotField->getAutoShowCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getAutoShowField()]

      @return int
     */
    function getAutoShowField()
    {
        return $this->m_PivotField->getAutoShowField();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getAutoSortField()]

      @return int
     */
    function getAutoSortField()
    {
        return $this->m_PivotField->getAutoSortField();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getBaseField()]

      @return int
     */
    function getBaseField()
    {
        return $this->m_PivotField->getBaseField();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getBaseIndex()]

      @return int
     */
    function getBaseIndex()
    {
        return $this->m_PivotField->getBaseIndex();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getBaseItem()]

      @return int
     */
    function getBaseItem()
    {
        return $this->m_PivotField->getBaseItem();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getBaseItemPosition()]

      @return int
     */
    function getBaseItemPosition()
    {
        return $this->m_PivotField->getBaseItemPosition();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getCalculatedFieldFormula()]

      @return String
     */
    function getCalculatedFieldFormula()
    {
        return $this->m_PivotField->getCalculatedFieldFormula();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getCurrentPageItem()]

      @return short
     */
    function getCurrentPageItem()
    {
        return $this->m_PivotField->getCurrentPageItem();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getDataDisplayFormat()]

      @return int
     */
    function getDataDisplayFormat()
    {
        return $this->m_PivotField->getDataDisplayFormat();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getDisplayName()]

      @return String
     */
    function getDisplayName()
    {
        return $this->m_PivotField->getDisplayName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getDragToColumn()]

      @return boolean
     */
    function getDragToColumn()
    {
        return $this->m_PivotField->getDragToColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getDragToData()]

      @return boolean
     */
    function getDragToData()
    {
        return $this->m_PivotField->getDragToData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getDragToHide()]

      @return boolean
     */
    function getDragToHide()
    {
        return $this->m_PivotField->getDragToHide();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getDragToPage()]

      @return boolean
     */
    function getDragToPage()
    {
        return $this->m_PivotField->getDragToPage();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getDragToRow()]

      @return boolean
     */
    function getDragToRow()
    {
        return $this->m_PivotField->getDragToRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getFunction()]

      @return int
     */
    function getFunction()
    {
        return $this->m_PivotField->getFunction();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getInsertBlankRow()]

      @return boolean
     */
    function getInsertBlankRow()
    {
        return $this->m_PivotField->getInsertBlankRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getItemCount()]

      @return int
     */
    function getItemCount()
    {
        return $this->m_PivotField->getItemCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getItems()]

      @return array, corresponding java type is {String[]}
     */
    function getItems()
    {
        return $this->m_PivotField->getItems();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_PivotField->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getNumber()]

      @return int
     */
    function getNumber()
    {
        return $this->m_PivotField->getNumber();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getNumberFormat()]

      @return String
     */
    function getNumberFormat()
    {
        return $this->m_PivotField->getNumberFormat();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getOriginalItems()]

      @return array, corresponding java type is {String[]}
     */
    function getOriginalItems()
    {
        return $this->m_PivotField->getOriginalItems();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getPivotFilterByType(int)]

      @param pInt0  int
      @return com.aspose.cells.PivotFilter
     */
    function getPivotFilterByType($pInt0)
    {
        return ClassFactory::_t2($this->m_PivotField->getPivotFilterByType($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getPivotFilters()]

      @return array, corresponding java type is {java.util.ArrayList}
     */
    function getPivotFilters()
    {
        return ClassFactory::_t2($this->m_PivotField->getPivotFilters());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getPivotItems()]

      @return com.aspose.cells.PivotItemCollection
     */
    function getPivotItems()
    {
        return ClassFactory::_t2($this->m_PivotField->getPivotItems());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getPosition()]

      @return int
     */
    function getPosition()
    {
        return $this->m_PivotField->getPosition();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getRange()]

      @return com.aspose.cells.SxRng
     */
    function getRange()
    {
        return ClassFactory::_t2($this->m_PivotField->getRange());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getShowAllItems()]

      @return boolean
     */
    function getShowAllItems()
    {
        return $this->m_PivotField->getShowAllItems();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getShowCompact()]

      @return boolean
     */
    function getShowCompact()
    {
        return $this->m_PivotField->getShowCompact();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getShowInOutlineForm()]

      @return boolean
     */
    function getShowInOutlineForm()
    {
        return $this->m_PivotField->getShowInOutlineForm();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getShowSubtotalAtTop()]

      @return boolean
     */
    function getShowSubtotalAtTop()
    {
        return $this->m_PivotField->getShowSubtotalAtTop();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.getSubtotals(int)]

      @param pInt0  int
      @return boolean
     */
    function getSubtotals($pInt0)
    {
        return $this->m_PivotField->getSubtotals($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.hideDetail(boolean)]

      @param pBoolean0  boolean
     */
    function hideDetail($pBoolean0)
    {
        $this->m_PivotField->hideDetail($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.hideItem(int, boolean)]

      @param pInt0  int
      @param pBoolean1  boolean
     */
    function hideItemIB($pInt0, $pBoolean1)
    {
        $this->m_PivotField->hideItem($pInt0, $pBoolean1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.hideItem(java.lang.String, boolean)]

      @param oString0  String
      @param pBoolean1  boolean
     */
    function hideItemSB($oString0, $pBoolean1)
    {
        $this->m_PivotField->hideItem($oString0, $pBoolean1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.hideItemDetail(int, boolean)]

      @param pInt0  int
      @param pBoolean1  boolean
     */
    function hideItemDetail($pInt0, $pBoolean1)
    {
        $this->m_PivotField->hideItemDetail($pInt0, $pBoolean1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.initPivotItems()]

     */
    function initPivotItems()
    {
        $this->m_PivotField->initPivotItems();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.isAscendShow()]

      @return boolean
     */
    function isAscendShow()
    {
        return $this->m_PivotField->isAscendShow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.isAscendSort()]

      @return boolean
     */
    function isAscendSort()
    {
        return $this->m_PivotField->isAscendSort();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.isAutoShow()]

      @return boolean
     */
    function isAutoShow()
    {
        return $this->m_PivotField->isAutoShow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.isAutoSort()]

      @return boolean
     */
    function isAutoSort()
    {
        return $this->m_PivotField->isAutoSort();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.isAutoSubtotals()]

      @return boolean
     */
    function isAutoSubtotals()
    {
        return $this->m_PivotField->isAutoSubtotals();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.isCalculatedField()]

      @return boolean
     */
    function isCalculatedField()
    {
        return $this->m_PivotField->isCalculatedField();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.isHiddenItem(int)]

      @param pInt0  int
      @return boolean
     */
    function isHiddenItem($pInt0)
    {
        return $this->m_PivotField->isHiddenItem($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.isHiddenItemDetail(int)]

      @param pInt0  int
      @return boolean
     */
    function isHiddenItemDetail($pInt0)
    {
        return $this->m_PivotField->isHiddenItemDetail($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.isIncludeNewItemsInFilter()]

      @return boolean
     */
    function isIncludeNewItemsInFilter()
    {
        return $this->m_PivotField->isIncludeNewItemsInFilter();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.isInsertPageBreaksBetweenItems()]

      @return boolean
     */
    function isInsertPageBreaksBetweenItems()
    {
        return $this->m_PivotField->isInsertPageBreaksBetweenItems();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.isMultipleItemSelectionAllowed()]

      @return boolean
     */
    function isMultipleItemSelectionAllowed()
    {
        return $this->m_PivotField->isMultipleItemSelectionAllowed();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.isRepeatItemLabels()]

      @return boolean
     */
    function isRepeatItemLabels()
    {
        return $this->m_PivotField->isRepeatItemLabels();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setAscendShow(boolean)]

      @param pBoolean0  boolean
     */
    function setAscendShow($pBoolean0)
    {
        $this->m_PivotField->setAscendShow($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setAscendSort(boolean)]

      @param pBoolean0  boolean
     */
    function setAscendSort($pBoolean0)
    {
        $this->m_PivotField->setAscendSort($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setAutoShow(boolean)]

      @param pBoolean0  boolean
     */
    function setAutoShow($pBoolean0)
    {
        $this->m_PivotField->setAutoShow($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setAutoShowCount(int)]

      @param pInt0  int
     */
    function setAutoShowCount($pInt0)
    {
        $this->m_PivotField->setAutoShowCount($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setAutoShowField(int)]

      @param pInt0  int
     */
    function setAutoShowField($pInt0)
    {
        $this->m_PivotField->setAutoShowField($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setAutoSort(boolean)]

      @param pBoolean0  boolean
     */
    function setAutoSort($pBoolean0)
    {
        $this->m_PivotField->setAutoSort($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setAutoSortField(int)]

      @param pInt0  int
     */
    function setAutoSortField($pInt0)
    {
        $this->m_PivotField->setAutoSortField($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setAutoSubtotals(boolean)]

      @param pBoolean0  boolean
     */
    function setAutoSubtotals($pBoolean0)
    {
        $this->m_PivotField->setAutoSubtotals($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setBaseField(int)]

      @param pInt0  int
     */
    function setBaseField($pInt0)
    {
        $this->m_PivotField->setBaseField($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setBaseIndex(int)]

      @param pInt0  int
     */
    function setBaseIndex($pInt0)
    {
        $this->m_PivotField->setBaseIndex($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setBaseItem(int)]

      @param pInt0  int
     */
    function setBaseItem($pInt0)
    {
        $this->m_PivotField->setBaseItem($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setBaseItemPosition(int)]

      @param pInt0  int
     */
    function setBaseItemPosition($pInt0)
    {
        $this->m_PivotField->setBaseItemPosition($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setCurrentPageItem(short)]

      @param pShort0  short
     */
    function setCurrentPageItem($pShort0)
    {
        $this->m_PivotField->setCurrentPageItem($pShort0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setDataDisplayFormat(int)]

      @param pInt0  int
     */
    function setDataDisplayFormat($pInt0)
    {
        $this->m_PivotField->setDataDisplayFormat($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setDisplayName(java.lang.String)]

      @param oString0  String
     */
    function setDisplayName($oString0)
    {
        $this->m_PivotField->setDisplayName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setDragToColumn(boolean)]

      @param pBoolean0  boolean
     */
    function setDragToColumn($pBoolean0)
    {
        $this->m_PivotField->setDragToColumn($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setDragToData(boolean)]

      @param pBoolean0  boolean
     */
    function setDragToData($pBoolean0)
    {
        $this->m_PivotField->setDragToData($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setDragToHide(boolean)]

      @param pBoolean0  boolean
     */
    function setDragToHide($pBoolean0)
    {
        $this->m_PivotField->setDragToHide($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setDragToPage(boolean)]

      @param pBoolean0  boolean
     */
    function setDragToPage($pBoolean0)
    {
        $this->m_PivotField->setDragToPage($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setDragToRow(boolean)]

      @param pBoolean0  boolean
     */
    function setDragToRow($pBoolean0)
    {
        $this->m_PivotField->setDragToRow($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setFunction(int)]

      @param pInt0  int
     */
    function setFunction($pInt0)
    {
        $this->m_PivotField->setFunction($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setIncludeNewItemsInFilter(boolean)]

      @param pBoolean0  boolean
     */
    function setIncludeNewItemsInFilter($pBoolean0)
    {
        $this->m_PivotField->setIncludeNewItemsInFilter($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setInsertBlankRow(boolean)]

      @param pBoolean0  boolean
     */
    function setInsertBlankRow($pBoolean0)
    {
        $this->m_PivotField->setInsertBlankRow($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setInsertPageBreaksBetweenItems(boolean)]

      @param pBoolean0  boolean
     */
    function setInsertPageBreaksBetweenItems($pBoolean0)
    {
        $this->m_PivotField->setInsertPageBreaksBetweenItems($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setMultipleItemSelectionAllowed(boolean)]

      @param pBoolean0  boolean
     */
    function setMultipleItemSelectionAllowed($pBoolean0)
    {
        $this->m_PivotField->setMultipleItemSelectionAllowed($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setNumber(int)]

      @param pInt0  int
     */
    function setNumber($pInt0)
    {
        $this->m_PivotField->setNumber($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setNumberFormat(java.lang.String)]

      @param oString0  String
     */
    function setNumberFormat($oString0)
    {
        $this->m_PivotField->setNumberFormat($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setRepeatItemLabels(boolean)]

      @param pBoolean0  boolean
     */
    function setRepeatItemLabels($pBoolean0)
    {
        $this->m_PivotField->setRepeatItemLabels($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setShowAllItems(boolean)]

      @param pBoolean0  boolean
     */
    function setShowAllItems($pBoolean0)
    {
        $this->m_PivotField->setShowAllItems($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setShowCompact(boolean)]

      @param pBoolean0  boolean
     */
    function setShowCompact($pBoolean0)
    {
        $this->m_PivotField->setShowCompact($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setShowInOutlineForm(boolean)]

      @param pBoolean0  boolean
     */
    function setShowInOutlineForm($pBoolean0)
    {
        $this->m_PivotField->setShowInOutlineForm($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setShowSubtotalAtTop(boolean)]

      @param pBoolean0  boolean
     */
    function setShowSubtotalAtTop($pBoolean0)
    {
        $this->m_PivotField->setShowSubtotalAtTop($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.setSubtotals(int, boolean)]

      @param pInt0  int
      @param pBoolean1  boolean
     */
    function setSubtotals($pInt0, $pBoolean1)
    {
        $this->m_PivotField->setSubtotals($pInt0, $pBoolean1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotField.showAllItems()]

      @return boolean
     */
    function showAllItems()
    {
        return $this->m_PivotField->showAllItems();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.PivotFieldCollection]
  
 */
class PivotFieldCollection
{
    public $m_PivotFieldCollection;
    
    function __construct($pivotFieldCollection)
    {
    	$this->m_PivotFieldCollection = $pivotFieldCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.PivotFieldCollection.add(com.aspose.cells.PivotField)]

      @param oPivotField0  com.aspose.cells.PivotField
      @return int
     */
    function add($oPivotField0)
    {
        return $this->m_PivotFieldCollection->add(ClassFactory::_t1($oPivotField0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFieldCollection.addByBaseIndex(int)]

      @param pInt0  int
      @return int
     */
    function addByBaseIndex($pInt0)
    {
        return $this->m_PivotFieldCollection->addByBaseIndex($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFieldCollection.clear()]

     */
    function clear()
    {
        $this->m_PivotFieldCollection->clear();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFieldCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.PivotField
     */
    function getI($pInt0)
    {
        return ClassFactory::_t2($this->m_PivotFieldCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFieldCollection.get(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.PivotField
     */
    function getS($oString0)
    {
        return ClassFactory::_t2($this->m_PivotFieldCollection->get($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFieldCollection.getCount()]

      @return int
     */
    function getCount()
    {
        return $this->m_PivotFieldCollection->getCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFieldCollection.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_PivotFieldCollection->getType();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.PivotFieldDataDisplayFormat]
  
 */
class PivotFieldDataDisplayFormat
{
    public $m_PivotFieldDataDisplayFormat;
    
    function __construct($pivotFieldDataDisplayFormat)
    {
    	$this->m_PivotFieldDataDisplayFormat = $pivotFieldDataDisplayFormat;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PivotFieldSubtotalType]
  
 */
class PivotFieldSubtotalType
{
    public $m_PivotFieldSubtotalType;
    
    function __construct($pivotFieldSubtotalType)
    {
    	$this->m_PivotFieldSubtotalType = $pivotFieldSubtotalType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PivotFieldType]
  
 */
class PivotFieldType
{
    public $m_PivotFieldType;
    
    function __construct($pivotFieldType)
    {
    	$this->m_PivotFieldType = $pivotFieldType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PivotFilter]
  
 */
class PivotFilter
{
    public $m_PivotFilter;
    
    function __construct($pivotFilter)
    {
    	$this->m_PivotFilter = $pivotFilter;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.PivotFilter.getAutoFilter()]

      @return com.aspose.cells.AutoFilter
     */
    function getAutoFilter()
    {
        return ClassFactory::_t2($this->m_PivotFilter->getAutoFilter());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFilter.getEvaluationOrder()]

      @return int
     */
    function getEvaluationOrder()
    {
        return $this->m_PivotFilter->getEvaluationOrder();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFilter.getFieldIndex()]

      @return int
     */
    function getFieldIndex()
    {
        return $this->m_PivotFilter->getFieldIndex();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFilter.getFilterType()]

      @return int
     */
    function getFilterType()
    {
        return $this->m_PivotFilter->getFilterType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFilter.getMeasureFldIndex()]

      @return int
     */
    function getMeasureFldIndex()
    {
        return $this->m_PivotFilter->getMeasureFldIndex();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFilter.getMemberPropertyFieldIndex()]

      @return int
     */
    function getMemberPropertyFieldIndex()
    {
        return $this->m_PivotFilter->getMemberPropertyFieldIndex();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFilter.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_PivotFilter->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFilter.getValue1()]

      @return String
     */
    function getValue1()
    {
        return $this->m_PivotFilter->getValue1();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFilter.getValue2()]

      @return String
     */
    function getValue2()
    {
        return $this->m_PivotFilter->getValue2();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFilter.setEvaluationOrder(int)]

      @param pInt0  int
     */
    function setEvaluationOrder($pInt0)
    {
        $this->m_PivotFilter->setEvaluationOrder($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFilter.setMeasureFldIndex(int)]

      @param pInt0  int
     */
    function setMeasureFldIndex($pInt0)
    {
        $this->m_PivotFilter->setMeasureFldIndex($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFilter.setMemberPropertyFieldIndex(int)]

      @param pInt0  int
     */
    function setMemberPropertyFieldIndex($pInt0)
    {
        $this->m_PivotFilter->setMemberPropertyFieldIndex($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFilter.setName(java.lang.String)]

      @param oString0  String
     */
    function setName($oString0)
    {
        $this->m_PivotFilter->setName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFilter.setValue1(java.lang.String)]

      @param oString0  String
     */
    function setValue1($oString0)
    {
        $this->m_PivotFilter->setValue1($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFilter.setValue2(java.lang.String)]

      @param oString0  String
     */
    function setValue2($oString0)
    {
        $this->m_PivotFilter->setValue2($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.PivotFilterCollection]
  
 */
class PivotFilterCollection extends CollectionBase
{
    public $m_PivotFilterCollection;
    
    function __construct($pivotFilterCollection)
    {
    	$this->m_PivotFilterCollection = $pivotFilterCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.PivotFilterCollection.add(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return int
     */
    function add($pInt0, $pInt1)
    {
        return $this->m_PivotFilterCollection->add($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFilterCollection.clearFilter(int)]

      @param pInt0  int
     */
    function clearFilter($pInt0)
    {
        $this->m_PivotFilterCollection->clearFilter($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFilterCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.PivotFilter
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_PivotFilterCollection->get($pInt0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.PivotFilterType]
  
 */
class PivotFilterType
{
    public $m_PivotFilterType;
    
    function __construct($pivotFilterType)
    {
    	$this->m_PivotFilterType = $pivotFilterType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PivotFormatCondition]
  
 */
class PivotFormatCondition
{
    public $m_PivotFormatCondition;
    
    function __construct($pivotFormatCondition)
    {
    	$this->m_PivotFormatCondition = $pivotFormatCondition;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.PivotFormatCondition.getFormatConditions()]

      @return com.aspose.cells.FormatConditionCollection
     */
    function getFormatConditions()
    {
        return ClassFactory::_t2($this->m_PivotFormatCondition->getFormatConditions());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFormatCondition.getRuleType()]

      @return int
     */
    function getRuleType()
    {
        return $this->m_PivotFormatCondition->getRuleType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFormatCondition.getScopeType()]

      @return int
     */
    function getScopeType()
    {
        return $this->m_PivotFormatCondition->getScopeType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFormatCondition.setRuleType(int)]

      @param pInt0  int
     */
    function setRuleType($pInt0)
    {
        $this->m_PivotFormatCondition->setRuleType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFormatCondition.setScopeType(int)]

      @param pInt0  int
     */
    function setScopeType($pInt0)
    {
        $this->m_PivotFormatCondition->setScopeType($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.PivotFormatConditionCollection]
  
 */
class PivotFormatConditionCollection extends CollectionBase
{
    public $m_PivotFormatConditionCollection;
    
    function __construct($pivotFormatConditionCollection)
    {
    	$this->m_PivotFormatConditionCollection = $pivotFormatConditionCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.PivotFormatConditionCollection.add()]

      @return int
     */
    function add()
    {
        return $this->m_PivotFormatConditionCollection->add();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotFormatConditionCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.PivotFormatCondition
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_PivotFormatConditionCollection->get($pInt0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.PivotGroupByType]
  
 */
class PivotGroupByType
{
    public $m_PivotGroupByType;
    
    function __construct($pivotGroupByType)
    {
    	$this->m_PivotGroupByType = $pivotGroupByType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PivotItem]
  
 */
class PivotItem
{
    public $m_PivotItem;
    
    function __construct($pivotItem)
    {
    	$this->m_PivotItem = $pivotItem;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.PivotItem.getDateTimeValue()]

      @return corresponding java type is {com.aspose.cells.DateTime}
     */
    function getDateTimeValue()
    {
        return ClassFactory::_t2($this->m_PivotItem->getDateTimeValue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotItem.getDoubleValue()]

      @return double
     */
    function getDoubleValue()
    {
        return $this->m_PivotItem->getDoubleValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotItem.getIndex()]

      @return int
     */
    function getIndex()
    {
        return $this->m_PivotItem->getIndex();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotItem.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_PivotItem->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotItem.getStringValue()]

      @return String
     */
    function getStringValue()
    {
        return $this->m_PivotItem->getStringValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotItem.getValue()]

      @return corresponding java type is {java.lang.Object}
     */
    function getValue()
    {
        return ClassFactory::_t2($this->m_PivotItem->getValue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotItem.hide(boolean)]

      @param pBoolean0  boolean
     */
    function hide($pBoolean0)
    {
        $this->m_PivotItem->hide($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotItem.isHidden()]

      @return boolean
     */
    function isHidden()
    {
        return $this->m_PivotItem->isHidden();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotItem.move(int)]

      @param pInt0  int
     */
    function move($pInt0)
    {
        $this->m_PivotItem->move($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotItem.setHidden(boolean)]

      @param pBoolean0  boolean
     */
    function setHidden($pBoolean0)
    {
        $this->m_PivotItem->setHidden($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotItem.setIndex(int)]

      @param pInt0  int
     */
    function setIndex($pInt0)
    {
        $this->m_PivotItem->setIndex($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.PivotItemCollection]
  
 */
class PivotItemCollection
{
    public $m_PivotItemCollection;
    
    function __construct($pivotItemCollection)
    {
    	$this->m_PivotItemCollection = $pivotItemCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.PivotItemCollection.changeitemsOrder(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function changeitemsOrder($pInt0, $pInt1)
    {
        $this->m_PivotItemCollection->changeitemsOrder($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotItemCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.PivotItem
     */
    function getI($pInt0)
    {
        return ClassFactory::_t2($this->m_PivotItemCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotItemCollection.get(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.PivotItem
     */
    function getS($oString0)
    {
        return ClassFactory::_t2($this->m_PivotItemCollection->get($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotItemCollection.getCount()]

      @return int
     */
    function getCount()
    {
        return $this->m_PivotItemCollection->getCount();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.PivotItemPosition]
  
 */
class PivotItemPosition
{
    public $m_PivotItemPosition;
    
    function __construct($pivotItemPosition)
    {
    	$this->m_PivotItemPosition = $pivotItemPosition;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PivotMissingItemLimitType]
  
 */
class PivotMissingItemLimitType
{
    public $m_PivotMissingItemLimitType;
    
    function __construct($pivotMissingItemLimitType)
    {
    	$this->m_PivotMissingItemLimitType = $pivotMissingItemLimitType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PivotPageFields]
  
 */
class PivotPageFields
{
    public $m_PivotPageFields;
    
    function __construct($pivotPageFields)
    {
    	$this->m_PivotPageFields = $pivotPageFields;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.PivotPageFields.addIdentify(int, int[])]

      @param pInt0  int
      @param arrP1DInt1  int[]
     */
    function addIdentify($pInt0, $arrP1DInt1)
    {
        $this->m_PivotPageFields->addIdentify($pInt0, $arrP1DInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotPageFields.addPageField(java.lang.String[])]

      @param arrD1DString0  array, corresponding java type is {String[]}
     */
    function addPageField($arrD1DString0)
    {
        $this->m_PivotPageFields->addPageField($arrD1DString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotPageFields.getPageFieldCount()]

      @return int
     */
    function getPageFieldCount()
    {
        return $this->m_PivotPageFields->getPageFieldCount();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.PivotTable]
  
 */
class PivotTable
{
    public $m_PivotTable;
    
    function __construct($pivotTable)
    {
    	$this->m_PivotTable = $pivotTable;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.addCalculatedField(java.lang.String, java.lang.String)]

      @param oString0  String
      @param oString1  String
     */
    function addCalculatedFieldSS($oString0, $oString1)
    {
        $this->m_PivotTable->addCalculatedField($oString0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.addCalculatedField(java.lang.String, java.lang.String, boolean)]

      @param oString0  String
      @param oString1  String
      @param pBoolean2  boolean
     */
    function addCalculatedFieldSSB($oString0, $oString1, $pBoolean2)
    {
        $this->m_PivotTable->addCalculatedField($oString0, $oString1, $pBoolean2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.addFieldToArea(int, com.aspose.cells.PivotField)]

      @param pInt0  int
      @param oPivotField1  com.aspose.cells.PivotField
      @return int
     */
    function addFieldToAreaIP($pInt0, $oPivotField1)
    {
        return $this->m_PivotTable->addFieldToArea($pInt0, ClassFactory::_t1($oPivotField1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.addFieldToArea(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return int
     */
    function addFieldToAreaII($pInt0, $pInt1)
    {
        return $this->m_PivotTable->addFieldToArea($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.addFieldToArea(int, java.lang.String)]

      @param pInt0  int
      @param oString1  String
      @return int
     */
    function addFieldToAreaIS($pInt0, $oString1)
    {
        return $this->m_PivotTable->addFieldToArea($pInt0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.calculateData()]

     */
    function calculateData()
    {
        $this->m_PivotTable->calculateData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.calculateRange()]

     */
    function calculateRange()
    {
        $this->m_PivotTable->calculateRange();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.changeDataSource(java.lang.String[])]

      @param arrD1DString0  array, corresponding java type is {String[]}
     */
    function changeDataSource($arrD1DString0)
    {
        $this->m_PivotTable->changeDataSource($arrD1DString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.clearData()]

     */
    function clearData()
    {
        $this->m_PivotTable->clearData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.copyStyle(com.aspose.cells.PivotTable)]

      @param oPivotTable0  com.aspose.cells.PivotTable
     */
    function copyStyle($oPivotTable0)
    {
        $this->m_PivotTable->copyStyle(ClassFactory::_t1($oPivotTable0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.displayErrorString()]

      @return boolean
     */
    function displayErrorString()
    {
        return $this->m_PivotTable->displayErrorString();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.displayImmediateItems()]

      @return boolean
     */
    function displayImmediateItems()
    {
        return $this->m_PivotTable->displayImmediateItems();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.displayNullString()]

      @return boolean
     */
    function displayNullString()
    {
        return $this->m_PivotTable->displayNullString();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.enableDrilldown()]

      @return boolean
     */
    function enableDrilldown()
    {
        return $this->m_PivotTable->enableDrilldown();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.enableFieldDialog()]

      @return boolean
     */
    function enableFieldDialog()
    {
        return $this->m_PivotTable->enableFieldDialog();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.enableFieldList()]

      @return boolean
     */
    function enableFieldList()
    {
        return $this->m_PivotTable->enableFieldList();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.enableWizard()]

      @return boolean
     */
    function enableWizard()
    {
        return $this->m_PivotTable->enableWizard();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.fields(int)]

      @param pInt0  int
      @return com.aspose.cells.PivotFieldCollection
     */
    function fields($pInt0)
    {
        return ClassFactory::_t2($this->m_PivotTable->fields($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.format(int, int, com.aspose.cells.Style)]

      @param pInt0  int
      @param pInt1  int
      @param oStyle2  com.aspose.cells.Style
     */
    function format($pInt0, $pInt1, $oStyle2)
    {
        $this->m_PivotTable->format($pInt0, $pInt1, ClassFactory::_t1($oStyle2));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.formatAll(com.aspose.cells.Style)]

      @param oStyle0  com.aspose.cells.Style
     */
    function formatAll($oStyle0)
    {
        $this->m_PivotTable->formatAll(ClassFactory::_t1($oStyle0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getAltTextDescription()]

      @return String
     */
    function getAltTextDescription()
    {
        return $this->m_PivotTable->getAltTextDescription();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getAltTextTitle()]

      @return String
     */
    function getAltTextTitle()
    {
        return $this->m_PivotTable->getAltTextTitle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getAutoFormatType()]

      @return int
     */
    function getAutoFormatType()
    {
        return $this->m_PivotTable->getAutoFormatType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getBaseFields()]

      @return com.aspose.cells.PivotFieldCollection
     */
    function getBaseFields()
    {
        return ClassFactory::_t2($this->m_PivotTable->getBaseFields());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getColumnFields()]

      @return com.aspose.cells.PivotFieldCollection
     */
    function getColumnFields()
    {
        return ClassFactory::_t2($this->m_PivotTable->getColumnFields());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getColumnGrand()]

      @return boolean
     */
    function getColumnGrand()
    {
        return $this->m_PivotTable->getColumnGrand();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getColumnHeaderCaption()]

      @return String
     */
    function getColumnHeaderCaption()
    {
        return $this->m_PivotTable->getColumnHeaderCaption();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getColumnRange()]

      @return com.aspose.cells.CellArea
     */
    function getColumnRange()
    {
        return ClassFactory::_t2($this->m_PivotTable->getColumnRange());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getCustomListSort()]

      @return boolean
     */
    function getCustomListSort()
    {
        return $this->m_PivotTable->getCustomListSort();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getDataBodyRange()]

      @return com.aspose.cells.CellArea
     */
    function getDataBodyRange()
    {
        return ClassFactory::_t2($this->m_PivotTable->getDataBodyRange());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getDataField()]

      @return com.aspose.cells.PivotField
     */
    function getDataField()
    {
        return ClassFactory::_t2($this->m_PivotTable->getDataField());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getDataFields()]

      @return com.aspose.cells.PivotFieldCollection
     */
    function getDataFields()
    {
        return ClassFactory::_t2($this->m_PivotTable->getDataFields());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getDataSource()]

      @return array, corresponding java type is {String[]}
     */
    function getDataSource()
    {
        return $this->m_PivotTable->getDataSource();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getDisplayErrorString()]

      @return boolean
     */
    function getDisplayErrorString()
    {
        return $this->m_PivotTable->getDisplayErrorString();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getDisplayImmediateItems()]

      @return boolean
     */
    function getDisplayImmediateItems()
    {
        return $this->m_PivotTable->getDisplayImmediateItems();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getDisplayNullString()]

      @return boolean
     */
    function getDisplayNullString()
    {
        return $this->m_PivotTable->getDisplayNullString();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getEnableDataValueEditing()]

      @return boolean
     */
    function getEnableDataValueEditing()
    {
        return $this->m_PivotTable->getEnableDataValueEditing();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getEnableDrilldown()]

      @return boolean
     */
    function getEnableDrilldown()
    {
        return $this->m_PivotTable->getEnableDrilldown();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getEnableFieldDialog()]

      @return boolean
     */
    function getEnableFieldDialog()
    {
        return $this->m_PivotTable->getEnableFieldDialog();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getEnableFieldList()]

      @return boolean
     */
    function getEnableFieldList()
    {
        return $this->m_PivotTable->getEnableFieldList();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getEnableWizard()]

      @return boolean
     */
    function getEnableWizard()
    {
        return $this->m_PivotTable->getEnableWizard();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getErrorString()]

      @return String
     */
    function getErrorString()
    {
        return $this->m_PivotTable->getErrorString();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getFieldListSortAscending()]

      @return boolean
     */
    function getFieldListSortAscending()
    {
        return $this->m_PivotTable->getFieldListSortAscending();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getGrandTotalName()]

      @return String
     */
    function getGrandTotalName()
    {
        return $this->m_PivotTable->getGrandTotalName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getHasBlankRows()]

      @return boolean
     */
    function getHasBlankRows()
    {
        return $this->m_PivotTable->getHasBlankRows();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getHorizontalBreaks()]

      @return array, corresponding java type is {java.util.ArrayList}
     */
    function getHorizontalBreaks()
    {
        return ClassFactory::_t2($this->m_PivotTable->getHorizontalBreaks());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getIndent()]

      @return int
     */
    function getIndent()
    {
        return $this->m_PivotTable->getIndent();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getIsGridDropZones()]

      @return boolean
     */
    function getIsGridDropZones()
    {
        return $this->m_PivotTable->getIsGridDropZones();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getItemPrintTitles()]

      @return boolean
     */
    function getItemPrintTitles()
    {
        return $this->m_PivotTable->getItemPrintTitles();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getManualUpdate()]

      @return boolean
     */
    function getManualUpdate()
    {
        return $this->m_PivotTable->getManualUpdate();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getMergeLabels()]

      @return boolean
     */
    function getMergeLabels()
    {
        return $this->m_PivotTable->getMergeLabels();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getMissingItemsLimit()]

      @return int
     */
    function getMissingItemsLimit()
    {
        return $this->m_PivotTable->getMissingItemsLimit();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_PivotTable->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getNullString()]

      @return String
     */
    function getNullString()
    {
        return $this->m_PivotTable->getNullString();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getPageFieldOrder()]

      @return int
     */
    function getPageFieldOrder()
    {
        return $this->m_PivotTable->getPageFieldOrder();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getPageFieldWrapCount()]

      @return int
     */
    function getPageFieldWrapCount()
    {
        return $this->m_PivotTable->getPageFieldWrapCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getPageFields()]

      @return com.aspose.cells.PivotFieldCollection
     */
    function getPageFields()
    {
        return ClassFactory::_t2($this->m_PivotTable->getPageFields());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getPivotFilters()]

      @return com.aspose.cells.PivotFilterCollection
     */
    function getPivotFilters()
    {
        return ClassFactory::_t2($this->m_PivotTable->getPivotFilters());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getPivotFormatConditions()]

      @return com.aspose.cells.PivotFormatConditionCollection
     */
    function getPivotFormatConditions()
    {
        return ClassFactory::_t2($this->m_PivotTable->getPivotFormatConditions());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getPivotTableStyleName()]

      @return String
     */
    function getPivotTableStyleName()
    {
        return $this->m_PivotTable->getPivotTableStyleName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getPivotTableStyleType()]

      @return int
     */
    function getPivotTableStyleType()
    {
        return $this->m_PivotTable->getPivotTableStyleType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getPreserveFormatting()]

      @return boolean
     */
    function getPreserveFormatting()
    {
        return $this->m_PivotTable->getPreserveFormatting();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getPrintDrill()]

      @return boolean
     */
    function getPrintDrill()
    {
        return $this->m_PivotTable->getPrintDrill();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getPrintTitles()]

      @return boolean
     */
    function getPrintTitles()
    {
        return $this->m_PivotTable->getPrintTitles();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getRefreshDataFlag()]

      @return boolean
     */
    function getRefreshDataFlag()
    {
        return $this->m_PivotTable->getRefreshDataFlag();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getRefreshDataOnOpeningFile()]

      @return boolean
     */
    function getRefreshDataOnOpeningFile()
    {
        return $this->m_PivotTable->getRefreshDataOnOpeningFile();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getRowFields()]

      @return com.aspose.cells.PivotFieldCollection
     */
    function getRowFields()
    {
        return ClassFactory::_t2($this->m_PivotTable->getRowFields());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getRowGrand()]

      @return boolean
     */
    function getRowGrand()
    {
        return $this->m_PivotTable->getRowGrand();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getRowHeaderCaption()]

      @return String
     */
    function getRowHeaderCaption()
    {
        return $this->m_PivotTable->getRowHeaderCaption();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getRowRange()]

      @return com.aspose.cells.CellArea
     */
    function getRowRange()
    {
        return ClassFactory::_t2($this->m_PivotTable->getRowRange());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getSaveData()]

      @return boolean
     */
    function getSaveData()
    {
        return $this->m_PivotTable->getSaveData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getShowDataTips()]

      @return boolean
     */
    function getShowDataTips()
    {
        return $this->m_PivotTable->getShowDataTips();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getShowDrill()]

      @return boolean
     */
    function getShowDrill()
    {
        return $this->m_PivotTable->getShowDrill();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getShowEmptyCol()]

      @return boolean
     */
    function getShowEmptyCol()
    {
        return $this->m_PivotTable->getShowEmptyCol();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getShowEmptyRow()]

      @return boolean
     */
    function getShowEmptyRow()
    {
        return $this->m_PivotTable->getShowEmptyRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getShowMemberPropertyTips()]

      @return boolean
     */
    function getShowMemberPropertyTips()
    {
        return $this->m_PivotTable->getShowMemberPropertyTips();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getShowPivotStyleColumnHeader()]

      @return boolean
     */
    function getShowPivotStyleColumnHeader()
    {
        return $this->m_PivotTable->getShowPivotStyleColumnHeader();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getShowPivotStyleColumnStripes()]

      @return boolean
     */
    function getShowPivotStyleColumnStripes()
    {
        return $this->m_PivotTable->getShowPivotStyleColumnStripes();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getShowPivotStyleLastColumn()]

      @return boolean
     */
    function getShowPivotStyleLastColumn()
    {
        return $this->m_PivotTable->getShowPivotStyleLastColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getShowPivotStyleRowHeader()]

      @return boolean
     */
    function getShowPivotStyleRowHeader()
    {
        return $this->m_PivotTable->getShowPivotStyleRowHeader();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getShowPivotStyleRowStripes()]

      @return boolean
     */
    function getShowPivotStyleRowStripes()
    {
        return $this->m_PivotTable->getShowPivotStyleRowStripes();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getShowRowHeaderCaption()]

      @return boolean
     */
    function getShowRowHeaderCaption()
    {
        return $this->m_PivotTable->getShowRowHeaderCaption();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getShowValuesRow()]

      @return boolean
     */
    function getShowValuesRow()
    {
        return $this->m_PivotTable->getShowValuesRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getSource()]

      @return array, corresponding java type is {String[]}
     */
    function getSource()
    {
        return $this->m_PivotTable->getSource();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getSubtotalHiddenPageItems()]

      @return boolean
     */
    function getSubtotalHiddenPageItems()
    {
        return $this->m_PivotTable->getSubtotalHiddenPageItems();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getTableRange1()]

      @return com.aspose.cells.CellArea
     */
    function getTableRange1()
    {
        return ClassFactory::_t2($this->m_PivotTable->getTableRange1());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getTableRange2()]

      @return com.aspose.cells.CellArea
     */
    function getTableRange2()
    {
        return ClassFactory::_t2($this->m_PivotTable->getTableRange2());
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.getTag()]

      @return String
     */
    function getTag()
    {
        return $this->m_PivotTable->getTag();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.hasBlankRows()]

      @return boolean
     */
    function hasBlankRows()
    {
        return $this->m_PivotTable->hasBlankRows();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.isAutoFormat()]

      @return boolean
     */
    function isAutoFormat()
    {
        return $this->m_PivotTable->isAutoFormat();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.isColumnGrand()]

      @return boolean
     */
    function isColumnGrand()
    {
        return $this->m_PivotTable->isColumnGrand();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.isGridDropZones()]

      @return boolean
     */
    function isGridDropZones()
    {
        return $this->m_PivotTable->isGridDropZones();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.isMultipleFieldFilters()]

      @return boolean
     */
    function isMultipleFieldFilters()
    {
        return $this->m_PivotTable->isMultipleFieldFilters();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.isRowGrand()]

      @return boolean
     */
    function isRowGrand()
    {
        return $this->m_PivotTable->isRowGrand();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.isSelected()]

      @return boolean
     */
    function isSelected()
    {
        return $this->m_PivotTable->isSelected();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.manualUpdate()]

      @return boolean
     */
    function manualUpdate()
    {
        return $this->m_PivotTable->manualUpdate();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.mergeLabels()]

      @return boolean
     */
    function mergeLabels()
    {
        return $this->m_PivotTable->mergeLabels();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.move(java.lang.String)]

      @param oString0  String
     */
    function moveS($oString0)
    {
        $this->m_PivotTable->move($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.move(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function moveII($pInt0, $pInt1)
    {
        $this->m_PivotTable->move($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.preserveFormatting()]

      @return boolean
     */
    function preserveFormatting()
    {
        return $this->m_PivotTable->preserveFormatting();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.printTitles()]

      @return boolean
     */
    function printTitles()
    {
        return $this->m_PivotTable->printTitles();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.refreshData()]

     */
    function refreshData()
    {
        $this->m_PivotTable->refreshData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.removeField(int, com.aspose.cells.PivotField)]

      @param pInt0  int
      @param oPivotField1  com.aspose.cells.PivotField
     */
    function removeFieldIP($pInt0, $oPivotField1)
    {
        $this->m_PivotTable->removeField($pInt0, ClassFactory::_t1($oPivotField1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.removeField(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function removeFieldII($pInt0, $pInt1)
    {
        $this->m_PivotTable->removeField($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.removeField(int, java.lang.String)]

      @param pInt0  int
      @param oString1  String
     */
    function removeFieldIS($pInt0, $oString1)
    {
        $this->m_PivotTable->removeField($pInt0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.saveData()]

      @return boolean
     */
    function saveData()
    {
        return $this->m_PivotTable->saveData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setAltTextDescription(java.lang.String)]

      @param oString0  String
     */
    function setAltTextDescription($oString0)
    {
        $this->m_PivotTable->setAltTextDescription($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setAltTextTitle(java.lang.String)]

      @param oString0  String
     */
    function setAltTextTitle($oString0)
    {
        $this->m_PivotTable->setAltTextTitle($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setAutoFormat(boolean)]

      @param pBoolean0  boolean
     */
    function setAutoFormat($pBoolean0)
    {
        $this->m_PivotTable->setAutoFormat($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setAutoFormatType(int)]

      @param pInt0  int
     */
    function setAutoFormatType($pInt0)
    {
        $this->m_PivotTable->setAutoFormatType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setAutoGroupField(com.aspose.cells.PivotField)]

      @param oPivotField0  com.aspose.cells.PivotField
     */
    function setAutoGroupFieldP($oPivotField0)
    {
        $this->m_PivotTable->setAutoGroupField(ClassFactory::_t1($oPivotField0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setAutoGroupField(int)]

      @param pInt0  int
     */
    function setAutoGroupFieldI($pInt0)
    {
        $this->m_PivotTable->setAutoGroupField($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setColumnGrand(boolean)]

      @param pBoolean0  boolean
     */
    function setColumnGrand($pBoolean0)
    {
        $this->m_PivotTable->setColumnGrand($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setColumnHeaderCaption(java.lang.String)]

      @param oString0  String
     */
    function setColumnHeaderCaption($oString0)
    {
        $this->m_PivotTable->setColumnHeaderCaption($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setCustomListSort(boolean)]

      @param pBoolean0  boolean
     */
    function setCustomListSort($pBoolean0)
    {
        $this->m_PivotTable->setCustomListSort($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setDataSource(java.lang.String[])]

      @param arrD1DString0  array, corresponding java type is {String[]}
     */
    function setDataSource($arrD1DString0)
    {
        $this->m_PivotTable->setDataSource($arrD1DString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setDisplayErrorString(boolean)]

      @param pBoolean0  boolean
     */
    function setDisplayErrorString($pBoolean0)
    {
        $this->m_PivotTable->setDisplayErrorString($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setDisplayImmediateItems(boolean)]

      @param pBoolean0  boolean
     */
    function setDisplayImmediateItems($pBoolean0)
    {
        $this->m_PivotTable->setDisplayImmediateItems($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setDisplayNullString(boolean)]

      @param pBoolean0  boolean
     */
    function setDisplayNullString($pBoolean0)
    {
        $this->m_PivotTable->setDisplayNullString($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setEnableDataValueEditing(boolean)]

      @param pBoolean0  boolean
     */
    function setEnableDataValueEditing($pBoolean0)
    {
        $this->m_PivotTable->setEnableDataValueEditing($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setEnableDrilldown(boolean)]

      @param pBoolean0  boolean
     */
    function setEnableDrilldown($pBoolean0)
    {
        $this->m_PivotTable->setEnableDrilldown($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setEnableFieldDialog(boolean)]

      @param pBoolean0  boolean
     */
    function setEnableFieldDialog($pBoolean0)
    {
        $this->m_PivotTable->setEnableFieldDialog($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setEnableFieldList(boolean)]

      @param pBoolean0  boolean
     */
    function setEnableFieldList($pBoolean0)
    {
        $this->m_PivotTable->setEnableFieldList($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setEnableWizard(boolean)]

      @param pBoolean0  boolean
     */
    function setEnableWizard($pBoolean0)
    {
        $this->m_PivotTable->setEnableWizard($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setErrorString(java.lang.String)]

      @param oString0  String
     */
    function setErrorString($oString0)
    {
        $this->m_PivotTable->setErrorString($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setFieldListSortAscending(boolean)]

      @param pBoolean0  boolean
     */
    function setFieldListSortAscending($pBoolean0)
    {
        $this->m_PivotTable->setFieldListSortAscending($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setGrandTotalName(java.lang.String)]

      @param oString0  String
     */
    function setGrandTotalName($oString0)
    {
        $this->m_PivotTable->setGrandTotalName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setGridDropZones(boolean)]

      @param pBoolean0  boolean
     */
    function setGridDropZones($pBoolean0)
    {
        $this->m_PivotTable->setGridDropZones($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setHasBlankRows(boolean)]

      @param pBoolean0  boolean
     */
    function setHasBlankRows($pBoolean0)
    {
        $this->m_PivotTable->setHasBlankRows($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setIndent(int)]

      @param pInt0  int
     */
    function setIndent($pInt0)
    {
        $this->m_PivotTable->setIndent($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setIsGridDropZones(boolean)]

      @param pBoolean0  boolean
     */
    function setIsGridDropZones($pBoolean0)
    {
        $this->m_PivotTable->setIsGridDropZones($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setItemPrintTitles(boolean)]

      @param pBoolean0  boolean
     */
    function setItemPrintTitles($pBoolean0)
    {
        $this->m_PivotTable->setItemPrintTitles($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setManualGroupField(com.aspose.cells.PivotField, com.aspose.cells.DateTime, com.aspose.cells.DateTime, java.util.ArrayList, int)]

      @param oPivotField0  com.aspose.cells.PivotField
      @param oCells_DateTime1  corresponding java type is {com.aspose.cells.DateTime}
      @param oCells_DateTime2  corresponding java type is {com.aspose.cells.DateTime}
      @param arrA1DFromArrayList3  array, corresponding java type is {java.util.ArrayList}
      @param pInt4  int
     */
    function setManualGroupFieldPDDAI($oPivotField0, $oCells_DateTime1, $oCells_DateTime2, $arrA1DFromArrayList3, $pInt4)
    {
        $this->m_PivotTable->setManualGroupField(ClassFactory::_t1($oPivotField0), ClassFactory::_t1($oCells_DateTime1), ClassFactory::_t1($oCells_DateTime2), ClassFactory::_t1($arrA1DFromArrayList3), $pInt4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setManualGroupField(com.aspose.cells.PivotField, double, double, java.util.ArrayList, double)]

      @param oPivotField0  com.aspose.cells.PivotField
      @param pDouble1  double
      @param pDouble2  double
      @param arrA1DFromArrayList3  array, corresponding java type is {java.util.ArrayList}
      @param pDouble4  double
     */
    function setManualGroupFieldPDDAD($oPivotField0, $pDouble1, $pDouble2, $arrA1DFromArrayList3, $pDouble4)
    {
        $this->m_PivotTable->setManualGroupField(ClassFactory::_t1($oPivotField0), $pDouble1, $pDouble2, ClassFactory::_t1($arrA1DFromArrayList3), $pDouble4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setManualGroupField(int, com.aspose.cells.DateTime, com.aspose.cells.DateTime, java.util.ArrayList, int)]

      @param pInt0  int
      @param oCells_DateTime1  corresponding java type is {com.aspose.cells.DateTime}
      @param oCells_DateTime2  corresponding java type is {com.aspose.cells.DateTime}
      @param arrA1DFromArrayList3  array, corresponding java type is {java.util.ArrayList}
      @param pInt4  int
     */
    function setManualGroupFieldIDDAI($pInt0, $oCells_DateTime1, $oCells_DateTime2, $arrA1DFromArrayList3, $pInt4)
    {
        $this->m_PivotTable->setManualGroupField($pInt0, ClassFactory::_t1($oCells_DateTime1), ClassFactory::_t1($oCells_DateTime2), ClassFactory::_t1($arrA1DFromArrayList3), $pInt4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setManualGroupField(int, double, double, java.util.ArrayList, double)]

      @param pInt0  int
      @param pDouble1  double
      @param pDouble2  double
      @param arrA1DFromArrayList3  array, corresponding java type is {java.util.ArrayList}
      @param pDouble4  double
     */
    function setManualGroupFieldIDDAD($pInt0, $pDouble1, $pDouble2, $arrA1DFromArrayList3, $pDouble4)
    {
        $this->m_PivotTable->setManualGroupField($pInt0, $pDouble1, $pDouble2, ClassFactory::_t1($arrA1DFromArrayList3), $pDouble4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setManualUpdate(boolean)]

      @param pBoolean0  boolean
     */
    function setManualUpdate($pBoolean0)
    {
        $this->m_PivotTable->setManualUpdate($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setMergeLabels(boolean)]

      @param pBoolean0  boolean
     */
    function setMergeLabels($pBoolean0)
    {
        $this->m_PivotTable->setMergeLabels($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setMissingItemsLimit(int)]

      @param pInt0  int
     */
    function setMissingItemsLimit($pInt0)
    {
        $this->m_PivotTable->setMissingItemsLimit($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setMultipleFieldFilters(boolean)]

      @param pBoolean0  boolean
     */
    function setMultipleFieldFilters($pBoolean0)
    {
        $this->m_PivotTable->setMultipleFieldFilters($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setName(java.lang.String)]

      @param oString0  String
     */
    function setName($oString0)
    {
        $this->m_PivotTable->setName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setNullString(java.lang.String)]

      @param oString0  String
     */
    function setNullString($oString0)
    {
        $this->m_PivotTable->setNullString($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setPageFieldOrder(int)]

      @param pInt0  int
     */
    function setPageFieldOrder($pInt0)
    {
        $this->m_PivotTable->setPageFieldOrder($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setPageFieldWrapCount(int)]

      @param pInt0  int
     */
    function setPageFieldWrapCount($pInt0)
    {
        $this->m_PivotTable->setPageFieldWrapCount($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setPivotTableStyleName(java.lang.String)]

      @param oString0  String
     */
    function setPivotTableStyleName($oString0)
    {
        $this->m_PivotTable->setPivotTableStyleName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setPivotTableStyleType(int)]

      @param pInt0  int
     */
    function setPivotTableStyleType($pInt0)
    {
        $this->m_PivotTable->setPivotTableStyleType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setPreserveFormatting(boolean)]

      @param pBoolean0  boolean
     */
    function setPreserveFormatting($pBoolean0)
    {
        $this->m_PivotTable->setPreserveFormatting($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setPrintDrill(boolean)]

      @param pBoolean0  boolean
     */
    function setPrintDrill($pBoolean0)
    {
        $this->m_PivotTable->setPrintDrill($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setPrintTitles(boolean)]

      @param pBoolean0  boolean
     */
    function setPrintTitles($pBoolean0)
    {
        $this->m_PivotTable->setPrintTitles($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setRefreshDataFlag(boolean)]

      @param pBoolean0  boolean
     */
    function setRefreshDataFlag($pBoolean0)
    {
        $this->m_PivotTable->setRefreshDataFlag($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setRefreshDataOnOpeningFile(boolean)]

      @param pBoolean0  boolean
     */
    function setRefreshDataOnOpeningFile($pBoolean0)
    {
        $this->m_PivotTable->setRefreshDataOnOpeningFile($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setRowGrand(boolean)]

      @param pBoolean0  boolean
     */
    function setRowGrand($pBoolean0)
    {
        $this->m_PivotTable->setRowGrand($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setRowHeaderCaption(java.lang.String)]

      @param oString0  String
     */
    function setRowHeaderCaption($oString0)
    {
        $this->m_PivotTable->setRowHeaderCaption($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setSaveData(boolean)]

      @param pBoolean0  boolean
     */
    function setSaveData($pBoolean0)
    {
        $this->m_PivotTable->setSaveData($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setSelected(boolean)]

      @param pBoolean0  boolean
     */
    function setSelected($pBoolean0)
    {
        $this->m_PivotTable->setSelected($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setShowDataTips(boolean)]

      @param pBoolean0  boolean
     */
    function setShowDataTips($pBoolean0)
    {
        $this->m_PivotTable->setShowDataTips($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setShowDrill(boolean)]

      @param pBoolean0  boolean
     */
    function setShowDrill($pBoolean0)
    {
        $this->m_PivotTable->setShowDrill($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setShowEmptyCol(boolean)]

      @param pBoolean0  boolean
     */
    function setShowEmptyCol($pBoolean0)
    {
        $this->m_PivotTable->setShowEmptyCol($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setShowEmptyRow(boolean)]

      @param pBoolean0  boolean
     */
    function setShowEmptyRow($pBoolean0)
    {
        $this->m_PivotTable->setShowEmptyRow($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setShowMemberPropertyTips(boolean)]

      @param pBoolean0  boolean
     */
    function setShowMemberPropertyTips($pBoolean0)
    {
        $this->m_PivotTable->setShowMemberPropertyTips($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setShowPivotStyleColumnHeader(boolean)]

      @param pBoolean0  boolean
     */
    function setShowPivotStyleColumnHeader($pBoolean0)
    {
        $this->m_PivotTable->setShowPivotStyleColumnHeader($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setShowPivotStyleColumnStripes(boolean)]

      @param pBoolean0  boolean
     */
    function setShowPivotStyleColumnStripes($pBoolean0)
    {
        $this->m_PivotTable->setShowPivotStyleColumnStripes($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setShowPivotStyleLastColumn(boolean)]

      @param pBoolean0  boolean
     */
    function setShowPivotStyleLastColumn($pBoolean0)
    {
        $this->m_PivotTable->setShowPivotStyleLastColumn($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setShowPivotStyleRowHeader(boolean)]

      @param pBoolean0  boolean
     */
    function setShowPivotStyleRowHeader($pBoolean0)
    {
        $this->m_PivotTable->setShowPivotStyleRowHeader($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setShowPivotStyleRowStripes(boolean)]

      @param pBoolean0  boolean
     */
    function setShowPivotStyleRowStripes($pBoolean0)
    {
        $this->m_PivotTable->setShowPivotStyleRowStripes($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setShowRowHeaderCaption(boolean)]

      @param pBoolean0  boolean
     */
    function setShowRowHeaderCaption($pBoolean0)
    {
        $this->m_PivotTable->setShowRowHeaderCaption($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setShowValuesRow(boolean)]

      @param pBoolean0  boolean
     */
    function setShowValuesRow($pBoolean0)
    {
        $this->m_PivotTable->setShowValuesRow($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setSubtotalHiddenPageItems(boolean)]

      @param pBoolean0  boolean
     */
    function setSubtotalHiddenPageItems($pBoolean0)
    {
        $this->m_PivotTable->setSubtotalHiddenPageItems($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setTag(java.lang.String)]

      @param oString0  String
     */
    function setTag($oString0)
    {
        $this->m_PivotTable->setTag($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setUngroup(com.aspose.cells.PivotField)]

      @param oPivotField0  com.aspose.cells.PivotField
     */
    function setUngroupP($oPivotField0)
    {
        $this->m_PivotTable->setUngroup(ClassFactory::_t1($oPivotField0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.setUngroup(int)]

      @param pInt0  int
     */
    function setUngroupI($pInt0)
    {
        $this->m_PivotTable->setUngroup($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTable.subtotalHiddenPageItems()]

      @return boolean
     */
    function subtotalHiddenPageItems()
    {
        return $this->m_PivotTable->subtotalHiddenPageItems();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.PivotTableAutoFormatType]
  
 */
class PivotTableAutoFormatType
{
    public $m_PivotTableAutoFormatType;
    
    function __construct($pivotTableAutoFormatType)
    {
    	$this->m_PivotTableAutoFormatType = $pivotTableAutoFormatType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PivotTableCollection]
  
 */
class PivotTableCollection extends CollectionBase
{
    public $m_PivotTableCollection;
    
    function __construct($pivotTableCollection)
    {
    	$this->m_PivotTableCollection = $pivotTableCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.PivotTableCollection.add(com.aspose.cells.PivotTable, java.lang.String, java.lang.String)]

      @param oPivotTable0  com.aspose.cells.PivotTable
      @param oString1  String
      @param oString2  String
      @return int
     */
    function addPSS($oPivotTable0, $oString1, $oString2)
    {
        return $this->m_PivotTableCollection->add(ClassFactory::_t1($oPivotTable0), $oString1, $oString2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTableCollection.add(java.lang.String, java.lang.String, java.lang.String)]

      @param oString0  String
      @param oString1  String
      @param oString2  String
      @return int
     */
    function addSSS($oString0, $oString1, $oString2)
    {
        return $this->m_PivotTableCollection->add($oString0, $oString1, $oString2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTableCollection.add(com.aspose.cells.PivotTable, int, int, java.lang.String)]

      @param oPivotTable0  com.aspose.cells.PivotTable
      @param pInt1  int
      @param pInt2  int
      @param oString3  String
      @return int
     */
    function addPIIS($oPivotTable0, $pInt1, $pInt2, $oString3)
    {
        return $this->m_PivotTableCollection->add(ClassFactory::_t1($oPivotTable0), $pInt1, $pInt2, $oString3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTableCollection.add(java.lang.String, int, int, java.lang.String)]

      @param oString0  String
      @param pInt1  int
      @param pInt2  int
      @param oString3  String
      @return int
     */
    function addSIIS($oString0, $pInt1, $pInt2, $oString3)
    {
        return $this->m_PivotTableCollection->add($oString0, $pInt1, $pInt2, $oString3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTableCollection.add(java.lang.String, java.lang.String, java.lang.String, boolean)]

      @param oString0  String
      @param oString1  String
      @param oString2  String
      @param pBoolean3  boolean
      @return int
     */
    function addSSSB($oString0, $oString1, $oString2, $pBoolean3)
    {
        return $this->m_PivotTableCollection->add($oString0, $oString1, $oString2, $pBoolean3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTableCollection.add(java.lang.String, int, int, java.lang.String, boolean)]

      @param oString0  String
      @param pInt1  int
      @param pInt2  int
      @param oString3  String
      @param pBoolean4  boolean
      @return int
     */
    function addSIISB($oString0, $pInt1, $pInt2, $oString3, $pBoolean4)
    {
        return $this->m_PivotTableCollection->add($oString0, $pInt1, $pInt2, $oString3, $pBoolean4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTableCollection.add(java.lang.String[], boolean, com.aspose.cells.PivotPageFields, java.lang.String, java.lang.String)]

      @param arrD1DString0  array, corresponding java type is {String[]}
      @param pBoolean1  boolean
      @param oPivotPageFields2  com.aspose.cells.PivotPageFields
      @param oString3  String
      @param oString4  String
      @return int
     */
    function addSBPSS($arrD1DString0, $pBoolean1, $oPivotPageFields2, $oString3, $oString4)
    {
        return $this->m_PivotTableCollection->add($arrD1DString0, $pBoolean1, ClassFactory::_t1($oPivotPageFields2), $oString3, $oString4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTableCollection.add(java.lang.String[], boolean, com.aspose.cells.PivotPageFields, int, int, java.lang.String)]

      @param arrD1DString0  array, corresponding java type is {String[]}
      @param pBoolean1  boolean
      @param oPivotPageFields2  com.aspose.cells.PivotPageFields
      @param pInt3  int
      @param pInt4  int
      @param oString5  String
      @return int
     */
    function addSBPIIS($arrD1DString0, $pBoolean1, $oPivotPageFields2, $pInt3, $pInt4, $oString5)
    {
        return $this->m_PivotTableCollection->add($arrD1DString0, $pBoolean1, ClassFactory::_t1($oPivotPageFields2), $pInt3, $pInt4, $oString5);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTableCollection.clear()]

     */
    function clear()
    {
        $this->m_PivotTableCollection->clear();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTableCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.PivotTable
     */
    function getI($pInt0)
    {
        return ClassFactory::_t2($this->m_PivotTableCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTableCollection.get(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.PivotTable
     */
    function getS($oString0)
    {
        return ClassFactory::_t2($this->m_PivotTableCollection->get($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTableCollection.get(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return com.aspose.cells.PivotTable
     */
    function getII($pInt0, $pInt1)
    {
        return ClassFactory::_t2($this->m_PivotTableCollection->get($pInt0, $pInt1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTableCollection.remove(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
     */
    function remove($oObject0)
    {
        $this->m_PivotTableCollection->remove(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.PivotTableCollection.removeAt(int)]

      @param pInt0  int
     */
    function removeAt($pInt0)
    {
        $this->m_PivotTableCollection->removeAt($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.PivotTableSourceType]
  
 */
class PivotTableSourceType
{
    public $m_PivotTableSourceType;
    
    function __construct($pivotTableSourceType)
    {
    	$this->m_PivotTableSourceType = $pivotTableSourceType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PivotTableStyleType]
  
 */
class PivotTableStyleType
{
    public $m_PivotTableStyleType;
    
    function __construct($pivotTableStyleType)
    {
    	$this->m_PivotTableStyleType = $pivotTableStyleType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PlacementType]
  
 */
class PlacementType
{
    public $m_PlacementType;
    
    function __construct($placementType)
    {
    	$this->m_PlacementType = $placementType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PlotArea]
  
 */
class PlotArea extends ChartFrame
{
    public $m_PlotArea;
    
    function __construct($plotArea)
    {
    	$this->m_PlotArea = $plotArea;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.PlotArea.getHeight()]

      @return int
     */
    function getHeight()
    {
        return $this->m_PlotArea->getHeight();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PlotArea.getInnerHeight()]

      @return int
     */
    function getInnerHeight()
    {
        return $this->m_PlotArea->getInnerHeight();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PlotArea.getInnerWidth()]

      @return int
     */
    function getInnerWidth()
    {
        return $this->m_PlotArea->getInnerWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PlotArea.getInnerX()]

      @return int
     */
    function getInnerX()
    {
        return $this->m_PlotArea->getInnerX();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PlotArea.getInnerY()]

      @return int
     */
    function getInnerY()
    {
        return $this->m_PlotArea->getInnerY();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PlotArea.getWidth()]

      @return int
     */
    function getWidth()
    {
        return $this->m_PlotArea->getWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PlotArea.getX()]

      @return int
     */
    function getX()
    {
        return $this->m_PlotArea->getX();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PlotArea.getY()]

      @return int
     */
    function getY()
    {
        return $this->m_PlotArea->getY();
    }

    /*
      Wrapper for java version method [com.aspose.cells.PlotArea.setHeight(int)]

      @param pInt0  int
     */
    function setHeight($pInt0)
    {
        $this->m_PlotArea->setHeight($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PlotArea.setInnerHeight(int)]

      @param pInt0  int
     */
    function setInnerHeight($pInt0)
    {
        $this->m_PlotArea->setInnerHeight($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PlotArea.setInnerWidth(int)]

      @param pInt0  int
     */
    function setInnerWidth($pInt0)
    {
        $this->m_PlotArea->setInnerWidth($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PlotArea.setInnerX(int)]

      @param pInt0  int
     */
    function setInnerX($pInt0)
    {
        $this->m_PlotArea->setInnerX($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PlotArea.setInnerY(int)]

      @param pInt0  int
     */
    function setInnerY($pInt0)
    {
        $this->m_PlotArea->setInnerY($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PlotArea.setWidth(int)]

      @param pInt0  int
     */
    function setWidth($pInt0)
    {
        $this->m_PlotArea->setWidth($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PlotArea.setX(int)]

      @param pInt0  int
     */
    function setX($pInt0)
    {
        $this->m_PlotArea->setX($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.PlotArea.setY(int)]

      @param pInt0  int
     */
    function setY($pInt0)
    {
        $this->m_PlotArea->setY($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.PlotEmptyCellsType]
  
 */
class PlotEmptyCellsType
{
    public $m_PlotEmptyCellsType;
    
    function __construct($plotEmptyCellsType)
    {
    	$this->m_PlotEmptyCellsType = $plotEmptyCellsType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PresetMaterialType]
  
 */
class PresetMaterialType
{
    public $m_PresetMaterialType;
    
    function __construct($presetMaterialType)
    {
    	$this->m_PresetMaterialType = $presetMaterialType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PresetShadowType]
  
 */
class PresetShadowType
{
    public $m_PresetShadowType;
    
    function __construct($presetShadowType)
    {
    	$this->m_PresetShadowType = $presetShadowType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PrintCommentsType]
  
 */
class PrintCommentsType
{
    public $m_PrintCommentsType;
    
    function __construct($printCommentsType)
    {
    	$this->m_PrintCommentsType = $printCommentsType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PrintErrorsType]
  
 */
class PrintErrorsType
{
    public $m_PrintErrorsType;
    
    function __construct($printErrorsType)
    {
    	$this->m_PrintErrorsType = $printErrorsType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PrintingPageType]
  
 */
class PrintingPageType
{
    public $m_PrintingPageType;
    
    function __construct($printingPageType)
    {
    	$this->m_PrintingPageType = $printingPageType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PrintOrderType]
  
 */
class PrintOrderType
{
    public $m_PrintOrderType;
    
    function __construct($printOrderType)
    {
    	$this->m_PrintOrderType = $printOrderType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PrintSizeType]
  
 */
class PrintSizeType
{
    public $m_PrintSizeType;
    
    function __construct($printSizeType)
    {
    	$this->m_PrintSizeType = $printSizeType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.PropertyType]
  
 */
class PropertyType
{
    public $m_PropertyType;
    
    function __construct($propertyType)
    {
    	$this->m_PropertyType = $propertyType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.ProtectedRange]
  
 */
class ProtectedRange
{
    public $m_ProtectedRange;
    
    function __construct($protectedRange)
    {
    	$this->m_ProtectedRange = $protectedRange;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ProtectedRange.addArea(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
     */
    function addArea($pInt0, $pInt1, $pInt2, $pInt3)
    {
        $this->m_ProtectedRange->addArea($pInt0, $pInt1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ProtectedRange.getAreas()]

      @return com.aspose.cells.CellArea[]
     */
    function getAreas()
    {
        return ClassFactory::_t2($this->m_ProtectedRange->getAreas());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ProtectedRange.getCellArea()]

      @return com.aspose.cells.CellArea
     */
    function getCellArea()
    {
        return ClassFactory::_t2($this->m_ProtectedRange->getCellArea());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ProtectedRange.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_ProtectedRange->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ProtectedRange.getPassword()]

      @return String
     */
    function getPassword()
    {
        return $this->m_ProtectedRange->getPassword();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ProtectedRange.getSecurityDescriptor()]

      @return String
     */
    function getSecurityDescriptor()
    {
        return $this->m_ProtectedRange->getSecurityDescriptor();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ProtectedRange.setName(java.lang.String)]

      @param oString0  String
     */
    function setName($oString0)
    {
        $this->m_ProtectedRange->setName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ProtectedRange.setPassword(java.lang.String)]

      @param oString0  String
     */
    function setPassword($oString0)
    {
        $this->m_ProtectedRange->setPassword($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ProtectedRange.setSecurityDescriptor(java.lang.String)]

      @param oString0  String
     */
    function setSecurityDescriptor($oString0)
    {
        $this->m_ProtectedRange->setSecurityDescriptor($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ProtectedRangeCollection]
  
 */
class ProtectedRangeCollection extends CollectionBase
{
    public $m_ProtectedRangeCollection;
    
    function __construct($protectedRangeCollection)
    {
    	$this->m_ProtectedRangeCollection = $protectedRangeCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ProtectedRangeCollection.add(java.lang.String, int, int, int, int)]

      @param oString0  String
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pInt4  int
      @return int
     */
    function add($oString0, $pInt1, $pInt2, $pInt3, $pInt4)
    {
        return $this->m_ProtectedRangeCollection->add($oString0, $pInt1, $pInt2, $pInt3, $pInt4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ProtectedRangeCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.ProtectedRange
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_ProtectedRangeCollection->get($pInt0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.Protection]
  
 */
class Protection
{
    public $m_Protection;
    
    function __construct($protection)
    {
    	$this->m_Protection = $protection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Protection.copy(com.aspose.cells.Protection)]

      @param oProtection0  com.aspose.cells.Protection
     */
    function copy($oProtection0)
    {
        $this->m_Protection->copy(ClassFactory::_t1($oProtection0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.getAllowDeletingColumn()]

      @return boolean
     */
    function getAllowDeletingColumn()
    {
        return $this->m_Protection->getAllowDeletingColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.getAllowDeletingRow()]

      @return boolean
     */
    function getAllowDeletingRow()
    {
        return $this->m_Protection->getAllowDeletingRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.getAllowEditingContent()]

      @return boolean
     */
    function getAllowEditingContent()
    {
        return $this->m_Protection->getAllowEditingContent();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.getAllowEditingObject()]

      @return boolean
     */
    function getAllowEditingObject()
    {
        return $this->m_Protection->getAllowEditingObject();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.getAllowEditingScenario()]

      @return boolean
     */
    function getAllowEditingScenario()
    {
        return $this->m_Protection->getAllowEditingScenario();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.getAllowFiltering()]

      @return boolean
     */
    function getAllowFiltering()
    {
        return $this->m_Protection->getAllowFiltering();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.getAllowFormattingCell()]

      @return boolean
     */
    function getAllowFormattingCell()
    {
        return $this->m_Protection->getAllowFormattingCell();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.getAllowFormattingColumn()]

      @return boolean
     */
    function getAllowFormattingColumn()
    {
        return $this->m_Protection->getAllowFormattingColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.getAllowFormattingRow()]

      @return boolean
     */
    function getAllowFormattingRow()
    {
        return $this->m_Protection->getAllowFormattingRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.getAllowInsertingColumn()]

      @return boolean
     */
    function getAllowInsertingColumn()
    {
        return $this->m_Protection->getAllowInsertingColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.getAllowInsertingHyperlink()]

      @return boolean
     */
    function getAllowInsertingHyperlink()
    {
        return $this->m_Protection->getAllowInsertingHyperlink();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.getAllowInsertingRow()]

      @return boolean
     */
    function getAllowInsertingRow()
    {
        return $this->m_Protection->getAllowInsertingRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.getAllowSelectingLockedCell()]

      @return boolean
     */
    function getAllowSelectingLockedCell()
    {
        return $this->m_Protection->getAllowSelectingLockedCell();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.getAllowSelectingUnlockedCell()]

      @return boolean
     */
    function getAllowSelectingUnlockedCell()
    {
        return $this->m_Protection->getAllowSelectingUnlockedCell();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.getAllowSorting()]

      @return boolean
     */
    function getAllowSorting()
    {
        return $this->m_Protection->getAllowSorting();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.getAllowUsingPivotTable()]

      @return boolean
     */
    function getAllowUsingPivotTable()
    {
        return $this->m_Protection->getAllowUsingPivotTable();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.getPassword()]

      @return String
     */
    function getPassword()
    {
        return $this->m_Protection->getPassword();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.getPasswordHash()]

      @return int
     */
    function getPasswordHash()
    {
        return $this->m_Protection->getPasswordHash();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.isDeletingColumnsAllowed()]

      @return boolean
     */
    function isDeletingColumnsAllowed()
    {
        return $this->m_Protection->isDeletingColumnsAllowed();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.isDeletingRowsAllowed()]

      @return boolean
     */
    function isDeletingRowsAllowed()
    {
        return $this->m_Protection->isDeletingRowsAllowed();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.isEditingContentsAllowed()]

      @return boolean
     */
    function isEditingContentsAllowed()
    {
        return $this->m_Protection->isEditingContentsAllowed();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.isEditingObjectsAllowed()]

      @return boolean
     */
    function isEditingObjectsAllowed()
    {
        return $this->m_Protection->isEditingObjectsAllowed();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.isEditingScenariosAllowed()]

      @return boolean
     */
    function isEditingScenariosAllowed()
    {
        return $this->m_Protection->isEditingScenariosAllowed();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.isFilteringAllowed()]

      @return boolean
     */
    function isFilteringAllowed()
    {
        return $this->m_Protection->isFilteringAllowed();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.isFormattingCellsAllowed()]

      @return boolean
     */
    function isFormattingCellsAllowed()
    {
        return $this->m_Protection->isFormattingCellsAllowed();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.isFormattingColumnsAllowed()]

      @return boolean
     */
    function isFormattingColumnsAllowed()
    {
        return $this->m_Protection->isFormattingColumnsAllowed();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.isFormattingRowsAllowed()]

      @return boolean
     */
    function isFormattingRowsAllowed()
    {
        return $this->m_Protection->isFormattingRowsAllowed();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.isInsertingColumnsAllowed()]

      @return boolean
     */
    function isInsertingColumnsAllowed()
    {
        return $this->m_Protection->isInsertingColumnsAllowed();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.isInsertingHyperlinksAllowed()]

      @return boolean
     */
    function isInsertingHyperlinksAllowed()
    {
        return $this->m_Protection->isInsertingHyperlinksAllowed();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.isInsertingRowsAllowed()]

      @return boolean
     */
    function isInsertingRowsAllowed()
    {
        return $this->m_Protection->isInsertingRowsAllowed();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.isSelectingLockedCellsAllowed()]

      @return boolean
     */
    function isSelectingLockedCellsAllowed()
    {
        return $this->m_Protection->isSelectingLockedCellsAllowed();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.isSelectingUnlockedCellsAllowed()]

      @return boolean
     */
    function isSelectingUnlockedCellsAllowed()
    {
        return $this->m_Protection->isSelectingUnlockedCellsAllowed();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.isSortingAllowed()]

      @return boolean
     */
    function isSortingAllowed()
    {
        return $this->m_Protection->isSortingAllowed();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.isUsingPivotTablesAllowed()]

      @return boolean
     */
    function isUsingPivotTablesAllowed()
    {
        return $this->m_Protection->isUsingPivotTablesAllowed();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setAllowDeletingColumn(boolean)]

      @param pBoolean0  boolean
     */
    function setAllowDeletingColumn($pBoolean0)
    {
        $this->m_Protection->setAllowDeletingColumn($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setAllowDeletingRow(boolean)]

      @param pBoolean0  boolean
     */
    function setAllowDeletingRow($pBoolean0)
    {
        $this->m_Protection->setAllowDeletingRow($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setAllowEditingContent(boolean)]

      @param pBoolean0  boolean
     */
    function setAllowEditingContent($pBoolean0)
    {
        $this->m_Protection->setAllowEditingContent($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setAllowEditingObject(boolean)]

      @param pBoolean0  boolean
     */
    function setAllowEditingObject($pBoolean0)
    {
        $this->m_Protection->setAllowEditingObject($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setAllowEditingScenario(boolean)]

      @param pBoolean0  boolean
     */
    function setAllowEditingScenario($pBoolean0)
    {
        $this->m_Protection->setAllowEditingScenario($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setAllowFiltering(boolean)]

      @param pBoolean0  boolean
     */
    function setAllowFiltering($pBoolean0)
    {
        $this->m_Protection->setAllowFiltering($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setAllowFormattingCell(boolean)]

      @param pBoolean0  boolean
     */
    function setAllowFormattingCell($pBoolean0)
    {
        $this->m_Protection->setAllowFormattingCell($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setAllowFormattingColumn(boolean)]

      @param pBoolean0  boolean
     */
    function setAllowFormattingColumn($pBoolean0)
    {
        $this->m_Protection->setAllowFormattingColumn($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setAllowFormattingRow(boolean)]

      @param pBoolean0  boolean
     */
    function setAllowFormattingRow($pBoolean0)
    {
        $this->m_Protection->setAllowFormattingRow($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setAllowInsertingColumn(boolean)]

      @param pBoolean0  boolean
     */
    function setAllowInsertingColumn($pBoolean0)
    {
        $this->m_Protection->setAllowInsertingColumn($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setAllowInsertingHyperlink(boolean)]

      @param pBoolean0  boolean
     */
    function setAllowInsertingHyperlink($pBoolean0)
    {
        $this->m_Protection->setAllowInsertingHyperlink($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setAllowInsertingRow(boolean)]

      @param pBoolean0  boolean
     */
    function setAllowInsertingRow($pBoolean0)
    {
        $this->m_Protection->setAllowInsertingRow($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setAllowSelectingLockedCell(boolean)]

      @param pBoolean0  boolean
     */
    function setAllowSelectingLockedCell($pBoolean0)
    {
        $this->m_Protection->setAllowSelectingLockedCell($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setAllowSelectingUnlockedCell(boolean)]

      @param pBoolean0  boolean
     */
    function setAllowSelectingUnlockedCell($pBoolean0)
    {
        $this->m_Protection->setAllowSelectingUnlockedCell($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setAllowSorting(boolean)]

      @param pBoolean0  boolean
     */
    function setAllowSorting($pBoolean0)
    {
        $this->m_Protection->setAllowSorting($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setAllowUsingPivotTable(boolean)]

      @param pBoolean0  boolean
     */
    function setAllowUsingPivotTable($pBoolean0)
    {
        $this->m_Protection->setAllowUsingPivotTable($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setDeletingColumnsAllowed(boolean)]

      @param pBoolean0  boolean
     */
    function setDeletingColumnsAllowed($pBoolean0)
    {
        $this->m_Protection->setDeletingColumnsAllowed($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setDeletingRowsAllowed(boolean)]

      @param pBoolean0  boolean
     */
    function setDeletingRowsAllowed($pBoolean0)
    {
        $this->m_Protection->setDeletingRowsAllowed($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setEditingContentsAllowed(boolean)]

      @param pBoolean0  boolean
     */
    function setEditingContentsAllowed($pBoolean0)
    {
        $this->m_Protection->setEditingContentsAllowed($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setEditingObjectsAllowed(boolean)]

      @param pBoolean0  boolean
     */
    function setEditingObjectsAllowed($pBoolean0)
    {
        $this->m_Protection->setEditingObjectsAllowed($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setEditingScenariosAllowed(boolean)]

      @param pBoolean0  boolean
     */
    function setEditingScenariosAllowed($pBoolean0)
    {
        $this->m_Protection->setEditingScenariosAllowed($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setFilteringAllowed(boolean)]

      @param pBoolean0  boolean
     */
    function setFilteringAllowed($pBoolean0)
    {
        $this->m_Protection->setFilteringAllowed($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setFormattingCellsAllowed(boolean)]

      @param pBoolean0  boolean
     */
    function setFormattingCellsAllowed($pBoolean0)
    {
        $this->m_Protection->setFormattingCellsAllowed($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setFormattingColumnsAllowed(boolean)]

      @param pBoolean0  boolean
     */
    function setFormattingColumnsAllowed($pBoolean0)
    {
        $this->m_Protection->setFormattingColumnsAllowed($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setFormattingRowsAllowed(boolean)]

      @param pBoolean0  boolean
     */
    function setFormattingRowsAllowed($pBoolean0)
    {
        $this->m_Protection->setFormattingRowsAllowed($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setInsertingColumnsAllowed(boolean)]

      @param pBoolean0  boolean
     */
    function setInsertingColumnsAllowed($pBoolean0)
    {
        $this->m_Protection->setInsertingColumnsAllowed($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setInsertingHyperlinksAllowed(boolean)]

      @param pBoolean0  boolean
     */
    function setInsertingHyperlinksAllowed($pBoolean0)
    {
        $this->m_Protection->setInsertingHyperlinksAllowed($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setInsertingRowsAllowed(boolean)]

      @param pBoolean0  boolean
     */
    function setInsertingRowsAllowed($pBoolean0)
    {
        $this->m_Protection->setInsertingRowsAllowed($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setPassword(java.lang.String)]

      @param oString0  String
     */
    function setPassword($oString0)
    {
        $this->m_Protection->setPassword($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setSelectingLockedCellsAllowed(boolean)]

      @param pBoolean0  boolean
     */
    function setSelectingLockedCellsAllowed($pBoolean0)
    {
        $this->m_Protection->setSelectingLockedCellsAllowed($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setSelectingUnlockedCellsAllowed(boolean)]

      @param pBoolean0  boolean
     */
    function setSelectingUnlockedCellsAllowed($pBoolean0)
    {
        $this->m_Protection->setSelectingUnlockedCellsAllowed($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setSortingAllowed(boolean)]

      @param pBoolean0  boolean
     */
    function setSortingAllowed($pBoolean0)
    {
        $this->m_Protection->setSortingAllowed($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Protection.setUsingPivotTablesAllowed(boolean)]

      @param pBoolean0  boolean
     */
    function setUsingPivotTablesAllowed($pBoolean0)
    {
        $this->m_Protection->setUsingPivotTablesAllowed($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ProtectionType]
  
 */
class ProtectionType
{
    public $m_ProtectionType;
    
    function __construct($protectionType)
    {
    	$this->m_ProtectionType = $protectionType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.QueryTable]
  
 */
class QueryTable
{
    public $m_QueryTable;
    
    function __construct($queryTable)
    {
    	$this->m_QueryTable = $queryTable;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.QueryTable.getAdjustColumnWidth()]

      @return boolean
     */
    function getAdjustColumnWidth()
    {
        return $this->m_QueryTable->getAdjustColumnWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.QueryTable.getPreserveFormatting()]

      @return boolean
     */
    function getPreserveFormatting()
    {
        return $this->m_QueryTable->getPreserveFormatting();
    }

    /*
      Wrapper for java version method [com.aspose.cells.QueryTable.setAdjustColumnWidth(boolean)]

      @param pBoolean0  boolean
     */
    function setAdjustColumnWidth($pBoolean0)
    {
        $this->m_QueryTable->setAdjustColumnWidth($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.QueryTable.setPreserveFormatting(boolean)]

      @param pBoolean0  boolean
     */
    function setPreserveFormatting($pBoolean0)
    {
        $this->m_QueryTable->setPreserveFormatting($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.QueryTableCollection]
  
 */
class QueryTableCollection extends CollectionBase
{
    public $m_QueryTableCollection;
    
    function __construct($queryTableCollection)
    {
    	$this->m_QueryTableCollection = $queryTableCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.QueryTableCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.QueryTable
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_QueryTableCollection->get($pInt0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.RadioButton]
  
 */
class RadioButton extends Shape
{
    public $m_RadioButton;
    
    function __construct($radioButton)
    {
    	$this->m_RadioButton = $radioButton;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.RadioButton.getGroupBox()]

      @return com.aspose.cells.GroupBox
     */
    function getGroupBox()
    {
        return ClassFactory::_t2($this->m_RadioButton->getGroupBox());
    }

    /*
      Wrapper for java version method [com.aspose.cells.RadioButton.getLinkedCell()]

      @return String
     */
    function getLinkedCell()
    {
        return $this->m_RadioButton->getLinkedCell();
    }

    /*
      Wrapper for java version method [com.aspose.cells.RadioButton.getShadow()]

      @return boolean
     */
    function getShadow()
    {
        return $this->m_RadioButton->getShadow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.RadioButton.isChecked()]

      @return boolean
     */
    function isChecked()
    {
        return $this->m_RadioButton->isChecked();
    }

    /*
      Wrapper for java version method [com.aspose.cells.RadioButton.setChecked(boolean)]

      @param pBoolean0  boolean
     */
    function setChecked($pBoolean0)
    {
        $this->m_RadioButton->setChecked($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.RadioButton.setLinkedCell(java.lang.String)]

      @param oString0  String
     */
    function setLinkedCell($oString0)
    {
        $this->m_RadioButton->setLinkedCell($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.RadioButton.setShadow(boolean)]

      @param pBoolean0  boolean
     */
    function setShadow($pBoolean0)
    {
        $this->m_RadioButton->setShadow($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.Range]
  
 */
class Range
{
    public $m_Range;
    
    function __construct($range)
    {
    	$this->m_Range = $range;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Range.applyStyle(com.aspose.cells.Style, com.aspose.cells.StyleFlag)]

      @param oStyle0  com.aspose.cells.Style
      @param oStyleFlag1  com.aspose.cells.StyleFlag
     */
    function applyStyle($oStyle0, $oStyleFlag1)
    {
        $this->m_Range->applyStyle(ClassFactory::_t1($oStyle0), ClassFactory::_t1($oStyleFlag1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.copy(com.aspose.cells.Range)]

      @param oRange0  com.aspose.cells.Range
     */
    function copyR($oRange0)
    {
        $this->m_Range->copy(ClassFactory::_t1($oRange0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.copy(com.aspose.cells.Range, com.aspose.cells.PasteOptions)]

      @param oRange0  com.aspose.cells.Range
      @param oPasteOptions1  com.aspose.cells.PasteOptions
     */
    function copyRP($oRange0, $oPasteOptions1)
    {
        $this->m_Range->copy(ClassFactory::_t1($oRange0), ClassFactory::_t1($oPasteOptions1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.copyData(com.aspose.cells.Range)]

      @param oRange0  com.aspose.cells.Range
     */
    function copyData($oRange0)
    {
        $this->m_Range->copyData(ClassFactory::_t1($oRange0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.copyStyle(com.aspose.cells.Range)]

      @param oRange0  com.aspose.cells.Range
     */
    function copyStyle($oRange0)
    {
        $this->m_Range->copyStyle(ClassFactory::_t1($oRange0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.copyValue(com.aspose.cells.Range)]

      @param oRange0  com.aspose.cells.Range
     */
    function copyValue($oRange0)
    {
        $this->m_Range->copyValue(ClassFactory::_t1($oRange0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.get(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return com.aspose.cells.Cell
     */
    function get($pInt0, $pInt1)
    {
        return ClassFactory::_t2($this->m_Range->get($pInt0, $pInt1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.getCellOrNull(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return com.aspose.cells.Cell
     */
    function getCellOrNull($pInt0, $pInt1)
    {
        return ClassFactory::_t2($this->m_Range->getCellOrNull($pInt0, $pInt1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.getColumnCount()]

      @return int
     */
    function getColumnCount()
    {
        return $this->m_Range->getColumnCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.getColumnWidth()]

      @return double
     */
    function getColumnWidth()
    {
        return $this->m_Range->getColumnWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.getFirstColumn()]

      @return int
     */
    function getFirstColumn()
    {
        return $this->m_Range->getFirstColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.getFirstRow()]

      @return int
     */
    function getFirstRow()
    {
        return $this->m_Range->getFirstRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_Range->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.getRefersTo()]

      @return String
     */
    function getRefersTo()
    {
        return $this->m_Range->getRefersTo();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.getRowCount()]

      @return int
     */
    function getRowCount()
    {
        return $this->m_Range->getRowCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.getRowHeight()]

      @return double
     */
    function getRowHeight()
    {
        return $this->m_Range->getRowHeight();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.getValue()]

      @return corresponding java type is {java.lang.Object}
     */
    function getValue()
    {
        return ClassFactory::_t2($this->m_Range->getValue());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.getWorksheet()]

      @return com.aspose.cells.Worksheet
     */
    function getWorksheet()
    {
        return ClassFactory::_t2($this->m_Range->getWorksheet());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.intersect(com.aspose.cells.Range)]

      @param oRange0  com.aspose.cells.Range
      @return com.aspose.cells.Range
     */
    function intersect($oRange0)
    {
        return ClassFactory::_t2($this->m_Range->intersect(ClassFactory::_t1($oRange0)));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.isIntersect(com.aspose.cells.Range)]

      @param oRange0  com.aspose.cells.Range
      @return boolean
     */
    function isIntersect($oRange0)
    {
        return $this->m_Range->isIntersect(ClassFactory::_t1($oRange0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.iterator()]

      @return corresponding java type is {java.util.Iterator}
     */
    function iterator()
    {
        return ClassFactory::_t2($this->m_Range->iterator());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.merge()]

     */
    function merge()
    {
        $this->m_Range->merge();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.moveTo(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function moveTo($pInt0, $pInt1)
    {
        $this->m_Range->moveTo($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.putValue(java.lang.String, boolean, boolean)]

      @param oString0  String
      @param pBoolean1  boolean
      @param pBoolean2  boolean
     */
    function putValue($oString0, $pBoolean1, $pBoolean2)
    {
        $this->m_Range->putValue($oString0, $pBoolean1, $pBoolean2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.setColumnWidth(double)]

      @param pDouble0  double
     */
    function setColumnWidth($pDouble0)
    {
        $this->m_Range->setColumnWidth($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.setName(java.lang.String)]

      @param oString0  String
     */
    function setName($oString0)
    {
        $this->m_Range->setName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.setOutlineBorder(int, int, com.aspose.cells.Color)]

      @param pInt0  int
      @param pInt1  int
      @param oColor2  com.aspose.cells.Color
     */
    function setOutlineBorder($pInt0, $pInt1, $oColor2)
    {
        $this->m_Range->setOutlineBorder($pInt0, $pInt1, ClassFactory::_t1($oColor2));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.setOutlineBorders(int, com.aspose.cells.Color)]

      @param pInt0  int
      @param oColor1  com.aspose.cells.Color
     */
    function setOutlineBordersIC($pInt0, $oColor1)
    {
        $this->m_Range->setOutlineBorders($pInt0, ClassFactory::_t1($oColor1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.setOutlineBorders(int[], com.aspose.cells.Color[])]

      @param arrP1DInt0  int[]
      @param arrO1DColor1  com.aspose.cells.Color[]
     */
    function setOutlineBordersIC1($arrP1DInt0, $arrO1DColor1)
    {
        $this->m_Range->setOutlineBorders($arrP1DInt0, ClassFactory::_t1($arrO1DColor1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.setRowHeight(double)]

      @param pDouble0  double
     */
    function setRowHeight($pDouble0)
    {
        $this->m_Range->setRowHeight($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.setStyle(com.aspose.cells.Style)]

      @param oStyle0  com.aspose.cells.Style
     */
    function setStyle($oStyle0)
    {
        $this->m_Range->setStyle(ClassFactory::_t1($oStyle0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.setValue(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
     */
    function setValue($oObject0)
    {
        $this->m_Range->setValue(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.toString()]

      @return String
     */
    function toString()
    {
        return $this->m_Range->toString();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.unMerge()]

     */
    function unMerge()
    {
        $this->m_Range->unMerge();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Range.union(com.aspose.cells.Range)]

      @param oRange0  com.aspose.cells.Range
      @return array, corresponding java type is {java.util.ArrayList}
     */
    function union($oRange0)
    {
        return ClassFactory::_t2($this->m_Range->union(ClassFactory::_t1($oRange0)));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.RangeCollection]
  
 */
class RangeCollection extends CollectionBase
{
    public $m_RangeCollection;
    
    function __construct($rangeCollection)
    {
    	$this->m_RangeCollection = $rangeCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.RangeCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.Range
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_RangeCollection->get($pInt0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ReConnectionMethodType]
  
 */
class ReConnectionMethodType
{
    public $m_ReConnectionMethodType;
    
    function __construct($reConnectionMethodType)
    {
    	$this->m_ReConnectionMethodType = $reConnectionMethodType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.RectangleAlignmentType]
  
 */
class RectangleAlignmentType
{
    public $m_RectangleAlignmentType;
    
    function __construct($rectangleAlignmentType)
    {
    	$this->m_RectangleAlignmentType = $rectangleAlignmentType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.RectangleShape]
  
 */
class RectangleShape extends Shape
{
    public $m_RectangleShape;
    
    function __construct($rectangleShape)
    {
    	$this->m_RectangleShape = $rectangleShape;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.ReferredArea]
  
 */
class ReferredArea
{
    public $m_ReferredArea;
    
    function __construct($referredArea)
    {
    	$this->m_ReferredArea = $referredArea;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ReferredArea.getEndColumn()]

      @return int
     */
    function getEndColumn()
    {
        return $this->m_ReferredArea->getEndColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ReferredArea.getEndRow()]

      @return int
     */
    function getEndRow()
    {
        return $this->m_ReferredArea->getEndRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ReferredArea.getExternalFileName()]

      @return String
     */
    function getExternalFileName()
    {
        return $this->m_ReferredArea->getExternalFileName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ReferredArea.getSheetName()]

      @return String
     */
    function getSheetName()
    {
        return $this->m_ReferredArea->getSheetName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ReferredArea.getStartColumn()]

      @return int
     */
    function getStartColumn()
    {
        return $this->m_ReferredArea->getStartColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ReferredArea.getStartRow()]

      @return int
     */
    function getStartRow()
    {
        return $this->m_ReferredArea->getStartRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ReferredArea.isArea()]

      @return boolean
     */
    function isArea()
    {
        return $this->m_ReferredArea->isArea();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ReferredArea.isExternalLink()]

      @return boolean
     */
    function isExternalLink()
    {
        return $this->m_ReferredArea->isExternalLink();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ReferredAreaCollection]
  
 */
class ReferredAreaCollection extends CollectionBase
{
    public $m_ReferredAreaCollection;
    
    function __construct($referredAreaCollection)
    {
    	$this->m_ReferredAreaCollection = $referredAreaCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ReferredAreaCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.ReferredArea
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_ReferredAreaCollection->get($pInt0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ReplaceOptions]
  
 */
class ReplaceOptions
{
    public $m_ReplaceOptions;
    
    function __construct($replaceOptions)
    {
    	$this->m_ReplaceOptions = $replaceOptions;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ReplaceOptions.getCaseSensitive()]

      @return boolean
     */
    function getCaseSensitive()
    {
        return $this->m_ReplaceOptions->getCaseSensitive();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ReplaceOptions.getMatchEntireCellContents()]

      @return boolean
     */
    function getMatchEntireCellContents()
    {
        return $this->m_ReplaceOptions->getMatchEntireCellContents();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ReplaceOptions.setCaseSensitive(boolean)]

      @param pBoolean0  boolean
     */
    function setCaseSensitive($pBoolean0)
    {
        $this->m_ReplaceOptions->setCaseSensitive($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ReplaceOptions.setMatchEntireCellContents(boolean)]

      @param pBoolean0  boolean
     */
    function setMatchEntireCellContents($pBoolean0)
    {
        $this->m_ReplaceOptions->setMatchEntireCellContents($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.Row]
  
 */
class Row
{
    public $m_Row;
    
    function __construct($row)
    {
    	$this->m_Row = $row;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Row.applyStyle(com.aspose.cells.Style, com.aspose.cells.StyleFlag)]

      @param oStyle0  com.aspose.cells.Style
      @param oStyleFlag1  com.aspose.cells.StyleFlag
     */
    function applyStyle($oStyle0, $oStyleFlag1)
    {
        $this->m_Row->applyStyle(ClassFactory::_t1($oStyle0), ClassFactory::_t1($oStyleFlag1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Row.equals(com.aspose.cells.Row)]

      @param oRow0  com.aspose.cells.Row
      @return boolean
     */
    function equalsR($oRow0)
    {
        return $this->m_Row->equals(ClassFactory::_t1($oRow0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Row.equals(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
      @return boolean
     */
    function equalsO($oObject0)
    {
        return $this->m_Row->equals(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Row.get(int)]

      @param pInt0  int
      @return com.aspose.cells.Cell
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_Row->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Row.getCellByIndex(int)]

      @param pInt0  int
      @return com.aspose.cells.Cell
     */
    function getCellByIndex($pInt0)
    {
        return ClassFactory::_t2($this->m_Row->getCellByIndex($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Row.getCellOrNull(int)]

      @param pInt0  int
      @return com.aspose.cells.Cell
     */
    function getCellOrNull($pInt0)
    {
        return ClassFactory::_t2($this->m_Row->getCellOrNull($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Row.getFirstCell()]

      @return com.aspose.cells.Cell
     */
    function getFirstCell()
    {
        return ClassFactory::_t2($this->m_Row->getFirstCell());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Row.getGroupLevel()]

      @return byte
     */
    function getGroupLevel()
    {
        return $this->m_Row->getGroupLevel();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Row.getHeight()]

      @return double
     */
    function getHeight()
    {
        return $this->m_Row->getHeight();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Row.getIndex()]

      @return int
     */
    function getIndex()
    {
        return $this->m_Row->getIndex();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Row.getLastCell()]

      @return com.aspose.cells.Cell
     */
    function getLastCell()
    {
        return ClassFactory::_t2($this->m_Row->getLastCell());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Row.getLastDataCell()]

      @return com.aspose.cells.Cell
     */
    function getLastDataCell()
    {
        return ClassFactory::_t2($this->m_Row->getLastDataCell());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Row.getStyle()]

      @return com.aspose.cells.Style
     */
    function getStyle()
    {
        return ClassFactory::_t2($this->m_Row->getStyle());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Row.isBlank()]

      @return boolean
     */
    function isBlank()
    {
        return $this->m_Row->isBlank();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Row.isHeightMatched()]

      @return boolean
     */
    function isHeightMatched()
    {
        return $this->m_Row->isHeightMatched();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Row.isHidden()]

      @return boolean
     */
    function isHidden()
    {
        return $this->m_Row->isHidden();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Row.iterator()]

      @return corresponding java type is {java.util.Iterator}
     */
    function iterator()
    {
        return ClassFactory::_t2($this->m_Row->iterator());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Row.setHeight(double)]

      @param pDouble0  double
     */
    function setHeight($pDouble0)
    {
        $this->m_Row->setHeight($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Row.setHeightMatched(boolean)]

      @param pBoolean0  boolean
     */
    function setHeightMatched($pBoolean0)
    {
        $this->m_Row->setHeightMatched($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Row.setHidden(boolean)]

      @param pBoolean0  boolean
     */
    function setHidden($pBoolean0)
    {
        $this->m_Row->setHidden($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.RowCollection]
  
 */
class RowCollection
{
    public $m_RowCollection;
    
    function __construct($rowCollection)
    {
    	$this->m_RowCollection = $rowCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.RowCollection.clear()]

     */
    function clear()
    {
        $this->m_RowCollection->clear();
    }

    /*
      Wrapper for java version method [com.aspose.cells.RowCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.Row
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_RowCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.RowCollection.getCount()]

      @return int
     */
    function getCount()
    {
        return $this->m_RowCollection->getCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.RowCollection.getRowByIndex(int)]

      @param pInt0  int
      @return com.aspose.cells.Row
     */
    function getRowByIndex($pInt0)
    {
        return ClassFactory::_t2($this->m_RowCollection->getRowByIndex($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.RowCollection.iterator()]

      @return corresponding java type is {java.util.Iterator}
     */
    function iterator()
    {
        return ClassFactory::_t2($this->m_RowCollection->iterator());
    }

    /*
      Wrapper for java version method [com.aspose.cells.RowCollection.removeAt(int)]

      @param pInt0  int
     */
    function removeAt($pInt0)
    {
        $this->m_RowCollection->removeAt($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.SaveFormat]
  
 */
class SaveFormat
{
    public $m_SaveFormat;
    
    function __construct($saveFormat)
    {
    	$this->m_SaveFormat = $saveFormat;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.SaveOptions]
  
 */
class SaveOptions
{
    public $m_SaveOptions;
    
    function __construct($saveOptions)
    {
    	$this->m_SaveOptions = $saveOptions;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.getCachedFileFolder()]

      @return String
     */
    function getCachedFileFolder()
    {
        return $this->m_SaveOptions->getCachedFileFolder();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.getClearData()]

      @return boolean
     */
    function getClearData()
    {
        return $this->m_SaveOptions->getClearData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.getCompliance()]

      @return int
     */
    function getCompliance()
    {
        return $this->m_SaveOptions->getCompliance();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.getCreateDirectory()]

      @return boolean
     */
    function getCreateDirectory()
    {
        return $this->m_SaveOptions->getCreateDirectory();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.getDefaultFont()]

      @return String
     */
    function getDefaultFont()
    {
        return $this->m_SaveOptions->getDefaultFont();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.getEnableHTTPCompression()]

      @return boolean
     */
    function getEnableHTTPCompression()
    {
        return $this->m_SaveOptions->getEnableHTTPCompression();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.getExpCellNameToXLSX()]

      @return boolean
     */
    function getExpCellNameToXLSX()
    {
        return $this->m_SaveOptions->getExpCellNameToXLSX();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.getPdfBookmark()]

      @return com.aspose.cells.PdfBookmarkEntry
     */
    function getPdfBookmark()
    {
        return ClassFactory::_t2($this->m_SaveOptions->getPdfBookmark());
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.getPdfExportImagesFolder()]

      @return String
     */
    function getPdfExportImagesFolder()
    {
        return $this->m_SaveOptions->getPdfExportImagesFolder();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.getPdfImageCompression()]

      @return boolean
     */
    function getPdfImageCompression()
    {
        return $this->m_SaveOptions->getPdfImageCompression();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.getRefreshChartCache()]

      @return boolean
     */
    function getRefreshChartCache()
    {
        return $this->m_SaveOptions->getRefreshChartCache();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.getSaveFormat()]

      @return int
     */
    function getSaveFormat()
    {
        return $this->m_SaveOptions->getSaveFormat();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.getSortNames()]

      @return boolean
     */
    function getSortNames()
    {
        return $this->m_SaveOptions->getSortNames();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.getValidateMergedAreas()]

      @return boolean
     */
    function getValidateMergedAreas()
    {
        return $this->m_SaveOptions->getValidateMergedAreas();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.getWarningCallback()]

      @return com.aspose.cells.IWarningCallback
     */
    function getWarningCallback()
    {
        return ClassFactory::_t2($this->m_SaveOptions->getWarningCallback());
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.setCachedFileFolder(java.lang.String)]

      @param oString0  String
     */
    function setCachedFileFolder($oString0)
    {
        $this->m_SaveOptions->setCachedFileFolder($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.setClearData(boolean)]

      @param pBoolean0  boolean
     */
    function setClearData($pBoolean0)
    {
        $this->m_SaveOptions->setClearData($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.setCompliance(int)]

      @param pInt0  int
     */
    function setCompliance($pInt0)
    {
        $this->m_SaveOptions->setCompliance($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.setCreateDirectory(boolean)]

      @param pBoolean0  boolean
     */
    function setCreateDirectory($pBoolean0)
    {
        $this->m_SaveOptions->setCreateDirectory($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.setDefaultFont(java.lang.String)]

      @param oString0  String
     */
    function setDefaultFont($oString0)
    {
        $this->m_SaveOptions->setDefaultFont($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.setEnableHTTPCompression(boolean)]

      @param pBoolean0  boolean
     */
    function setEnableHTTPCompression($pBoolean0)
    {
        $this->m_SaveOptions->setEnableHTTPCompression($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.setExpCellNameToXLSX(boolean)]

      @param pBoolean0  boolean
     */
    function setExpCellNameToXLSX($pBoolean0)
    {
        $this->m_SaveOptions->setExpCellNameToXLSX($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.setPdfBookmark(com.aspose.cells.PdfBookmarkEntry)]

      @param oPdfBookmarkEntry0  com.aspose.cells.PdfBookmarkEntry
     */
    function setPdfBookmark($oPdfBookmarkEntry0)
    {
        $this->m_SaveOptions->setPdfBookmark(ClassFactory::_t1($oPdfBookmarkEntry0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.setPdfExportImagesFolder(java.lang.String)]

      @param oString0  String
     */
    function setPdfExportImagesFolder($oString0)
    {
        $this->m_SaveOptions->setPdfExportImagesFolder($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.setPdfImageCompression(boolean)]

      @param pBoolean0  boolean
     */
    function setPdfImageCompression($pBoolean0)
    {
        $this->m_SaveOptions->setPdfImageCompression($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.setRefreshChartCache(boolean)]

      @param pBoolean0  boolean
     */
    function setRefreshChartCache($pBoolean0)
    {
        $this->m_SaveOptions->setRefreshChartCache($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.setSortNames(boolean)]

      @param pBoolean0  boolean
     */
    function setSortNames($pBoolean0)
    {
        $this->m_SaveOptions->setSortNames($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.setValidateMergedAreas(boolean)]

      @param pBoolean0  boolean
     */
    function setValidateMergedAreas($pBoolean0)
    {
        $this->m_SaveOptions->setValidateMergedAreas($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SaveOptions.setWarningCallback(com.aspose.cells.IWarningCallback)]

      @param oIWarningCallback0  com.aspose.cells.IWarningCallback
     */
    function setWarningCallback($oIWarningCallback0)
    {
        $this->m_SaveOptions->setWarningCallback(ClassFactory::_t1($oIWarningCallback0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.Scenario]
  
 */
class Scenario
{
    public $m_Scenario;
    
    function __construct($scenario)
    {
    	$this->m_Scenario = $scenario;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Scenario.getComment()]

      @return String
     */
    function getComment()
    {
        return $this->m_Scenario->getComment();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Scenario.getInputCells()]

      @return com.aspose.cells.ScenarioInputCellCollection
     */
    function getInputCells()
    {
        return ClassFactory::_t2($this->m_Scenario->getInputCells());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Scenario.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_Scenario->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Scenario.getUser()]

      @return String
     */
    function getUser()
    {
        return $this->m_Scenario->getUser();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Scenario.isHidden()]

      @return boolean
     */
    function isHidden()
    {
        return $this->m_Scenario->isHidden();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Scenario.isLocked()]

      @return boolean
     */
    function isLocked()
    {
        return $this->m_Scenario->isLocked();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Scenario.setComment(java.lang.String)]

      @param oString0  String
     */
    function setComment($oString0)
    {
        $this->m_Scenario->setComment($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Scenario.setHidden(boolean)]

      @param pBoolean0  boolean
     */
    function setHidden($pBoolean0)
    {
        $this->m_Scenario->setHidden($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Scenario.setLocked(boolean)]

      @param pBoolean0  boolean
     */
    function setLocked($pBoolean0)
    {
        $this->m_Scenario->setLocked($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Scenario.setName(java.lang.String)]

      @param oString0  String
     */
    function setName($oString0)
    {
        $this->m_Scenario->setName($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ScenarioCollection]
  
 */
class ScenarioCollection extends CollectionBase
{
    public $m_ScenarioCollection;
    
    function __construct($scenarioCollection)
    {
    	$this->m_ScenarioCollection = $scenarioCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ScenarioCollection.add(java.lang.String)]

      @param oString0  String
      @return int
     */
    function add($oString0)
    {
        return $this->m_ScenarioCollection->add($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScenarioCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.Scenario
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_ScenarioCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScenarioCollection.getActiveIndex()]

      @return int
     */
    function getActiveIndex()
    {
        return $this->m_ScenarioCollection->getActiveIndex();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScenarioCollection.getLastSelected()]

      @return int
     */
    function getLastSelected()
    {
        return $this->m_ScenarioCollection->getLastSelected();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScenarioCollection.setActiveIndex(int)]

      @param pInt0  int
     */
    function setActiveIndex($pInt0)
    {
        $this->m_ScenarioCollection->setActiveIndex($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScenarioCollection.setLastSelected(int)]

      @param pInt0  int
     */
    function setLastSelected($pInt0)
    {
        $this->m_ScenarioCollection->setLastSelected($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ScenarioInputCell]
  
 */
class ScenarioInputCell
{
    public $m_ScenarioInputCell;
    
    function __construct($scenarioInputCell)
    {
    	$this->m_ScenarioInputCell = $scenarioInputCell;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ScenarioInputCell.getColumn()]

      @return int
     */
    function getColumn()
    {
        return $this->m_ScenarioInputCell->getColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScenarioInputCell.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_ScenarioInputCell->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScenarioInputCell.getRow()]

      @return int
     */
    function getRow()
    {
        return $this->m_ScenarioInputCell->getRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScenarioInputCell.getValue()]

      @return String
     */
    function getValue()
    {
        return $this->m_ScenarioInputCell->getValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScenarioInputCell.isDeleted()]

      @return boolean
     */
    function isDeleted()
    {
        return $this->m_ScenarioInputCell->isDeleted();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScenarioInputCell.setDeleted(boolean)]

      @param pBoolean0  boolean
     */
    function setDeleted($pBoolean0)
    {
        $this->m_ScenarioInputCell->setDeleted($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScenarioInputCell.setValue(java.lang.String)]

      @param oString0  String
     */
    function setValue($oString0)
    {
        $this->m_ScenarioInputCell->setValue($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ScenarioInputCellCollection]
  
 */
class ScenarioInputCellCollection extends CollectionBase
{
    public $m_ScenarioInputCellCollection;
    
    function __construct($scenarioInputCellCollection)
    {
    	$this->m_ScenarioInputCellCollection = $scenarioInputCellCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ScenarioInputCellCollection.add(int, int, java.lang.String)]

      @param pInt0  int
      @param pInt1  int
      @param oString2  String
      @return int
     */
    function add($pInt0, $pInt1, $oString2)
    {
        return $this->m_ScenarioInputCellCollection->add($pInt0, $pInt1, $oString2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScenarioInputCellCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.ScenarioInputCell
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_ScenarioInputCellCollection->get($pInt0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ScrollBar]
  
 */
class ScrollBar extends Shape
{
    public $m_ScrollBar;
    
    function __construct($scrollBar)
    {
    	$this->m_ScrollBar = $scrollBar;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ScrollBar.getCurrentValue()]

      @return int
     */
    function getCurrentValue()
    {
        return $this->m_ScrollBar->getCurrentValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScrollBar.getIncrementalChange()]

      @return int
     */
    function getIncrementalChange()
    {
        return $this->m_ScrollBar->getIncrementalChange();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScrollBar.getMax()]

      @return int
     */
    function getMax()
    {
        return $this->m_ScrollBar->getMax();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScrollBar.getMin()]

      @return int
     */
    function getMin()
    {
        return $this->m_ScrollBar->getMin();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScrollBar.getPageChange()]

      @return int
     */
    function getPageChange()
    {
        return $this->m_ScrollBar->getPageChange();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScrollBar.getShadow()]

      @return boolean
     */
    function getShadow()
    {
        return $this->m_ScrollBar->getShadow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScrollBar.isHorizontal()]

      @return boolean
     */
    function isHorizontal()
    {
        return $this->m_ScrollBar->isHorizontal();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScrollBar.setCurrentValue(int)]

      @param pInt0  int
     */
    function setCurrentValue($pInt0)
    {
        $this->m_ScrollBar->setCurrentValue($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScrollBar.setHorizontal(boolean)]

      @param pBoolean0  boolean
     */
    function setHorizontal($pBoolean0)
    {
        $this->m_ScrollBar->setHorizontal($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScrollBar.setIncrementalChange(int)]

      @param pInt0  int
     */
    function setIncrementalChange($pInt0)
    {
        $this->m_ScrollBar->setIncrementalChange($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScrollBar.setMax(int)]

      @param pInt0  int
     */
    function setMax($pInt0)
    {
        $this->m_ScrollBar->setMax($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScrollBar.setMin(int)]

      @param pInt0  int
     */
    function setMin($pInt0)
    {
        $this->m_ScrollBar->setMin($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScrollBar.setPageChange(int)]

      @param pInt0  int
     */
    function setPageChange($pInt0)
    {
        $this->m_ScrollBar->setPageChange($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ScrollBar.setShadow(boolean)]

      @param pBoolean0  boolean
     */
    function setShadow($pBoolean0)
    {
        $this->m_ScrollBar->setShadow($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.SelectionType]
  
 */
class SelectionType
{
    public $m_SelectionType;
    
    function __construct($selectionType)
    {
    	$this->m_SelectionType = $selectionType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Series]
  
 */
class Series
{
    public $m_Series;
    
    function __construct($series)
    {
    	$this->m_Series = $series;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Series.getArea()]

      @return com.aspose.cells.Area
     */
    function getArea()
    {
        return ClassFactory::_t2($this->m_Series->getArea());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getBar3DShapeType()]

      @return int
     */
    function getBar3DShapeType()
    {
        return $this->m_Series->getBar3DShapeType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getBarShape()]

      @return int
     */
    function getBarShape()
    {
        return $this->m_Series->getBarShape();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getBorder()]

      @return com.aspose.cells.Line
     */
    function getBorder()
    {
        return ClassFactory::_t2($this->m_Series->getBorder());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getBubbleScale()]

      @return int
     */
    function getBubbleScale()
    {
        return $this->m_Series->getBubbleScale();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getBubbleSizeRepresents()]

      @return int
     */
    function getBubbleSizeRepresents()
    {
        return $this->m_Series->getBubbleSizeRepresents();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getBubbleSizes()]

      @return String
     */
    function getBubbleSizes()
    {
        return $this->m_Series->getBubbleSizes();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getCountOfDataValues()]

      @return int
     */
    function getCountOfDataValues()
    {
        return $this->m_Series->getCountOfDataValues();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getDataLabels()]

      @return com.aspose.cells.DataLabels
     */
    function getDataLabels()
    {
        return ClassFactory::_t2($this->m_Series->getDataLabels());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getDisplayName()]

      @return String
     */
    function getDisplayName()
    {
        return $this->m_Series->getDisplayName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getDoughnutHoleSize()]

      @return int
     */
    function getDoughnutHoleSize()
    {
        return $this->m_Series->getDoughnutHoleSize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getDownBars()]

      @return com.aspose.cells.DropBars
     */
    function getDownBars()
    {
        return ClassFactory::_t2($this->m_Series->getDownBars());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getDropLines()]

      @return com.aspose.cells.Line
     */
    function getDropLines()
    {
        return ClassFactory::_t2($this->m_Series->getDropLines());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getExplosion()]

      @return int
     */
    function getExplosion()
    {
        return $this->m_Series->getExplosion();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getFirstSliceAngle()]

      @return short
     */
    function getFirstSliceAngle()
    {
        return $this->m_Series->getFirstSliceAngle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getGapWidth()]

      @return short
     */
    function getGapWidth()
    {
        return $this->m_Series->getGapWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getHas3DEffect()]

      @return boolean
     */
    function getHas3DEffect()
    {
        return $this->m_Series->getHas3DEffect();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getHiLoLines()]

      @return com.aspose.cells.Line
     */
    function getHiLoLines()
    {
        return ClassFactory::_t2($this->m_Series->getHiLoLines());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getLeaderLines()]

      @return com.aspose.cells.Line
     */
    function getLeaderLines()
    {
        return ClassFactory::_t2($this->m_Series->getLeaderLines());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getLegendEntry()]

      @return com.aspose.cells.LegendEntry
     */
    function getLegendEntry()
    {
        return ClassFactory::_t2($this->m_Series->getLegendEntry());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getLine()]

      @return com.aspose.cells.Line
     */
    function getLine()
    {
        return ClassFactory::_t2($this->m_Series->getLine());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getMarker()]

      @return com.aspose.cells.Marker
     */
    function getMarker()
    {
        return ClassFactory::_t2($this->m_Series->getMarker());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getMarkerBackgroundColor()]

      @return com.aspose.cells.Color
     */
    function getMarkerBackgroundColor()
    {
        return ClassFactory::_t2($this->m_Series->getMarkerBackgroundColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getMarkerBackgroundColorSetType()]

      @return int
     */
    function getMarkerBackgroundColorSetType()
    {
        return $this->m_Series->getMarkerBackgroundColorSetType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getMarkerForegroundColor()]

      @return com.aspose.cells.Color
     */
    function getMarkerForegroundColor()
    {
        return ClassFactory::_t2($this->m_Series->getMarkerForegroundColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getMarkerForegroundColorSetType()]

      @return int
     */
    function getMarkerForegroundColorSetType()
    {
        return $this->m_Series->getMarkerForegroundColorSetType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getMarkerSize()]

      @return int
     */
    function getMarkerSize()
    {
        return $this->m_Series->getMarkerSize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getMarkerStyle()]

      @return int
     */
    function getMarkerStyle()
    {
        return $this->m_Series->getMarkerStyle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_Series->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getOverlap()]

      @return short
     */
    function getOverlap()
    {
        return $this->m_Series->getOverlap();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getPlotOnSecondAxis()]

      @return boolean
     */
    function getPlotOnSecondAxis()
    {
        return $this->m_Series->getPlotOnSecondAxis();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getPoints()]

      @return com.aspose.cells.ChartPointCollection
     */
    function getPoints()
    {
        return ClassFactory::_t2($this->m_Series->getPoints());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getSecondPlotSize()]

      @return short
     */
    function getSecondPlotSize()
    {
        return $this->m_Series->getSecondPlotSize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getSeriesLines()]

      @return com.aspose.cells.Line
     */
    function getSeriesLines()
    {
        return ClassFactory::_t2($this->m_Series->getSeriesLines());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getShadow()]

      @return boolean
     */
    function getShadow()
    {
        return $this->m_Series->getShadow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getShapeProperties()]

      @return com.aspose.cells.ShapePropertyCollection
     */
    function getShapeProperties()
    {
        return ClassFactory::_t2($this->m_Series->getShapeProperties());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getShowNegativeBubbles()]

      @return boolean
     */
    function getShowNegativeBubbles()
    {
        return $this->m_Series->getShowNegativeBubbles();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getSizeRepresents()]

      @return int
     */
    function getSizeRepresents()
    {
        return $this->m_Series->getSizeRepresents();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getSmooth()]

      @return boolean
     */
    function getSmooth()
    {
        return $this->m_Series->getSmooth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getSplitType()]

      @return int
     */
    function getSplitType()
    {
        return $this->m_Series->getSplitType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getSplitValue()]

      @return double
     */
    function getSplitValue()
    {
        return $this->m_Series->getSplitValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getTrendLines()]

      @return com.aspose.cells.TrendlineCollection
     */
    function getTrendLines()
    {
        return ClassFactory::_t2($this->m_Series->getTrendLines());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_Series->getType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getUpBars()]

      @return com.aspose.cells.DropBars
     */
    function getUpBars()
    {
        return ClassFactory::_t2($this->m_Series->getUpBars());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getValues()]

      @return String
     */
    function getValues()
    {
        return $this->m_Series->getValues();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getXErrorBar()]

      @return com.aspose.cells.ErrorBar
     */
    function getXErrorBar()
    {
        return ClassFactory::_t2($this->m_Series->getXErrorBar());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getXValues()]

      @return String
     */
    function getXValues()
    {
        return $this->m_Series->getXValues();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.getYErrorBar()]

      @return com.aspose.cells.ErrorBar
     */
    function getYErrorBar()
    {
        return ClassFactory::_t2($this->m_Series->getYErrorBar());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.hasDropLines()]

      @return boolean
     */
    function hasDropLines()
    {
        return $this->m_Series->hasDropLines();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.hasHiLoLines()]

      @return boolean
     */
    function hasHiLoLines()
    {
        return $this->m_Series->hasHiLoLines();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.hasLeaderLines()]

      @return boolean
     */
    function hasLeaderLines()
    {
        return $this->m_Series->hasLeaderLines();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.hasRadarAxisLabels()]

      @return boolean
     */
    function hasRadarAxisLabels()
    {
        return $this->m_Series->hasRadarAxisLabels();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.hasSeriesLines()]

      @return boolean
     */
    function hasSeriesLines()
    {
        return $this->m_Series->hasSeriesLines();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.hasUpDownBars()]

      @return boolean
     */
    function hasUpDownBars()
    {
        return $this->m_Series->hasUpDownBars();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.isAutoSplit()]

      @return boolean
     */
    function isAutoSplit()
    {
        return $this->m_Series->isAutoSplit();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.isColorVaried()]

      @return boolean
     */
    function isColorVaried()
    {
        return $this->m_Series->isColorVaried();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.isVerticalValues()]

      @return boolean
     */
    function isVerticalValues()
    {
        return $this->m_Series->isVerticalValues();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.move(int)]

      @param pInt0  int
     */
    function move($pInt0)
    {
        $this->m_Series->move($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setBar3DShapeType(int)]

      @param pInt0  int
     */
    function setBar3DShapeType($pInt0)
    {
        $this->m_Series->setBar3DShapeType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setBarShape(int)]

      @param pInt0  int
     */
    function setBarShape($pInt0)
    {
        $this->m_Series->setBarShape($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setBubbleScale(int)]

      @param pInt0  int
     */
    function setBubbleScale($pInt0)
    {
        $this->m_Series->setBubbleScale($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setBubbleSizeRepresents(int)]

      @param pInt0  int
     */
    function setBubbleSizeRepresents($pInt0)
    {
        $this->m_Series->setBubbleSizeRepresents($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setBubbleSizes(java.lang.String)]

      @param oString0  String
     */
    function setBubbleSizes($oString0)
    {
        $this->m_Series->setBubbleSizes($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setColorVaried(boolean)]

      @param pBoolean0  boolean
     */
    function setColorVaried($pBoolean0)
    {
        $this->m_Series->setColorVaried($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setDoughnutHoleSize(int)]

      @param pInt0  int
     */
    function setDoughnutHoleSize($pInt0)
    {
        $this->m_Series->setDoughnutHoleSize($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setExplosion(int)]

      @param pInt0  int
     */
    function setExplosion($pInt0)
    {
        $this->m_Series->setExplosion($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setFirstSliceAngle(short)]

      @param pShort0  short
     */
    function setFirstSliceAngle($pShort0)
    {
        $this->m_Series->setFirstSliceAngle($pShort0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setGapWidth(short)]

      @param pShort0  short
     */
    function setGapWidth($pShort0)
    {
        $this->m_Series->setGapWidth($pShort0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setHas3DEffect(boolean)]

      @param pBoolean0  boolean
     */
    function setHas3DEffect($pBoolean0)
    {
        $this->m_Series->setHas3DEffect($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setHasDropLines(boolean)]

      @param pBoolean0  boolean
     */
    function setHasDropLines($pBoolean0)
    {
        $this->m_Series->setHasDropLines($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setHasHiLoLines(boolean)]

      @param pBoolean0  boolean
     */
    function setHasHiLoLines($pBoolean0)
    {
        $this->m_Series->setHasHiLoLines($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setHasLeaderLines(boolean)]

      @param pBoolean0  boolean
     */
    function setHasLeaderLines($pBoolean0)
    {
        $this->m_Series->setHasLeaderLines($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setHasRadarAxisLabels(boolean)]

      @param pBoolean0  boolean
     */
    function setHasRadarAxisLabels($pBoolean0)
    {
        $this->m_Series->setHasRadarAxisLabels($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setHasSeriesLines(boolean)]

      @param pBoolean0  boolean
     */
    function setHasSeriesLines($pBoolean0)
    {
        $this->m_Series->setHasSeriesLines($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setHasUpDownBars(boolean)]

      @param pBoolean0  boolean
     */
    function setHasUpDownBars($pBoolean0)
    {
        $this->m_Series->setHasUpDownBars($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setMarkerBackgroundColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setMarkerBackgroundColor($oColor0)
    {
        $this->m_Series->setMarkerBackgroundColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setMarkerBackgroundColorSetType(int)]

      @param pInt0  int
     */
    function setMarkerBackgroundColorSetType($pInt0)
    {
        $this->m_Series->setMarkerBackgroundColorSetType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setMarkerForegroundColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setMarkerForegroundColor($oColor0)
    {
        $this->m_Series->setMarkerForegroundColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setMarkerForegroundColorSetType(int)]

      @param pInt0  int
     */
    function setMarkerForegroundColorSetType($pInt0)
    {
        $this->m_Series->setMarkerForegroundColorSetType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setMarkerSize(int)]

      @param pInt0  int
     */
    function setMarkerSize($pInt0)
    {
        $this->m_Series->setMarkerSize($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setMarkerStyle(int)]

      @param pInt0  int
     */
    function setMarkerStyle($pInt0)
    {
        $this->m_Series->setMarkerStyle($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setName(java.lang.String)]

      @param oString0  String
     */
    function setName($oString0)
    {
        $this->m_Series->setName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setOverlap(short)]

      @param pShort0  short
     */
    function setOverlap($pShort0)
    {
        $this->m_Series->setOverlap($pShort0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setPlotOnSecondAxis(boolean)]

      @param pBoolean0  boolean
     */
    function setPlotOnSecondAxis($pBoolean0)
    {
        $this->m_Series->setPlotOnSecondAxis($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setSecondPlotSize(short)]

      @param pShort0  short
     */
    function setSecondPlotSize($pShort0)
    {
        $this->m_Series->setSecondPlotSize($pShort0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setShadow(boolean)]

      @param pBoolean0  boolean
     */
    function setShadow($pBoolean0)
    {
        $this->m_Series->setShadow($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setShowNegativeBubbles(boolean)]

      @param pBoolean0  boolean
     */
    function setShowNegativeBubbles($pBoolean0)
    {
        $this->m_Series->setShowNegativeBubbles($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setSizeRepresents(int)]

      @param pInt0  int
     */
    function setSizeRepresents($pInt0)
    {
        $this->m_Series->setSizeRepresents($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setSmooth(boolean)]

      @param pBoolean0  boolean
     */
    function setSmooth($pBoolean0)
    {
        $this->m_Series->setSmooth($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setSplitType(int)]

      @param pInt0  int
     */
    function setSplitType($pInt0)
    {
        $this->m_Series->setSplitType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setSplitValue(double)]

      @param pDouble0  double
     */
    function setSplitValue($pDouble0)
    {
        $this->m_Series->setSplitValue($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setType(int)]

      @param pInt0  int
     */
    function setType($pInt0)
    {
        $this->m_Series->setType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setValues(java.lang.String)]

      @param oString0  String
     */
    function setValues($oString0)
    {
        $this->m_Series->setValues($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Series.setXValues(java.lang.String)]

      @param oString0  String
     */
    function setXValues($oString0)
    {
        $this->m_Series->setXValues($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.SeriesCollection]
  
 */
class SeriesCollection extends CollectionBase
{
    public $m_SeriesCollection;
    
    function __construct($seriesCollection)
    {
    	$this->m_SeriesCollection = $seriesCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.SeriesCollection.add(java.lang.String, boolean)]

      @param oString0  String
      @param pBoolean1  boolean
      @return int
     */
    function add($oString0, $pBoolean1)
    {
        return $this->m_SeriesCollection->add($oString0, $pBoolean1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SeriesCollection.addR1C1(java.lang.String, boolean)]

      @param oString0  String
      @param pBoolean1  boolean
      @return int
     */
    function addR1C1($oString0, $pBoolean1)
    {
        return $this->m_SeriesCollection->addR1C1($oString0, $pBoolean1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SeriesCollection.changeSeriesOrder(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function changeSeriesOrder($pInt0, $pInt1)
    {
        $this->m_SeriesCollection->changeSeriesOrder($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SeriesCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.Series
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_SeriesCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.SeriesCollection.getCategoryData()]

      @return String
     */
    function getCategoryData()
    {
        return $this->m_SeriesCollection->getCategoryData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SeriesCollection.getSecondCategoryData()]

      @return String
     */
    function getSecondCategoryData()
    {
        return $this->m_SeriesCollection->getSecondCategoryData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SeriesCollection.getSecondCatergoryData()]

      @return String
     */
    function getSecondCatergoryData()
    {
        return $this->m_SeriesCollection->getSecondCatergoryData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SeriesCollection.isColorVaried()]

      @return boolean
     */
    function isColorVaried()
    {
        return $this->m_SeriesCollection->isColorVaried();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SeriesCollection.removeAt(int)]

      @param pInt0  int
     */
    function removeAt($pInt0)
    {
        $this->m_SeriesCollection->removeAt($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SeriesCollection.setCategoryData(java.lang.String)]

      @param oString0  String
     */
    function setCategoryData($oString0)
    {
        $this->m_SeriesCollection->setCategoryData($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SeriesCollection.setColorVaried(boolean)]

      @param pBoolean0  boolean
     */
    function setColorVaried($pBoolean0)
    {
        $this->m_SeriesCollection->setColorVaried($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SeriesCollection.setSecondCategoryData(java.lang.String)]

      @param oString0  String
     */
    function setSecondCategoryData($oString0)
    {
        $this->m_SeriesCollection->setSecondCategoryData($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SeriesCollection.setSecondCatergoryData(java.lang.String)]

      @param oString0  String
     */
    function setSecondCatergoryData($oString0)
    {
        $this->m_SeriesCollection->setSecondCatergoryData($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ShadowEffect]
  
 */
class ShadowEffect
{
    public $m_ShadowEffect;
    
    function __construct($shadowEffect)
    {
    	$this->m_ShadowEffect = $shadowEffect;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ShadowEffect.getAngle()]

      @return double
     */
    function getAngle()
    {
        return $this->m_ShadowEffect->getAngle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShadowEffect.getBlur()]

      @return double
     */
    function getBlur()
    {
        return $this->m_ShadowEffect->getBlur();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShadowEffect.getColor()]

      @return com.aspose.cells.CellsColor
     */
    function getColor()
    {
        return ClassFactory::_t2($this->m_ShadowEffect->getColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShadowEffect.getDistance()]

      @return double
     */
    function getDistance()
    {
        return $this->m_ShadowEffect->getDistance();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShadowEffect.getPresetType()]

      @return int
     */
    function getPresetType()
    {
        return $this->m_ShadowEffect->getPresetType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShadowEffect.getSize()]

      @return double
     */
    function getSize()
    {
        return $this->m_ShadowEffect->getSize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShadowEffect.getTransparency()]

      @return double
     */
    function getTransparency()
    {
        return $this->m_ShadowEffect->getTransparency();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShadowEffect.setAngle(double)]

      @param pDouble0  double
     */
    function setAngle($pDouble0)
    {
        $this->m_ShadowEffect->setAngle($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShadowEffect.setBlur(double)]

      @param pDouble0  double
     */
    function setBlur($pDouble0)
    {
        $this->m_ShadowEffect->setBlur($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShadowEffect.setColor(com.aspose.cells.CellsColor)]

      @param oCellsColor0  com.aspose.cells.CellsColor
     */
    function setColor($oCellsColor0)
    {
        $this->m_ShadowEffect->setColor(ClassFactory::_t1($oCellsColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShadowEffect.setDistance(double)]

      @param pDouble0  double
     */
    function setDistance($pDouble0)
    {
        $this->m_ShadowEffect->setDistance($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShadowEffect.setPresetType(int)]

      @param pInt0  int
     */
    function setPresetType($pInt0)
    {
        $this->m_ShadowEffect->setPresetType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShadowEffect.setSize(double)]

      @param pDouble0  double
     */
    function setSize($pDouble0)
    {
        $this->m_ShadowEffect->setSize($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShadowEffect.setTransparency(double)]

      @param pDouble0  double
     */
    function setTransparency($pDouble0)
    {
        $this->m_ShadowEffect->setTransparency($pDouble0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.Shape]
  
 */
class Shape
{
    public $m_Shape;
    
    function __construct($shape)
    {
    	$this->m_Shape = $shape;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Shape.addHyperlink(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.Hyperlink
     */
    function addHyperlink($oString0)
    {
        return ClassFactory::_t2($this->m_Shape->addHyperlink($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.alignTopRightCorner(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function alignTopRightCorner($pInt0, $pInt1)
    {
        $this->m_Shape->alignTopRightCorner($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.calculateTextSize()]

      @return int[]
     */
    function calculateTextSize()
    {
        return $this->m_Shape->calculateTextSize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.characters(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return com.aspose.cells.FontSetting
     */
    function characters($pInt0, $pInt1)
    {
        return ClassFactory::_t2($this->m_Shape->characters($pInt0, $pInt1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.formatCharacters(int, int, com.aspose.cells.Font)]

      @param pInt0  int
      @param pInt1  int
      @param oFont2  com.aspose.cells.Font
     */
    function formatCharacters($pInt0, $pInt1, $oFont2)
    {
        $this->m_Shape->formatCharacters($pInt0, $pInt1, ClassFactory::_t1($oFont2));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getActualLowerRightRow()]

      @return int
     */
    function getActualLowerRightRow()
    {
        return $this->m_Shape->getActualLowerRightRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getAlternativeText()]

      @return String
     */
    function getAlternativeText()
    {
        return $this->m_Shape->getAlternativeText();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getAutoShapeType()]

      @return int
     */
    function getAutoShapeType()
    {
        return $this->m_Shape->getAutoShapeType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getBottom()]

      @return int
     */
    function getBottom()
    {
        return $this->m_Shape->getBottom();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getCharacters()]

      @return array, corresponding java type is {java.util.ArrayList}
     */
    function getCharacters()
    {
        return ClassFactory::_t2($this->m_Shape->getCharacters());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getControlData()]

      @return byte[]
     */
    function getControlData()
    {
        return $this->m_Shape->getControlData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getFill()]

      @return com.aspose.cells.FillFormat
     */
    function getFill()
    {
        return ClassFactory::_t2($this->m_Shape->getFill());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getFillFormat()]

      @return com.aspose.cells.MsoFillFormat
     */
    function getFillFormat()
    {
        return ClassFactory::_t2($this->m_Shape->getFillFormat());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getFont()]

      @return com.aspose.cells.Font
     */
    function getFont()
    {
        return ClassFactory::_t2($this->m_Shape->getFont());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getFormatPicture()]

      @return com.aspose.cells.MsoFormatPicture
     */
    function getFormatPicture()
    {
        return ClassFactory::_t2($this->m_Shape->getFormatPicture());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getGroup()]

      @return com.aspose.cells.GroupShape
     */
    function getGroup()
    {
        return ClassFactory::_t2($this->m_Shape->getGroup());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getHeight()]

      @return int
     */
    function getHeight()
    {
        return $this->m_Shape->getHeight();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getHeightCM()]

      @return double
     */
    function getHeightCM()
    {
        return $this->m_Shape->getHeightCM();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getHeightInChart()]

      @return int
     */
    function getHeightInChart()
    {
        return $this->m_Shape->getHeightInChart();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getHeightInShape()]

      @return int
     */
    function getHeightInShape()
    {
        return $this->m_Shape->getHeightInShape();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getHeightInch()]

      @return double
     */
    function getHeightInch()
    {
        return $this->m_Shape->getHeightInch();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getHeightPt()]

      @return double
     */
    function getHeightPt()
    {
        return $this->m_Shape->getHeightPt();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getHeightScale()]

      @return int
     */
    function getHeightScale()
    {
        return $this->m_Shape->getHeightScale();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getHtmlText()]

      @return String
     */
    function getHtmlText()
    {
        return $this->m_Shape->getHtmlText();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getHyperlink()]

      @return com.aspose.cells.Hyperlink
     */
    function getHyperlink()
    {
        return ClassFactory::_t2($this->m_Shape->getHyperlink());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getInputRange()]

      @return String
     */
    function getInputRange()
    {
        return $this->m_Shape->getInputRange();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getLeft()]

      @return int
     */
    function getLeft()
    {
        return $this->m_Shape->getLeft();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getLeftCM()]

      @return double
     */
    function getLeftCM()
    {
        return $this->m_Shape->getLeftCM();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getLeftInChart()]

      @return int
     */
    function getLeftInChart()
    {
        return $this->m_Shape->getLeftInChart();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getLeftInShape()]

      @return int
     */
    function getLeftInShape()
    {
        return $this->m_Shape->getLeftInShape();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getLeftInch()]

      @return double
     */
    function getLeftInch()
    {
        return $this->m_Shape->getLeftInch();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getLineFormat()]

      @return com.aspose.cells.MsoLineFormat
     */
    function getLineFormat()
    {
        return ClassFactory::_t2($this->m_Shape->getLineFormat());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getLinkedCell()]

      @return String
     */
    function getLinkedCell()
    {
        return $this->m_Shape->getLinkedCell();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getLockedProperty(int)]

      @param pInt0  int
      @return boolean
     */
    function getLockedProperty($pInt0)
    {
        return $this->m_Shape->getLockedProperty($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getLowerDeltaX()]

      @return int
     */
    function getLowerDeltaX()
    {
        return $this->m_Shape->getLowerDeltaX();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getLowerDeltaY()]

      @return int
     */
    function getLowerDeltaY()
    {
        return $this->m_Shape->getLowerDeltaY();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getLowerRightColumn()]

      @return int
     */
    function getLowerRightColumn()
    {
        return $this->m_Shape->getLowerRightColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getLowerRightRow()]

      @return int
     */
    function getLowerRightRow()
    {
        return $this->m_Shape->getLowerRightRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getMsoDrawingType()]

      @return int
     */
    function getMsoDrawingType()
    {
        return $this->m_Shape->getMsoDrawingType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_Shape->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getPaths()]

      @return com.aspose.cells.ShapePathCollection
     */
    function getPaths()
    {
        return ClassFactory::_t2($this->m_Shape->getPaths());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getPlacement()]

      @return int
     */
    function getPlacement()
    {
        return $this->m_Shape->getPlacement();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getPositionX()]

      @return int
     */
    function getPositionX()
    {
        return $this->m_Shape->getPositionX();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getPositionY()]

      @return int
     */
    function getPositionY()
    {
        return $this->m_Shape->getPositionY();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getRelativeToOriginalPictureSize()]

      @return boolean
     */
    function getRelativeToOriginalPictureSize()
    {
        return $this->m_Shape->getRelativeToOriginalPictureSize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getRight()]

      @return int
     */
    function getRight()
    {
        return $this->m_Shape->getRight();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getRotation()]

      @return int
     */
    function getRotation()
    {
        return $this->m_Shape->getRotation();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getRotationAngle()]

      @return double
     */
    function getRotationAngle()
    {
        return $this->m_Shape->getRotationAngle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getText()]

      @return String
     */
    function getText()
    {
        return $this->m_Shape->getText();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getTextDirection()]

      @return int
     */
    function getTextDirection()
    {
        return $this->m_Shape->getTextDirection();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getTextEffect()]

      @return com.aspose.cells.TextEffectFormat
     */
    function getTextEffect()
    {
        return ClassFactory::_t2($this->m_Shape->getTextEffect());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getTextFrame()]

      @return com.aspose.cells.MsoTextFrame
     */
    function getTextFrame()
    {
        return ClassFactory::_t2($this->m_Shape->getTextFrame());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getTextHorizontalAlignment()]

      @return int
     */
    function getTextHorizontalAlignment()
    {
        return $this->m_Shape->getTextHorizontalAlignment();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getTextHorizontalOverflow()]

      @return int
     */
    function getTextHorizontalOverflow()
    {
        return $this->m_Shape->getTextHorizontalOverflow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getTextOrientationType()]

      @return int
     */
    function getTextOrientationType()
    {
        return $this->m_Shape->getTextOrientationType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getTextVerticalAlignment()]

      @return int
     */
    function getTextVerticalAlignment()
    {
        return $this->m_Shape->getTextVerticalAlignment();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getTextVerticalOverflow()]

      @return int
     */
    function getTextVerticalOverflow()
    {
        return $this->m_Shape->getTextVerticalOverflow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getTitle()]

      @return String
     */
    function getTitle()
    {
        return $this->m_Shape->getTitle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getTop()]

      @return int
     */
    function getTop()
    {
        return $this->m_Shape->getTop();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getTopCM()]

      @return double
     */
    function getTopCM()
    {
        return $this->m_Shape->getTopCM();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getTopInChart()]

      @return int
     */
    function getTopInChart()
    {
        return $this->m_Shape->getTopInChart();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getTopInShape()]

      @return int
     */
    function getTopInShape()
    {
        return $this->m_Shape->getTopInShape();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getTopInch()]

      @return double
     */
    function getTopInch()
    {
        return $this->m_Shape->getTopInch();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_Shape->getType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getUpperDeltaX()]

      @return int
     */
    function getUpperDeltaX()
    {
        return $this->m_Shape->getUpperDeltaX();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getUpperDeltaY()]

      @return int
     */
    function getUpperDeltaY()
    {
        return $this->m_Shape->getUpperDeltaY();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getUpperLeftColumn()]

      @return int
     */
    function getUpperLeftColumn()
    {
        return $this->m_Shape->getUpperLeftColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getUpperLeftRow()]

      @return int
     */
    function getUpperLeftRow()
    {
        return $this->m_Shape->getUpperLeftRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getWidth()]

      @return int
     */
    function getWidth()
    {
        return $this->m_Shape->getWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getWidthCM()]

      @return double
     */
    function getWidthCM()
    {
        return $this->m_Shape->getWidthCM();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getWidthInChart()]

      @return int
     */
    function getWidthInChart()
    {
        return $this->m_Shape->getWidthInChart();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getWidthInShape()]

      @return int
     */
    function getWidthInShape()
    {
        return $this->m_Shape->getWidthInShape();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getWidthInch()]

      @return double
     */
    function getWidthInch()
    {
        return $this->m_Shape->getWidthInch();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getWidthPt()]

      @return double
     */
    function getWidthPt()
    {
        return $this->m_Shape->getWidthPt();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getWidthScale()]

      @return int
     */
    function getWidthScale()
    {
        return $this->m_Shape->getWidthScale();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getX()]

      @return int
     */
    function getX()
    {
        return $this->m_Shape->getX();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getY()]

      @return int
     */
    function getY()
    {
        return $this->m_Shape->getY();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.getZOrderPosition()]

      @return int
     */
    function getZOrderPosition()
    {
        return $this->m_Shape->getZOrderPosition();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.hasLine()]

      @return boolean
     */
    function hasLine()
    {
        return $this->m_Shape->hasLine();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.isFilled()]

      @return boolean
     */
    function isFilled()
    {
        return $this->m_Shape->isFilled();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.isFlippedHorizontally()]

      @return boolean
     */
    function isFlippedHorizontally()
    {
        return $this->m_Shape->isFlippedHorizontally();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.isFlippedVertically()]

      @return boolean
     */
    function isFlippedVertically()
    {
        return $this->m_Shape->isFlippedVertically();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.isGroup()]

      @return boolean
     */
    function isGroup()
    {
        return $this->m_Shape->isGroup();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.isHidden()]

      @return boolean
     */
    function isHidden()
    {
        return $this->m_Shape->isHidden();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.isLockAspectRatio()]

      @return boolean
     */
    function isLockAspectRatio()
    {
        return $this->m_Shape->isLockAspectRatio();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.isLocked()]

      @return boolean
     */
    function isLocked()
    {
        return $this->m_Shape->isLocked();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.isPrintable()]

      @return boolean
     */
    function isPrintable()
    {
        return $this->m_Shape->isPrintable();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.isPrinted()]

      @return boolean
     */
    function isPrinted()
    {
        return $this->m_Shape->isPrinted();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.isRichText()]

      @return boolean
     */
    function isRichText()
    {
        return $this->m_Shape->isRichText();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.isTextWrapped()]

      @return boolean
     */
    function isTextWrapped()
    {
        return $this->m_Shape->isTextWrapped();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.isWordArt()]

      @return boolean
     */
    function isWordArt()
    {
        return $this->m_Shape->isWordArt();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.moveToRange(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
     */
    function moveToRange($pInt0, $pInt1, $pInt2, $pInt3)
    {
        $this->m_Shape->moveToRange($pInt0, $pInt1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.removeHyperlink()]

     */
    function removeHyperlink()
    {
        $this->m_Shape->removeHyperlink();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setAlternativeText(java.lang.String)]

      @param oString0  String
     */
    function setAlternativeText($oString0)
    {
        $this->m_Shape->setAlternativeText($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setAutoShapeType(int)]

      @param pInt0  int
     */
    function setAutoShapeType($pInt0)
    {
        $this->m_Shape->setAutoShapeType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setBottom(int)]

      @param pInt0  int
     */
    function setBottom($pInt0)
    {
        $this->m_Shape->setBottom($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setFilled(boolean)]

      @param pBoolean0  boolean
     */
    function setFilled($pBoolean0)
    {
        $this->m_Shape->setFilled($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setFlippedHorizontally(boolean)]

      @param pBoolean0  boolean
     */
    function setFlippedHorizontally($pBoolean0)
    {
        $this->m_Shape->setFlippedHorizontally($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setFlippedVertically(boolean)]

      @param pBoolean0  boolean
     */
    function setFlippedVertically($pBoolean0)
    {
        $this->m_Shape->setFlippedVertically($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setFont(com.aspose.cells.Font)]

      @param oFont0  com.aspose.cells.Font
     */
    function setFont($oFont0)
    {
        $this->m_Shape->setFont(ClassFactory::_t1($oFont0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setHasLine(boolean)]

      @param pBoolean0  boolean
     */
    function setHasLine($pBoolean0)
    {
        $this->m_Shape->setHasLine($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setHeight(int)]

      @param pInt0  int
     */
    function setHeight($pInt0)
    {
        $this->m_Shape->setHeight($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setHeightCM(double)]

      @param pDouble0  double
     */
    function setHeightCM($pDouble0)
    {
        $this->m_Shape->setHeightCM($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setHeightInChart(int)]

      @param pInt0  int
     */
    function setHeightInChart($pInt0)
    {
        $this->m_Shape->setHeightInChart($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setHeightInShape(int)]

      @param pInt0  int
     */
    function setHeightInShape($pInt0)
    {
        $this->m_Shape->setHeightInShape($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setHeightInch(double)]

      @param pDouble0  double
     */
    function setHeightInch($pDouble0)
    {
        $this->m_Shape->setHeightInch($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setHeightPt(double)]

      @param pDouble0  double
     */
    function setHeightPt($pDouble0)
    {
        $this->m_Shape->setHeightPt($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setHeightScale(int)]

      @param pInt0  int
     */
    function setHeightScale($pInt0)
    {
        $this->m_Shape->setHeightScale($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setHidden(boolean)]

      @param pBoolean0  boolean
     */
    function setHidden($pBoolean0)
    {
        $this->m_Shape->setHidden($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setHtmlText(java.lang.String)]

      @param oString0  String
     */
    function setHtmlText($oString0)
    {
        $this->m_Shape->setHtmlText($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setInputRange(java.lang.String)]

      @param oString0  String
     */
    function setInputRange($oString0)
    {
        $this->m_Shape->setInputRange($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setLeft(int)]

      @param pInt0  int
     */
    function setLeft($pInt0)
    {
        $this->m_Shape->setLeft($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setLeftCM(double)]

      @param pDouble0  double
     */
    function setLeftCM($pDouble0)
    {
        $this->m_Shape->setLeftCM($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setLeftInChart(int)]

      @param pInt0  int
     */
    function setLeftInChart($pInt0)
    {
        $this->m_Shape->setLeftInChart($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setLeftInShape(int)]

      @param pInt0  int
     */
    function setLeftInShape($pInt0)
    {
        $this->m_Shape->setLeftInShape($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setLeftInch(double)]

      @param pDouble0  double
     */
    function setLeftInch($pDouble0)
    {
        $this->m_Shape->setLeftInch($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setLinkedCell(java.lang.String)]

      @param oString0  String
     */
    function setLinkedCell($oString0)
    {
        $this->m_Shape->setLinkedCell($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setLockAspectRatio(boolean)]

      @param pBoolean0  boolean
     */
    function setLockAspectRatio($pBoolean0)
    {
        $this->m_Shape->setLockAspectRatio($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setLocked(boolean)]

      @param pBoolean0  boolean
     */
    function setLocked($pBoolean0)
    {
        $this->m_Shape->setLocked($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setLockedProperty(int, boolean)]

      @param pInt0  int
      @param pBoolean1  boolean
     */
    function setLockedProperty($pInt0, $pBoolean1)
    {
        $this->m_Shape->setLockedProperty($pInt0, $pBoolean1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setLowerDeltaX(int)]

      @param pInt0  int
     */
    function setLowerDeltaX($pInt0)
    {
        $this->m_Shape->setLowerDeltaX($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setLowerDeltaY(int)]

      @param pInt0  int
     */
    function setLowerDeltaY($pInt0)
    {
        $this->m_Shape->setLowerDeltaY($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setLowerRightColumn(int)]

      @param pInt0  int
     */
    function setLowerRightColumn($pInt0)
    {
        $this->m_Shape->setLowerRightColumn($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setLowerRightRow(int)]

      @param pInt0  int
     */
    function setLowerRightRow($pInt0)
    {
        $this->m_Shape->setLowerRightRow($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setName(java.lang.String)]

      @param oString0  String
     */
    function setName($oString0)
    {
        $this->m_Shape->setName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setPlacement(int)]

      @param pInt0  int
     */
    function setPlacement($pInt0)
    {
        $this->m_Shape->setPlacement($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setPositionX(int)]

      @param pInt0  int
     */
    function setPositionX($pInt0)
    {
        $this->m_Shape->setPositionX($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setPositionY(int)]

      @param pInt0  int
     */
    function setPositionY($pInt0)
    {
        $this->m_Shape->setPositionY($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setPrintable(boolean)]

      @param pBoolean0  boolean
     */
    function setPrintable($pBoolean0)
    {
        $this->m_Shape->setPrintable($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setPrinted(boolean)]

      @param pBoolean0  boolean
     */
    function setPrinted($pBoolean0)
    {
        $this->m_Shape->setPrinted($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setRelativeToOriginalPictureSize(boolean)]

      @param pBoolean0  boolean
     */
    function setRelativeToOriginalPictureSize($pBoolean0)
    {
        $this->m_Shape->setRelativeToOriginalPictureSize($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setRight(int)]

      @param pInt0  int
     */
    function setRight($pInt0)
    {
        $this->m_Shape->setRight($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setRotation(int)]

      @param pInt0  int
     */
    function setRotation($pInt0)
    {
        $this->m_Shape->setRotation($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setRotationAngle(double)]

      @param pDouble0  double
     */
    function setRotationAngle($pDouble0)
    {
        $this->m_Shape->setRotationAngle($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setText(java.lang.String)]

      @param oString0  String
     */
    function setText($oString0)
    {
        $this->m_Shape->setText($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setTextDirection(int)]

      @param pInt0  int
     */
    function setTextDirection($pInt0)
    {
        $this->m_Shape->setTextDirection($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setTextHorizontalAlignment(int)]

      @param pInt0  int
     */
    function setTextHorizontalAlignment($pInt0)
    {
        $this->m_Shape->setTextHorizontalAlignment($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setTextHorizontalOverflow(int)]

      @param pInt0  int
     */
    function setTextHorizontalOverflow($pInt0)
    {
        $this->m_Shape->setTextHorizontalOverflow($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setTextOrientationType(int)]

      @param pInt0  int
     */
    function setTextOrientationType($pInt0)
    {
        $this->m_Shape->setTextOrientationType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setTextVerticalAlignment(int)]

      @param pInt0  int
     */
    function setTextVerticalAlignment($pInt0)
    {
        $this->m_Shape->setTextVerticalAlignment($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setTextVerticalOverflow(int)]

      @param pInt0  int
     */
    function setTextVerticalOverflow($pInt0)
    {
        $this->m_Shape->setTextVerticalOverflow($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setTextWrapped(boolean)]

      @param pBoolean0  boolean
     */
    function setTextWrapped($pBoolean0)
    {
        $this->m_Shape->setTextWrapped($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setTitle(java.lang.String)]

      @param oString0  String
     */
    function setTitle($oString0)
    {
        $this->m_Shape->setTitle($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setTop(int)]

      @param pInt0  int
     */
    function setTop($pInt0)
    {
        $this->m_Shape->setTop($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setTopCM(double)]

      @param pDouble0  double
     */
    function setTopCM($pDouble0)
    {
        $this->m_Shape->setTopCM($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setTopInChart(int)]

      @param pInt0  int
     */
    function setTopInChart($pInt0)
    {
        $this->m_Shape->setTopInChart($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setTopInShape(int)]

      @param pInt0  int
     */
    function setTopInShape($pInt0)
    {
        $this->m_Shape->setTopInShape($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setTopInch(double)]

      @param pDouble0  double
     */
    function setTopInch($pDouble0)
    {
        $this->m_Shape->setTopInch($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setUpperDeltaX(int)]

      @param pInt0  int
     */
    function setUpperDeltaX($pInt0)
    {
        $this->m_Shape->setUpperDeltaX($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setUpperDeltaY(int)]

      @param pInt0  int
     */
    function setUpperDeltaY($pInt0)
    {
        $this->m_Shape->setUpperDeltaY($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setUpperLeftColumn(int)]

      @param pInt0  int
     */
    function setUpperLeftColumn($pInt0)
    {
        $this->m_Shape->setUpperLeftColumn($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setUpperLeftRow(int)]

      @param pInt0  int
     */
    function setUpperLeftRow($pInt0)
    {
        $this->m_Shape->setUpperLeftRow($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setWidth(int)]

      @param pInt0  int
     */
    function setWidth($pInt0)
    {
        $this->m_Shape->setWidth($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setWidthCM(double)]

      @param pDouble0  double
     */
    function setWidthCM($pDouble0)
    {
        $this->m_Shape->setWidthCM($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setWidthInChart(int)]

      @param pInt0  int
     */
    function setWidthInChart($pInt0)
    {
        $this->m_Shape->setWidthInChart($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setWidthInShape(int)]

      @param pInt0  int
     */
    function setWidthInShape($pInt0)
    {
        $this->m_Shape->setWidthInShape($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setWidthInch(double)]

      @param pDouble0  double
     */
    function setWidthInch($pDouble0)
    {
        $this->m_Shape->setWidthInch($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setWidthPt(double)]

      @param pDouble0  double
     */
    function setWidthPt($pDouble0)
    {
        $this->m_Shape->setWidthPt($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setWidthScale(int)]

      @param pInt0  int
     */
    function setWidthScale($pInt0)
    {
        $this->m_Shape->setWidthScale($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setX(int)]

      @param pInt0  int
     */
    function setX($pInt0)
    {
        $this->m_Shape->setX($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setY(int)]

      @param pInt0  int
     */
    function setY($pInt0)
    {
        $this->m_Shape->setY($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.setZOrderPosition(int)]

      @param pInt0  int
     */
    function setZOrderPosition($pInt0)
    {
        $this->m_Shape->setZOrderPosition($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.toImage(java.io.OutputStream, com.aspose.cells.ImageFormat)]

      @param oOutputStream0  corresponding java type is {java.io.OutputStream}
      @param oImageFormat1  com.aspose.cells.ImageFormat
     */
    function toImageOI($oOutputStream0, $oImageFormat1)
    {
        $this->m_Shape->toImage(ClassFactory::_t1($oOutputStream0), ClassFactory::_t1($oImageFormat1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.toImage(java.io.OutputStream, com.aspose.cells.ImageOrPrintOptions)]

      @param oOutputStream0  corresponding java type is {java.io.OutputStream}
      @param oImageOrPrintOptions1  com.aspose.cells.ImageOrPrintOptions
     */
    function toImageOI1($oOutputStream0, $oImageOrPrintOptions1)
    {
        $this->m_Shape->toImage(ClassFactory::_t1($oOutputStream0), ClassFactory::_t1($oImageOrPrintOptions1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.toImage(java.lang.String, com.aspose.cells.ImageOrPrintOptions)]

      @param oString0  String
      @param oImageOrPrintOptions1  com.aspose.cells.ImageOrPrintOptions
     */
    function toImageSI($oString0, $oImageOrPrintOptions1)
    {
        $this->m_Shape->toImage($oString0, ClassFactory::_t1($oImageOrPrintOptions1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Shape.updateSelectedValue()]

     */
    function updateSelectedValue()
    {
        $this->m_Shape->updateSelectedValue();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ShapeCollection]
  
 */
class ShapeCollection extends CollectionBase
{
    public $m_ShapeCollection;
    
    function __construct($shapeCollection)
    {
    	$this->m_ShapeCollection = $shapeCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.addAutoShape(int, int, int, int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pInt4  int
      @param pInt5  int
      @param pInt6  int
      @return com.aspose.cells.Shape
     */
    function addAutoShape($pInt0, $pInt1, $pInt2, $pInt3, $pInt4, $pInt5, $pInt6)
    {
        return ClassFactory::_t2($this->m_ShapeCollection->addAutoShape($pInt0, $pInt1, $pInt2, $pInt3, $pInt4, $pInt5, $pInt6));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.addAutoShapeInChart(int, int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pInt4  int
      @return com.aspose.cells.Shape
     */
    function addAutoShapeInChart($pInt0, $pInt1, $pInt2, $pInt3, $pInt4)
    {
        return ClassFactory::_t2($this->m_ShapeCollection->addAutoShapeInChart($pInt0, $pInt1, $pInt2, $pInt3, $pInt4));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.addCopy(com.aspose.cells.Shape, int, int, int, int)]

      @param oShape0  com.aspose.cells.Shape
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pInt4  int
      @return com.aspose.cells.Shape
     */
    function addCopy($oShape0, $pInt1, $pInt2, $pInt3, $pInt4)
    {
        return ClassFactory::_t2($this->m_ShapeCollection->addCopy(ClassFactory::_t1($oShape0), $pInt1, $pInt2, $pInt3, $pInt4));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.addFreeFloatingShape(int, int, int, int, int, byte[], boolean)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pInt4  int
      @param arrP1DByte5  byte[]
      @param pBoolean6  boolean
      @return com.aspose.cells.Shape
     */
    function addFreeFloatingShape($pInt0, $pInt1, $pInt2, $pInt3, $pInt4, $arrP1DByte5, $pBoolean6)
    {
        return ClassFactory::_t2($this->m_ShapeCollection->addFreeFloatingShape($pInt0, $pInt1, $pInt2, $pInt3, $pInt4, $arrP1DByte5, $pBoolean6));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.addLabelInChart(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @return com.aspose.cells.Label
     */
    function addLabelInChart($pInt0, $pInt1, $pInt2, $pInt3)
    {
        return ClassFactory::_t2($this->m_ShapeCollection->addLabelInChart($pInt0, $pInt1, $pInt2, $pInt3));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.addLinkedPicture(int, int, int, int, java.lang.String)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param oString4  String
      @return com.aspose.cells.Picture
     */
    function addLinkedPicture($pInt0, $pInt1, $pInt2, $pInt3, $oString4)
    {
        return ClassFactory::_t2($this->m_ShapeCollection->addLinkedPicture($pInt0, $pInt1, $pInt2, $pInt3, $oString4));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.addOleObject(int, int, int, int, int, int, byte[])]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pInt4  int
      @param pInt5  int
      @param arrP1DByte6  byte[]
      @return com.aspose.cells.OleObject
     */
    function addOleObject($pInt0, $pInt1, $pInt2, $pInt3, $pInt4, $pInt5, $arrP1DByte6)
    {
        return ClassFactory::_t2($this->m_ShapeCollection->addOleObject($pInt0, $pInt1, $pInt2, $pInt3, $pInt4, $pInt5, $arrP1DByte6));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.addOleObjectWithLinkedImage(int, int, int, int, java.lang.String)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param oString4  String
      @return com.aspose.cells.OleObject
     */
    function addOleObjectWithLinkedImage($pInt0, $pInt1, $pInt2, $pInt3, $oString4)
    {
        return ClassFactory::_t2($this->m_ShapeCollection->addOleObjectWithLinkedImage($pInt0, $pInt1, $pInt2, $pInt3, $oString4));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.addPicture(int, int, int, int, java.io.InputStream)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param oInputStream4  corresponding java type is {java.io.InputStream}
      @return com.aspose.cells.Picture
     */
    function addPictureIIIII($pInt0, $pInt1, $pInt2, $pInt3, $oInputStream4)
    {
        return ClassFactory::_t2($this->m_ShapeCollection->addPicture($pInt0, $pInt1, $pInt2, $pInt3, ClassFactory::_t1($oInputStream4)));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.addPicture(int, int, java.io.InputStream, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param oInputStream2  corresponding java type is {java.io.InputStream}
      @param pInt3  int
      @param pInt4  int
      @return com.aspose.cells.Picture
     */
    function addPictureIIIII1($pInt0, $pInt1, $oInputStream2, $pInt3, $pInt4)
    {
        return ClassFactory::_t2($this->m_ShapeCollection->addPicture($pInt0, $pInt1, ClassFactory::_t1($oInputStream2), $pInt3, $pInt4));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.addPictureInChart(int, int, java.io.InputStream, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param oInputStream2  corresponding java type is {java.io.InputStream}
      @param pInt3  int
      @param pInt4  int
      @return com.aspose.cells.Picture
     */
    function addPictureInChart($pInt0, $pInt1, $oInputStream2, $pInt3, $pInt4)
    {
        return ClassFactory::_t2($this->m_ShapeCollection->addPictureInChart($pInt0, $pInt1, ClassFactory::_t1($oInputStream2), $pInt3, $pInt4));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.addShape(int, int, int, int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pInt4  int
      @param pInt5  int
      @param pInt6  int
      @return com.aspose.cells.Shape
     */
    function addShape($pInt0, $pInt1, $pInt2, $pInt3, $pInt4, $pInt5, $pInt6)
    {
        return ClassFactory::_t2($this->m_ShapeCollection->addShape($pInt0, $pInt1, $pInt2, $pInt3, $pInt4, $pInt5, $pInt6));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.addShapeInChart(int, int, int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pInt4  int
      @param pInt5  int
      @return com.aspose.cells.Shape
     */
    function addShapeInChartIIIIII($pInt0, $pInt1, $pInt2, $pInt3, $pInt4, $pInt5)
    {
        return ClassFactory::_t2($this->m_ShapeCollection->addShapeInChart($pInt0, $pInt1, $pInt2, $pInt3, $pInt4, $pInt5));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.addShapeInChart(int, int, int, int, int, int, byte[])]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pInt4  int
      @param pInt5  int
      @param arrP1DByte6  byte[]
      @return com.aspose.cells.Shape
     */
    function addShapeInChartIIIIIIB($pInt0, $pInt1, $pInt2, $pInt3, $pInt4, $pInt5, $arrP1DByte6)
    {
        return ClassFactory::_t2($this->m_ShapeCollection->addShapeInChart($pInt0, $pInt1, $pInt2, $pInt3, $pInt4, $pInt5, $arrP1DByte6));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.addTextBoxInChart(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @return com.aspose.cells.TextBox
     */
    function addTextBoxInChart($pInt0, $pInt1, $pInt2, $pInt3)
    {
        return ClassFactory::_t2($this->m_ShapeCollection->addTextBoxInChart($pInt0, $pInt1, $pInt2, $pInt3));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.addTextEffect(int, java.lang.String, java.lang.String, int, boolean, boolean, int, int, int, int, int, int)]

      @param pInt0  int
      @param oString1  String
      @param oString2  String
      @param pInt3  int
      @param pBoolean4  boolean
      @param pBoolean5  boolean
      @param pInt6  int
      @param pInt7  int
      @param pInt8  int
      @param pInt9  int
      @param pInt10  int
      @param pInt11  int
      @return com.aspose.cells.Shape
     */
    function addTextEffect($pInt0, $oString1, $oString2, $pInt3, $pBoolean4, $pBoolean5, $pInt6, $pInt7, $pInt8, $pInt9, $pInt10, $pInt11)
    {
        return ClassFactory::_t2($this->m_ShapeCollection->addTextEffect($pInt0, $oString1, $oString2, $pInt3, $pBoolean4, $pBoolean5, $pInt6, $pInt7, $pInt8, $pInt9, $pInt10, $pInt11));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.addTextEffectInChart(int, java.lang.String, java.lang.String, int, boolean, boolean, int, int, int, int)]

      @param pInt0  int
      @param oString1  String
      @param oString2  String
      @param pInt3  int
      @param pBoolean4  boolean
      @param pBoolean5  boolean
      @param pInt6  int
      @param pInt7  int
      @param pInt8  int
      @param pInt9  int
      @return com.aspose.cells.Shape
     */
    function addTextEffectInChart($pInt0, $oString1, $oString2, $pInt3, $pBoolean4, $pBoolean5, $pInt6, $pInt7, $pInt8, $pInt9)
    {
        return ClassFactory::_t2($this->m_ShapeCollection->addTextEffectInChart($pInt0, $oString1, $oString2, $pInt3, $pBoolean4, $pBoolean5, $pInt6, $pInt7, $pInt8, $pInt9));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.copyCommentsInRange(com.aspose.cells.ShapeCollection, com.aspose.cells.CellArea, int, int)]

      @param oShapeCollection0  com.aspose.cells.ShapeCollection
      @param oCellArea1  com.aspose.cells.CellArea
      @param pInt2  int
      @param pInt3  int
     */
    function copyCommentsInRange($oShapeCollection0, $oCellArea1, $pInt2, $pInt3)
    {
        $this->m_ShapeCollection->copyCommentsInRange(ClassFactory::_t1($oShapeCollection0), ClassFactory::_t1($oCellArea1), $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.copyInRange(com.aspose.cells.ShapeCollection, com.aspose.cells.CellArea, int, int, boolean)]

      @param oShapeCollection0  com.aspose.cells.ShapeCollection
      @param oCellArea1  com.aspose.cells.CellArea
      @param pInt2  int
      @param pInt3  int
      @param pBoolean4  boolean
     */
    function copyInRange($oShapeCollection0, $oCellArea1, $pInt2, $pInt3, $pBoolean4)
    {
        $this->m_ShapeCollection->copyInRange(ClassFactory::_t1($oShapeCollection0), ClassFactory::_t1($oCellArea1), $pInt2, $pInt3, $pBoolean4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.deleteInRange(com.aspose.cells.CellArea)]

      @param oCellArea0  com.aspose.cells.CellArea
     */
    function deleteInRange($oCellArea0)
    {
        $this->m_ShapeCollection->deleteInRange(ClassFactory::_t1($oCellArea0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.deleteShape(com.aspose.cells.Shape)]

      @param oShape0  com.aspose.cells.Shape
     */
    function deleteShape($oShape0)
    {
        $this->m_ShapeCollection->deleteShape(ClassFactory::_t1($oShape0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.Shape
     */
    function getI($pInt0)
    {
        return ClassFactory::_t2($this->m_ShapeCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.get(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.Shape
     */
    function getS($oString0)
    {
        return ClassFactory::_t2($this->m_ShapeCollection->get($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.group(com.aspose.cells.Shape[])]

      @param arrO1DShape0  com.aspose.cells.Shape[]
      @return com.aspose.cells.GroupShape
     */
    function group($arrO1DShape0)
    {
        return ClassFactory::_t2($this->m_ShapeCollection->group(ClassFactory::_t1($arrO1DShape0)));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.remove(com.aspose.cells.Shape)]

      @param oShape0  com.aspose.cells.Shape
     */
    function remove($oShape0)
    {
        $this->m_ShapeCollection->remove(ClassFactory::_t1($oShape0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.removeAt(int)]

      @param pInt0  int
     */
    function removeAt($pInt0)
    {
        $this->m_ShapeCollection->removeAt($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.ungroup(com.aspose.cells.GroupShape)]

      @param oGroupShape0  com.aspose.cells.GroupShape
     */
    function ungroup($oGroupShape0)
    {
        $this->m_ShapeCollection->ungroup(ClassFactory::_t1($oGroupShape0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeCollection.updateSelectedValue()]

     */
    function updateSelectedValue()
    {
        $this->m_ShapeCollection->updateSelectedValue();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ShapeLockType]
  
 */
class ShapeLockType
{
    public $m_ShapeLockType;
    
    function __construct($shapeLockType)
    {
    	$this->m_ShapeLockType = $shapeLockType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.ShapePath]
  
 */
class ShapePath
{
    public $m_ShapePath;
    
    function __construct($shapePath)
    {
    	$this->m_ShapePath = $shapePath;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ShapePath.getPathSegementList()]

      @return com.aspose.cells.ShapeSegmentPathCollection
     */
    function getPathSegementList()
    {
        return ClassFactory::_t2($this->m_ShapePath->getPathSegementList());
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ShapePathCollection]
  
 */
class ShapePathCollection extends CollectionBase
{
    public $m_ShapePathCollection;
    
    function __construct($shapePathCollection)
    {
    	$this->m_ShapePathCollection = $shapePathCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ShapePathCollection.add()]

      @return int
     */
    function add()
    {
        return $this->m_ShapePathCollection->add();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapePathCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.ShapePath
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_ShapePathCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapePathCollection.getCount()]

      @return int
     */
    function getCount()
    {
        return $this->m_ShapePathCollection->getCount();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ShapePathPoint]
  
 */
class ShapePathPoint
{
    public $m_ShapePathPoint;
    
    function __construct($shapePathPoint)
    {
    	$this->m_ShapePathPoint = $shapePathPoint;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ShapePathPoint.getX()]

      @return int
     */
    function getX()
    {
        return $this->m_ShapePathPoint->getX();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapePathPoint.getY()]

      @return int
     */
    function getY()
    {
        return $this->m_ShapePathPoint->getY();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapePathPoint.setX(int)]

      @param pInt0  int
     */
    function setX($pInt0)
    {
        $this->m_ShapePathPoint->setX($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapePathPoint.setY(int)]

      @param pInt0  int
     */
    function setY($pInt0)
    {
        $this->m_ShapePathPoint->setY($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ShapePathPointCollection]
  
 */
class ShapePathPointCollection extends CollectionBase
{
    public $m_ShapePathPointCollection;
    
    function __construct($shapePathPointCollection)
    {
    	$this->m_ShapePathPointCollection = $shapePathPointCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ShapePathPointCollection.add(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return int
     */
    function add($pInt0, $pInt1)
    {
        return $this->m_ShapePathPointCollection->add($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapePathPointCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.ShapePathPoint
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_ShapePathPointCollection->get($pInt0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ShapePathType]
  
 */
class ShapePathType
{
    public $m_ShapePathType;
    
    function __construct($shapePathType)
    {
    	$this->m_ShapePathType = $shapePathType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.ShapePropertyCollection]
  
 */
class ShapePropertyCollection
{
    public $m_ShapePropertyCollection;
    
    function __construct($shapePropertyCollection)
    {
    	$this->m_ShapePropertyCollection = $shapePropertyCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ShapePropertyCollection.clearFormat3D()]

     */
    function clearFormat3D()
    {
        $this->m_ShapePropertyCollection->clearFormat3D();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapePropertyCollection.clearGlowEffect()]

     */
    function clearGlowEffect()
    {
        $this->m_ShapePropertyCollection->clearGlowEffect();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapePropertyCollection.clearShadowEffect()]

     */
    function clearShadowEffect()
    {
        $this->m_ShapePropertyCollection->clearShadowEffect();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapePropertyCollection.getFormat3D()]

      @return com.aspose.cells.Format3D
     */
    function getFormat3D()
    {
        return ClassFactory::_t2($this->m_ShapePropertyCollection->getFormat3D());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapePropertyCollection.getGlowEffect()]

      @return com.aspose.cells.GlowEffect
     */
    function getGlowEffect()
    {
        return ClassFactory::_t2($this->m_ShapePropertyCollection->getGlowEffect());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapePropertyCollection.getShadowEffect()]

      @return com.aspose.cells.ShadowEffect
     */
    function getShadowEffect()
    {
        return ClassFactory::_t2($this->m_ShapePropertyCollection->getShadowEffect());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapePropertyCollection.getSoftEdgeRadius()]

      @return double
     */
    function getSoftEdgeRadius()
    {
        return $this->m_ShapePropertyCollection->getSoftEdgeRadius();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapePropertyCollection.hasFormat3D()]

      @return boolean
     */
    function hasFormat3D()
    {
        return $this->m_ShapePropertyCollection->hasFormat3D();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapePropertyCollection.hasGlowEffect()]

      @return boolean
     */
    function hasGlowEffect()
    {
        return $this->m_ShapePropertyCollection->hasGlowEffect();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapePropertyCollection.hasShadowEffect()]

      @return boolean
     */
    function hasShadowEffect()
    {
        return $this->m_ShapePropertyCollection->hasShadowEffect();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapePropertyCollection.setSoftEdgeRadius(double)]

      @param pDouble0  double
     */
    function setSoftEdgeRadius($pDouble0)
    {
        $this->m_ShapePropertyCollection->setSoftEdgeRadius($pDouble0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ShapeSegmentPath]
  
 */
class ShapeSegmentPath
{
    public $m_ShapeSegmentPath;
    
    function __construct($shapeSegmentPath)
    {
    	$this->m_ShapeSegmentPath = $shapeSegmentPath;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ShapeSegmentPath.getPoints()]

      @return com.aspose.cells.ShapePathPointCollection
     */
    function getPoints()
    {
        return ClassFactory::_t2($this->m_ShapeSegmentPath->getPoints());
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeSegmentPath.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_ShapeSegmentPath->getType();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ShapeSegmentPathCollection]
  
 */
class ShapeSegmentPathCollection extends CollectionBase
{
    public $m_ShapeSegmentPathCollection;
    
    function __construct($shapeSegmentPathCollection)
    {
    	$this->m_ShapeSegmentPathCollection = $shapeSegmentPathCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ShapeSegmentPathCollection.add(int)]

      @param pInt0  int
      @return int
     */
    function add($pInt0)
    {
        return $this->m_ShapeSegmentPathCollection->add($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ShapeSegmentPathCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.ShapeSegmentPath
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_ShapeSegmentPathCollection->get($pInt0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.SheetRender]
  
 */
class SheetRender
{
    public $m_SheetRender;
    
    function __construct($sheetRender)
    {
    	$this->m_SheetRender = $sheetRender;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.SheetRender.getPageCount()]

      @return int
     */
    function getPageCount()
    {
        return $this->m_SheetRender->getPageCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SheetRender.getPageSize(int)]

      @param pInt0  int
      @return float[]
     */
    function getPageSize($pInt0)
    {
        return $this->m_SheetRender->getPageSize($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SheetRender.setPageCount(int)]

      @param pInt0  int
     */
    function setPageCount($pInt0)
    {
        $this->m_SheetRender->setPageCount($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SheetRender.toImage(int, java.awt.Graphics2D)]

      @param pInt0  int
      @param oGraphics2D1  corresponding java type is {java.awt.Graphics2D}
      @return boolean
     */
    function toImageIG($pInt0, $oGraphics2D1)
    {
        return $this->m_SheetRender->toImage($pInt0, ClassFactory::_t1($oGraphics2D1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.SheetRender.toImage(int, java.io.OutputStream)]

      @param pInt0  int
      @param oOutputStream1  corresponding java type is {java.io.OutputStream}
     */
    function toImageIO($pInt0, $oOutputStream1)
    {
        $this->m_SheetRender->toImage($pInt0, ClassFactory::_t1($oOutputStream1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.SheetRender.toImage(int, java.lang.String)]

      @param pInt0  int
      @param oString1  String
     */
    function toImageIS($pInt0, $oString1)
    {
        $this->m_SheetRender->toImage($pInt0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SheetRender.toPrinter(java.lang.String)]

      @param oString0  String
     */
    function toPrinter($oString0)
    {
        $this->m_SheetRender->toPrinter($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.SheetType]
  
 */
class SheetType
{
    public $m_SheetType;
    
    function __construct($sheetType)
    {
    	$this->m_SheetType = $sheetType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.ShiftType]
  
 */
class ShiftType
{
    public $m_ShiftType;
    
    function __construct($shiftType)
    {
    	$this->m_ShiftType = $shiftType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.SmartTag]
  
 */
class SmartTag
{
    public $m_SmartTag;
    
    function __construct($smartTag)
    {
    	$this->m_SmartTag = $smartTag;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.SmartTag.getDeleted()]

      @return boolean
     */
    function getDeleted()
    {
        return $this->m_SmartTag->getDeleted();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SmartTag.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_SmartTag->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SmartTag.getProperties()]

      @return com.aspose.cells.SmartTagPropertyCollection
     */
    function getProperties()
    {
        return ClassFactory::_t2($this->m_SmartTag->getProperties());
    }

    /*
      Wrapper for java version method [com.aspose.cells.SmartTag.getUri()]

      @return String
     */
    function getUri()
    {
        return $this->m_SmartTag->getUri();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SmartTag.setDeleted(boolean)]

      @param pBoolean0  boolean
     */
    function setDeleted($pBoolean0)
    {
        $this->m_SmartTag->setDeleted($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SmartTag.setLink(java.lang.String, java.lang.String)]

      @param oString0  String
      @param oString1  String
     */
    function setLink($oString0, $oString1)
    {
        $this->m_SmartTag->setLink($oString0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SmartTag.setProperties(com.aspose.cells.SmartTagPropertyCollection)]

      @param oSmartTagPropertyCollection0  com.aspose.cells.SmartTagPropertyCollection
     */
    function setProperties($oSmartTagPropertyCollection0)
    {
        $this->m_SmartTag->setProperties(ClassFactory::_t1($oSmartTagPropertyCollection0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.SmartTagCollection]
  
 */
class SmartTagCollection extends CollectionBase
{
    public $m_SmartTagCollection;
    
    function __construct($smartTagCollection)
    {
    	$this->m_SmartTagCollection = $smartTagCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.SmartTagCollection.add(java.lang.String, java.lang.String)]

      @param oString0  String
      @param oString1  String
      @return int
     */
    function add($oString0, $oString1)
    {
        return $this->m_SmartTagCollection->add($oString0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SmartTagCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.SmartTag
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_SmartTagCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.SmartTagCollection.getColumn()]

      @return int
     */
    function getColumn()
    {
        return $this->m_SmartTagCollection->getColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SmartTagCollection.getRow()]

      @return int
     */
    function getRow()
    {
        return $this->m_SmartTagCollection->getRow();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.SmartTagOptions]
  
 */
class SmartTagOptions
{
    public $m_SmartTagOptions;
    
    function __construct($smartTagOptions)
    {
    	$this->m_SmartTagOptions = $smartTagOptions;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.SmartTagOptions.getEmbedSmartTags()]

      @return boolean
     */
    function getEmbedSmartTags()
    {
        return $this->m_SmartTagOptions->getEmbedSmartTags();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SmartTagOptions.getShowType()]

      @return int
     */
    function getShowType()
    {
        return $this->m_SmartTagOptions->getShowType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SmartTagOptions.setEmbedSmartTags(boolean)]

      @param pBoolean0  boolean
     */
    function setEmbedSmartTags($pBoolean0)
    {
        $this->m_SmartTagOptions->setEmbedSmartTags($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SmartTagOptions.setShowType(int)]

      @param pInt0  int
     */
    function setShowType($pInt0)
    {
        $this->m_SmartTagOptions->setShowType($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.SmartTagProperty]
  
 */
class SmartTagProperty
{
    public $m_SmartTagProperty;
    
    function __construct($smartTagProperty)
    {
    	$this->m_SmartTagProperty = $smartTagProperty;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.SmartTagProperty.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_SmartTagProperty->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SmartTagProperty.getValue()]

      @return String
     */
    function getValue()
    {
        return $this->m_SmartTagProperty->getValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SmartTagProperty.setName(java.lang.String)]

      @param oString0  String
     */
    function setName($oString0)
    {
        $this->m_SmartTagProperty->setName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SmartTagProperty.setValue(java.lang.String)]

      @param oString0  String
     */
    function setValue($oString0)
    {
        $this->m_SmartTagProperty->setValue($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.SmartTagPropertyCollection]
  
 */
class SmartTagPropertyCollection extends CollectionBase
{
    public $m_SmartTagPropertyCollection;
    
    function __construct($smartTagPropertyCollection)
    {
    	$this->m_SmartTagPropertyCollection = $smartTagPropertyCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.SmartTagPropertyCollection.add(java.lang.String, java.lang.String)]

      @param oString0  String
      @param oString1  String
      @return int
     */
    function add($oString0, $oString1)
    {
        return $this->m_SmartTagPropertyCollection->add($oString0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SmartTagPropertyCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.SmartTagProperty
     */
    function getI($pInt0)
    {
        return ClassFactory::_t2($this->m_SmartTagPropertyCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.SmartTagPropertyCollection.get(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.SmartTagProperty
     */
    function getS($oString0)
    {
        return ClassFactory::_t2($this->m_SmartTagPropertyCollection->get($oString0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.SmartTagSetting]
  
 */
class SmartTagSetting extends CollectionBase
{
    public $m_SmartTagSetting;
    
    function __construct($smartTagSetting)
    {
    	$this->m_SmartTagSetting = $smartTagSetting;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.SmartTagSetting.add(java.lang.String)]

      @param oString0  String
      @return int
     */
    function addS($oString0)
    {
        return $this->m_SmartTagSetting->add($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SmartTagSetting.add(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return int
     */
    function addII($pInt0, $pInt1)
    {
        return $this->m_SmartTagSetting->add($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SmartTagSetting.get(int)]

      @param pInt0  int
      @return com.aspose.cells.SmartTagCollection
     */
    function getI($pInt0)
    {
        return ClassFactory::_t2($this->m_SmartTagSetting->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.SmartTagSetting.get(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.SmartTagCollection
     */
    function getS($oString0)
    {
        return ClassFactory::_t2($this->m_SmartTagSetting->get($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.SmartTagSetting.get(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return com.aspose.cells.SmartTagCollection
     */
    function getII($pInt0, $pInt1)
    {
        return ClassFactory::_t2($this->m_SmartTagSetting->get($pInt0, $pInt1));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.SmartTagShowType]
  
 */
class SmartTagShowType
{
    public $m_SmartTagShowType;
    
    function __construct($smartTagShowType)
    {
    	$this->m_SmartTagShowType = $smartTagShowType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.SolidFill]
  
 */
class SolidFill
{
    public $m_SolidFill;
    
    function __construct($solidFill)
    {
    	$this->m_SolidFill = $solidFill;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.SolidFill.getCellsColor()]

      @return com.aspose.cells.CellsColor
     */
    function getCellsColor()
    {
        return ClassFactory::_t2($this->m_SolidFill->getCellsColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.SolidFill.getColor()]

      @return com.aspose.cells.Color
     */
    function getColor()
    {
        return ClassFactory::_t2($this->m_SolidFill->getColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.SolidFill.getTransparency()]

      @return double
     */
    function getTransparency()
    {
        return $this->m_SolidFill->getTransparency();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SolidFill.setCellsColor(com.aspose.cells.CellsColor)]

      @param oCellsColor0  com.aspose.cells.CellsColor
     */
    function setCellsColor($oCellsColor0)
    {
        $this->m_SolidFill->setCellsColor(ClassFactory::_t1($oCellsColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.SolidFill.setColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setColor($oColor0)
    {
        $this->m_SolidFill->setColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.SolidFill.setTransparency(double)]

      @param pDouble0  double
     */
    function setTransparency($pDouble0)
    {
        $this->m_SolidFill->setTransparency($pDouble0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.SortOrder]
  
 */
class SortOrder
{
    public $m_SortOrder;
    
    function __construct($sortOrder)
    {
    	$this->m_SortOrder = $sortOrder;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Sparkline]
  
 */
class Sparkline
{
    public $m_Sparkline;
    
    function __construct($sparkline)
    {
    	$this->m_Sparkline = $sparkline;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Sparkline.getColumn()]

      @return int
     */
    function getColumn()
    {
        return $this->m_Sparkline->getColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Sparkline.getDataRange()]

      @return String
     */
    function getDataRange()
    {
        return $this->m_Sparkline->getDataRange();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Sparkline.getRow()]

      @return int
     */
    function getRow()
    {
        return $this->m_Sparkline->getRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Sparkline.setDataRange(java.lang.String)]

      @param oString0  String
     */
    function setDataRange($oString0)
    {
        $this->m_Sparkline->setDataRange($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Sparkline.toImage(java.io.OutputStream, com.aspose.cells.ImageOrPrintOptions)]

      @param oOutputStream0  corresponding java type is {java.io.OutputStream}
      @param oImageOrPrintOptions1  com.aspose.cells.ImageOrPrintOptions
     */
    function toImageOI($oOutputStream0, $oImageOrPrintOptions1)
    {
        $this->m_Sparkline->toImage(ClassFactory::_t1($oOutputStream0), ClassFactory::_t1($oImageOrPrintOptions1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Sparkline.toImage(java.lang.String, com.aspose.cells.ImageOrPrintOptions)]

      @param oString0  String
      @param oImageOrPrintOptions1  com.aspose.cells.ImageOrPrintOptions
     */
    function toImageSI($oString0, $oImageOrPrintOptions1)
    {
        $this->m_Sparkline->toImage($oString0, ClassFactory::_t1($oImageOrPrintOptions1));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.SparklineAxisMinMaxType]
  
 */
class SparklineAxisMinMaxType
{
    public $m_SparklineAxisMinMaxType;
    
    function __construct($sparklineAxisMinMaxType)
    {
    	$this->m_SparklineAxisMinMaxType = $sparklineAxisMinMaxType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.SparklineCollection]
  
 */
class SparklineCollection extends CollectionBase
{
    public $m_SparklineCollection;
    
    function __construct($sparklineCollection)
    {
    	$this->m_SparklineCollection = $sparklineCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.SparklineCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.Sparkline
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_SparklineCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineCollection.remove(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
     */
    function remove($oObject0)
    {
        $this->m_SparklineCollection->remove(ClassFactory::_t1($oObject0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.SparklineGroup]
  
 */
class SparklineGroup
{
    public $m_SparklineGroup;
    
    function __construct($sparklineGroup)
    {
    	$this->m_SparklineGroup = $sparklineGroup;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getDisplayHidden()]

      @return boolean
     */
    function getDisplayHidden()
    {
        return $this->m_SparklineGroup->getDisplayHidden();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getFirstPointColor()]

      @return com.aspose.cells.CellsColor
     */
    function getFirstPointColor()
    {
        return ClassFactory::_t2($this->m_SparklineGroup->getFirstPointColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getHighPointColor()]

      @return com.aspose.cells.CellsColor
     */
    function getHighPointColor()
    {
        return ClassFactory::_t2($this->m_SparklineGroup->getHighPointColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getHorizontalAxisColor()]

      @return com.aspose.cells.CellsColor
     */
    function getHorizontalAxisColor()
    {
        return ClassFactory::_t2($this->m_SparklineGroup->getHorizontalAxisColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getHorizontalAxisDateRange()]

      @return String
     */
    function getHorizontalAxisDateRange()
    {
        return $this->m_SparklineGroup->getHorizontalAxisDateRange();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getLastPointColor()]

      @return com.aspose.cells.CellsColor
     */
    function getLastPointColor()
    {
        return ClassFactory::_t2($this->m_SparklineGroup->getLastPointColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getLineWeight()]

      @return double
     */
    function getLineWeight()
    {
        return $this->m_SparklineGroup->getLineWeight();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getLowPointColor()]

      @return com.aspose.cells.CellsColor
     */
    function getLowPointColor()
    {
        return ClassFactory::_t2($this->m_SparklineGroup->getLowPointColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getMarkersColor()]

      @return com.aspose.cells.CellsColor
     */
    function getMarkersColor()
    {
        return ClassFactory::_t2($this->m_SparklineGroup->getMarkersColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getNegativePointsColor()]

      @return com.aspose.cells.CellsColor
     */
    function getNegativePointsColor()
    {
        return ClassFactory::_t2($this->m_SparklineGroup->getNegativePointsColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getPlotEmptyCellsType()]

      @return int
     */
    function getPlotEmptyCellsType()
    {
        return $this->m_SparklineGroup->getPlotEmptyCellsType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getPlotRightToLeft()]

      @return boolean
     */
    function getPlotRightToLeft()
    {
        return $this->m_SparklineGroup->getPlotRightToLeft();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getPresetStyle()]

      @return int
     */
    function getPresetStyle()
    {
        return $this->m_SparklineGroup->getPresetStyle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getSeriesColor()]

      @return com.aspose.cells.CellsColor
     */
    function getSeriesColor()
    {
        return ClassFactory::_t2($this->m_SparklineGroup->getSeriesColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getShowFirstPoint()]

      @return boolean
     */
    function getShowFirstPoint()
    {
        return $this->m_SparklineGroup->getShowFirstPoint();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getShowHighPoint()]

      @return boolean
     */
    function getShowHighPoint()
    {
        return $this->m_SparklineGroup->getShowHighPoint();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getShowHorizontalAxis()]

      @return boolean
     */
    function getShowHorizontalAxis()
    {
        return $this->m_SparklineGroup->getShowHorizontalAxis();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getShowLastPoint()]

      @return boolean
     */
    function getShowLastPoint()
    {
        return $this->m_SparklineGroup->getShowLastPoint();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getShowLowPoint()]

      @return boolean
     */
    function getShowLowPoint()
    {
        return $this->m_SparklineGroup->getShowLowPoint();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getShowMarkers()]

      @return boolean
     */
    function getShowMarkers()
    {
        return $this->m_SparklineGroup->getShowMarkers();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getShowNegativePoints()]

      @return boolean
     */
    function getShowNegativePoints()
    {
        return $this->m_SparklineGroup->getShowNegativePoints();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getSparklineCollection()]

      @return com.aspose.cells.SparklineCollection
     */
    function getSparklineCollection()
    {
        return ClassFactory::_t2($this->m_SparklineGroup->getSparklineCollection());
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_SparklineGroup->getType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getVerticalAxisMaxValue()]

      @return double
     */
    function getVerticalAxisMaxValue()
    {
        return $this->m_SparklineGroup->getVerticalAxisMaxValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getVerticalAxisMaxValueType()]

      @return int
     */
    function getVerticalAxisMaxValueType()
    {
        return $this->m_SparklineGroup->getVerticalAxisMaxValueType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getVerticalAxisMinValue()]

      @return double
     */
    function getVerticalAxisMinValue()
    {
        return $this->m_SparklineGroup->getVerticalAxisMinValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.getVerticalAxisMinValueType()]

      @return int
     */
    function getVerticalAxisMinValueType()
    {
        return $this->m_SparklineGroup->getVerticalAxisMinValueType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.resetRanges(java.lang.String, boolean, com.aspose.cells.CellArea)]

      @param oString0  String
      @param pBoolean1  boolean
      @param oCellArea2  com.aspose.cells.CellArea
     */
    function resetRanges($oString0, $pBoolean1, $oCellArea2)
    {
        $this->m_SparklineGroup->resetRanges($oString0, $pBoolean1, ClassFactory::_t1($oCellArea2));
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setDisplayHidden(boolean)]

      @param pBoolean0  boolean
     */
    function setDisplayHidden($pBoolean0)
    {
        $this->m_SparklineGroup->setDisplayHidden($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setFirstPointColor(com.aspose.cells.CellsColor)]

      @param oCellsColor0  com.aspose.cells.CellsColor
     */
    function setFirstPointColor($oCellsColor0)
    {
        $this->m_SparklineGroup->setFirstPointColor(ClassFactory::_t1($oCellsColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setHighPointColor(com.aspose.cells.CellsColor)]

      @param oCellsColor0  com.aspose.cells.CellsColor
     */
    function setHighPointColor($oCellsColor0)
    {
        $this->m_SparklineGroup->setHighPointColor(ClassFactory::_t1($oCellsColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setHorizontalAxisColor(com.aspose.cells.CellsColor)]

      @param oCellsColor0  com.aspose.cells.CellsColor
     */
    function setHorizontalAxisColor($oCellsColor0)
    {
        $this->m_SparklineGroup->setHorizontalAxisColor(ClassFactory::_t1($oCellsColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setHorizontalAxisDateRange(java.lang.String)]

      @param oString0  String
     */
    function setHorizontalAxisDateRange($oString0)
    {
        $this->m_SparklineGroup->setHorizontalAxisDateRange($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setLastPointColor(com.aspose.cells.CellsColor)]

      @param oCellsColor0  com.aspose.cells.CellsColor
     */
    function setLastPointColor($oCellsColor0)
    {
        $this->m_SparklineGroup->setLastPointColor(ClassFactory::_t1($oCellsColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setLineWeight(double)]

      @param pDouble0  double
     */
    function setLineWeight($pDouble0)
    {
        $this->m_SparklineGroup->setLineWeight($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setLowPointColor(com.aspose.cells.CellsColor)]

      @param oCellsColor0  com.aspose.cells.CellsColor
     */
    function setLowPointColor($oCellsColor0)
    {
        $this->m_SparklineGroup->setLowPointColor(ClassFactory::_t1($oCellsColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setMarkersColor(com.aspose.cells.CellsColor)]

      @param oCellsColor0  com.aspose.cells.CellsColor
     */
    function setMarkersColor($oCellsColor0)
    {
        $this->m_SparklineGroup->setMarkersColor(ClassFactory::_t1($oCellsColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setNegativePointsColor(com.aspose.cells.CellsColor)]

      @param oCellsColor0  com.aspose.cells.CellsColor
     */
    function setNegativePointsColor($oCellsColor0)
    {
        $this->m_SparklineGroup->setNegativePointsColor(ClassFactory::_t1($oCellsColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setPlotEmptyCellsType(int)]

      @param pInt0  int
     */
    function setPlotEmptyCellsType($pInt0)
    {
        $this->m_SparklineGroup->setPlotEmptyCellsType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setPlotRightToLeft(boolean)]

      @param pBoolean0  boolean
     */
    function setPlotRightToLeft($pBoolean0)
    {
        $this->m_SparklineGroup->setPlotRightToLeft($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setPresetStyle(int)]

      @param pInt0  int
     */
    function setPresetStyle($pInt0)
    {
        $this->m_SparklineGroup->setPresetStyle($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setSeriesColor(com.aspose.cells.CellsColor)]

      @param oCellsColor0  com.aspose.cells.CellsColor
     */
    function setSeriesColor($oCellsColor0)
    {
        $this->m_SparklineGroup->setSeriesColor(ClassFactory::_t1($oCellsColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setShowFirstPoint(boolean)]

      @param pBoolean0  boolean
     */
    function setShowFirstPoint($pBoolean0)
    {
        $this->m_SparklineGroup->setShowFirstPoint($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setShowHighPoint(boolean)]

      @param pBoolean0  boolean
     */
    function setShowHighPoint($pBoolean0)
    {
        $this->m_SparklineGroup->setShowHighPoint($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setShowHorizontalAxis(boolean)]

      @param pBoolean0  boolean
     */
    function setShowHorizontalAxis($pBoolean0)
    {
        $this->m_SparklineGroup->setShowHorizontalAxis($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setShowLastPoint(boolean)]

      @param pBoolean0  boolean
     */
    function setShowLastPoint($pBoolean0)
    {
        $this->m_SparklineGroup->setShowLastPoint($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setShowLowPoint(boolean)]

      @param pBoolean0  boolean
     */
    function setShowLowPoint($pBoolean0)
    {
        $this->m_SparklineGroup->setShowLowPoint($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setShowMarkers(boolean)]

      @param pBoolean0  boolean
     */
    function setShowMarkers($pBoolean0)
    {
        $this->m_SparklineGroup->setShowMarkers($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setShowNegativePoints(boolean)]

      @param pBoolean0  boolean
     */
    function setShowNegativePoints($pBoolean0)
    {
        $this->m_SparklineGroup->setShowNegativePoints($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setType(int)]

      @param pInt0  int
     */
    function setType($pInt0)
    {
        $this->m_SparklineGroup->setType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setVerticalAxisMaxValue(double)]

      @param pDouble0  double
     */
    function setVerticalAxisMaxValue($pDouble0)
    {
        $this->m_SparklineGroup->setVerticalAxisMaxValue($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setVerticalAxisMaxValueType(int)]

      @param pInt0  int
     */
    function setVerticalAxisMaxValueType($pInt0)
    {
        $this->m_SparklineGroup->setVerticalAxisMaxValueType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setVerticalAxisMinValue(double)]

      @param pDouble0  double
     */
    function setVerticalAxisMinValue($pDouble0)
    {
        $this->m_SparklineGroup->setVerticalAxisMinValue($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroup.setVerticalAxisMinValueType(int)]

      @param pInt0  int
     */
    function setVerticalAxisMinValueType($pInt0)
    {
        $this->m_SparklineGroup->setVerticalAxisMinValueType($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.SparklineGroupCollection]
  
 */
class SparklineGroupCollection extends CollectionBase
{
    public $m_SparklineGroupCollection;
    
    function __construct($sparklineGroupCollection)
    {
    	$this->m_SparklineGroupCollection = $sparklineGroupCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroupCollection.add(int, java.lang.String, boolean, com.aspose.cells.CellArea)]

      @param pInt0  int
      @param oString1  String
      @param pBoolean2  boolean
      @param oCellArea3  com.aspose.cells.CellArea
      @return int
     */
    function add($pInt0, $oString1, $pBoolean2, $oCellArea3)
    {
        return $this->m_SparklineGroupCollection->add($pInt0, $oString1, $pBoolean2, ClassFactory::_t1($oCellArea3));
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroupCollection.clearSparklineGroups(com.aspose.cells.CellArea)]

      @param oCellArea0  com.aspose.cells.CellArea
     */
    function clearSparklineGroups($oCellArea0)
    {
        $this->m_SparklineGroupCollection->clearSparklineGroups(ClassFactory::_t1($oCellArea0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroupCollection.clearSparklines(com.aspose.cells.CellArea)]

      @param oCellArea0  com.aspose.cells.CellArea
     */
    function clearSparklines($oCellArea0)
    {
        $this->m_SparklineGroupCollection->clearSparklines(ClassFactory::_t1($oCellArea0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.SparklineGroupCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.SparklineGroup
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_SparklineGroupCollection->get($pInt0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.SparklinePresetStyleType]
  
 */
class SparklinePresetStyleType
{
    public $m_SparklinePresetStyleType;
    
    function __construct($sparklinePresetStyleType)
    {
    	$this->m_SparklinePresetStyleType = $sparklinePresetStyleType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.SparklineType]
  
 */
class SparklineType
{
    public $m_SparklineType;
    
    function __construct($sparklineType)
    {
    	$this->m_SparklineType = $sparklineType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Spinner]
  
 */
class Spinner extends Shape
{
    public $m_Spinner;
    
    function __construct($spinner)
    {
    	$this->m_Spinner = $spinner;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Spinner.getCurrentValue()]

      @return int
     */
    function getCurrentValue()
    {
        return $this->m_Spinner->getCurrentValue();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Spinner.getIncrementalChange()]

      @return int
     */
    function getIncrementalChange()
    {
        return $this->m_Spinner->getIncrementalChange();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Spinner.getMax()]

      @return int
     */
    function getMax()
    {
        return $this->m_Spinner->getMax();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Spinner.getMin()]

      @return int
     */
    function getMin()
    {
        return $this->m_Spinner->getMin();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Spinner.getShadow()]

      @return boolean
     */
    function getShadow()
    {
        return $this->m_Spinner->getShadow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Spinner.setCurrentValue(int)]

      @param pInt0  int
     */
    function setCurrentValue($pInt0)
    {
        $this->m_Spinner->setCurrentValue($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Spinner.setIncrementalChange(int)]

      @param pInt0  int
     */
    function setIncrementalChange($pInt0)
    {
        $this->m_Spinner->setIncrementalChange($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Spinner.setMax(int)]

      @param pInt0  int
     */
    function setMax($pInt0)
    {
        $this->m_Spinner->setMax($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Spinner.setMin(int)]

      @param pInt0  int
     */
    function setMin($pInt0)
    {
        $this->m_Spinner->setMin($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Spinner.setShadow(boolean)]

      @param pBoolean0  boolean
     */
    function setShadow($pBoolean0)
    {
        $this->m_Spinner->setShadow($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.SpreadsheetML2003SaveOptions]
  
 */
class SpreadsheetML2003SaveOptions extends SaveOptions
{
    public $m_SpreadsheetML2003SaveOptions;
    
    function __construct($spreadsheetML2003SaveOptions)
    {
    	$this->m_SpreadsheetML2003SaveOptions = $spreadsheetML2003SaveOptions;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.SpreadsheetML2003SaveOptions.getExportColumnIndexOfCell()]

      @return boolean
     */
    function getExportColumnIndexOfCell()
    {
        return $this->m_SpreadsheetML2003SaveOptions->getExportColumnIndexOfCell();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SpreadsheetML2003SaveOptions.getLimitAsXls()]

      @return boolean
     */
    function getLimitAsXls()
    {
        return $this->m_SpreadsheetML2003SaveOptions->getLimitAsXls();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SpreadsheetML2003SaveOptions.isIndentedFormatting()]

      @return boolean
     */
    function isIndentedFormatting()
    {
        return $this->m_SpreadsheetML2003SaveOptions->isIndentedFormatting();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SpreadsheetML2003SaveOptions.setExportColumnIndexOfCell(boolean)]

      @param pBoolean0  boolean
     */
    function setExportColumnIndexOfCell($pBoolean0)
    {
        $this->m_SpreadsheetML2003SaveOptions->setExportColumnIndexOfCell($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SpreadsheetML2003SaveOptions.setIndentedFormatting(boolean)]

      @param pBoolean0  boolean
     */
    function setIndentedFormatting($pBoolean0)
    {
        $this->m_SpreadsheetML2003SaveOptions->setIndentedFormatting($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.SpreadsheetML2003SaveOptions.setLimitAsXls(boolean)]

      @param pBoolean0  boolean
     */
    function setLimitAsXls($pBoolean0)
    {
        $this->m_SpreadsheetML2003SaveOptions->setLimitAsXls($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.SqlDataType]
  
 */
class SqlDataType
{
    public $m_SqlDataType;
    
    function __construct($sqlDataType)
    {
    	$this->m_SqlDataType = $sqlDataType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.StreamProviderOptions]
  
 */
class StreamProviderOptions
{
    public $m_StreamProviderOptions;
    
    function __construct($streamProviderOptions)
    {
    	$this->m_StreamProviderOptions = $streamProviderOptions;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.StreamProviderOptions.getDefaultPath()]

      @return String
     */
    function getDefaultPath()
    {
        return $this->m_StreamProviderOptions->getDefaultPath();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StreamProviderOptions.getStream()]

      @return corresponding java type is {java.io.OutputStream}
     */
    function getStream()
    {
        return ClassFactory::_t2($this->m_StreamProviderOptions->getStream());
    }

    /*
      Wrapper for java version method [com.aspose.cells.StreamProviderOptions.setCustomPath(java.lang.String)]

      @param oString0  String
     */
    function setCustomPath($oString0)
    {
        $this->m_StreamProviderOptions->setCustomPath($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StreamProviderOptions.setStream(java.io.OutputStream)]

      @param oOutputStream0  corresponding java type is {java.io.OutputStream}
     */
    function setStream($oOutputStream0)
    {
        $this->m_StreamProviderOptions->setStream(ClassFactory::_t1($oOutputStream0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.StrokeType]
  
 */
class StrokeType
{
    public $m_StrokeType;
    
    function __construct($strokeType)
    {
    	$this->m_StrokeType = $strokeType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Style]
  
 */
class Style
{
    public $m_Style;
    
    function __construct($style)
    {
    	$this->m_Style = $style;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Style.copy(com.aspose.cells.Style)]

      @param oStyle0  com.aspose.cells.Style
     */
    function copy($oStyle0)
    {
        $this->m_Style->copy(ClassFactory::_t1($oStyle0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.equals(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
      @return boolean
     */
    function equals($oObject0)
    {
        return $this->m_Style->equals(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.getBackgroundArgbColor()]

      @return int
     */
    function getBackgroundArgbColor()
    {
        return $this->m_Style->getBackgroundArgbColor();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.getBackgroundColor()]

      @return com.aspose.cells.Color
     */
    function getBackgroundColor()
    {
        return ClassFactory::_t2($this->m_Style->getBackgroundColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.getBackgroundThemeColor()]

      @return com.aspose.cells.ThemeColor
     */
    function getBackgroundThemeColor()
    {
        return ClassFactory::_t2($this->m_Style->getBackgroundThemeColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.getBorders()]

      @return com.aspose.cells.BorderCollection
     */
    function getBorders()
    {
        return ClassFactory::_t2($this->m_Style->getBorders());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.getCultureCustom()]

      @return String
     */
    function getCultureCustom()
    {
        return $this->m_Style->getCultureCustom();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.getCustom()]

      @return String
     */
    function getCustom()
    {
        return $this->m_Style->getCustom();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.getFont()]

      @return com.aspose.cells.Font
     */
    function getFont()
    {
        return ClassFactory::_t2($this->m_Style->getFont());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.getForegroundArgbColor()]

      @return int
     */
    function getForegroundArgbColor()
    {
        return $this->m_Style->getForegroundArgbColor();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.getForegroundColor()]

      @return com.aspose.cells.Color
     */
    function getForegroundColor()
    {
        return ClassFactory::_t2($this->m_Style->getForegroundColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.getForegroundThemeColor()]

      @return com.aspose.cells.ThemeColor
     */
    function getForegroundThemeColor()
    {
        return ClassFactory::_t2($this->m_Style->getForegroundThemeColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.getHorizontalAlignment()]

      @return int
     */
    function getHorizontalAlignment()
    {
        return $this->m_Style->getHorizontalAlignment();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.getIndentLevel()]

      @return int
     */
    function getIndentLevel()
    {
        return $this->m_Style->getIndentLevel();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_Style->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.getNumber()]

      @return int
     */
    function getNumber()
    {
        return $this->m_Style->getNumber();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.getParentStyle()]

      @return com.aspose.cells.Style
     */
    function getParentStyle()
    {
        return ClassFactory::_t2($this->m_Style->getParentStyle());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.getPattern()]

      @return int
     */
    function getPattern()
    {
        return $this->m_Style->getPattern();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.getRotation()]

      @return int
     */
    function getRotation()
    {
        return $this->m_Style->getRotation();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.getRotationAngle()]

      @return int
     */
    function getRotationAngle()
    {
        return $this->m_Style->getRotationAngle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.getShrinkToFit()]

      @return boolean
     */
    function getShrinkToFit()
    {
        return $this->m_Style->getShrinkToFit();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.getTextDirection()]

      @return int
     */
    function getTextDirection()
    {
        return $this->m_Style->getTextDirection();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.getTwoColorGradient()]

      @return array, corresponding java type is {java.lang.Object[]}
     */
    function getTwoColorGradient()
    {
        return ClassFactory::_t2($this->m_Style->getTwoColorGradient());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.getVerticalAlignment()]

      @return int
     */
    function getVerticalAlignment()
    {
        return $this->m_Style->getVerticalAlignment();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.hashCode()]

      @return int
     */
    function hashCode()
    {
        return $this->m_Style->hashCode();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.isDateTime()]

      @return boolean
     */
    function isDateTime()
    {
        return $this->m_Style->isDateTime();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.isFormulaHidden()]

      @return boolean
     */
    function isFormulaHidden()
    {
        return $this->m_Style->isFormulaHidden();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.isGradient()]

      @return boolean
     */
    function isGradient()
    {
        return $this->m_Style->isGradient();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.isJustifyDistributed()]

      @return boolean
     */
    function isJustifyDistributed()
    {
        return $this->m_Style->isJustifyDistributed();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.isLocked()]

      @return boolean
     */
    function isLocked()
    {
        return $this->m_Style->isLocked();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.isModified(int)]

      @param pInt0  int
      @return boolean
     */
    function isModified($pInt0)
    {
        return $this->m_Style->isModified($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.isPercent()]

      @return boolean
     */
    function isPercent()
    {
        return $this->m_Style->isPercent();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.isTextWrapped()]

      @return boolean
     */
    function isTextWrapped()
    {
        return $this->m_Style->isTextWrapped();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setBackgroundArgbColor(int)]

      @param pInt0  int
     */
    function setBackgroundArgbColor($pInt0)
    {
        $this->m_Style->setBackgroundArgbColor($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setBackgroundColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setBackgroundColor($oColor0)
    {
        $this->m_Style->setBackgroundColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setBackgroundThemeColor(com.aspose.cells.ThemeColor)]

      @param oThemeColor0  com.aspose.cells.ThemeColor
     */
    function setBackgroundThemeColor($oThemeColor0)
    {
        $this->m_Style->setBackgroundThemeColor(ClassFactory::_t1($oThemeColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setBorder(int, int, com.aspose.cells.Color)]

      @param pInt0  int
      @param pInt1  int
      @param oColor2  com.aspose.cells.Color
      @return boolean
     */
    function setBorder($pInt0, $pInt1, $oColor2)
    {
        return $this->m_Style->setBorder($pInt0, $pInt1, ClassFactory::_t1($oColor2));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setCultureCustom(java.lang.String)]

      @param oString0  String
     */
    function setCultureCustom($oString0)
    {
        $this->m_Style->setCultureCustom($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setCustom(java.lang.String)]

      @param oString0  String
     */
    function setCustom($oString0)
    {
        $this->m_Style->setCustom($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setForegroundArgbColor(int)]

      @param pInt0  int
     */
    function setForegroundArgbColor($pInt0)
    {
        $this->m_Style->setForegroundArgbColor($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setForegroundColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setForegroundColor($oColor0)
    {
        $this->m_Style->setForegroundColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setForegroundThemeColor(com.aspose.cells.ThemeColor)]

      @param oThemeColor0  com.aspose.cells.ThemeColor
     */
    function setForegroundThemeColor($oThemeColor0)
    {
        $this->m_Style->setForegroundThemeColor(ClassFactory::_t1($oThemeColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setFormulaHidden(boolean)]

      @param pBoolean0  boolean
     */
    function setFormulaHidden($pBoolean0)
    {
        $this->m_Style->setFormulaHidden($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setGradient(boolean)]

      @param pBoolean0  boolean
     */
    function setGradient($pBoolean0)
    {
        $this->m_Style->setGradient($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setHorizontalAlignment(int)]

      @param pInt0  int
     */
    function setHorizontalAlignment($pInt0)
    {
        $this->m_Style->setHorizontalAlignment($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setIndentLevel(int)]

      @param pInt0  int
     */
    function setIndentLevel($pInt0)
    {
        $this->m_Style->setIndentLevel($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setJustifyDistributed(boolean)]

      @param pBoolean0  boolean
     */
    function setJustifyDistributed($pBoolean0)
    {
        $this->m_Style->setJustifyDistributed($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setLocked(boolean)]

      @param pBoolean0  boolean
     */
    function setLocked($pBoolean0)
    {
        $this->m_Style->setLocked($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setName(java.lang.String)]

      @param oString0  String
     */
    function setName($oString0)
    {
        $this->m_Style->setName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setNumber(int)]

      @param pInt0  int
     */
    function setNumber($pInt0)
    {
        $this->m_Style->setNumber($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setPattern(int)]

      @param pInt0  int
     */
    function setPattern($pInt0)
    {
        $this->m_Style->setPattern($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setRotation(int)]

      @param pInt0  int
     */
    function setRotation($pInt0)
    {
        $this->m_Style->setRotation($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setRotationAngle(int)]

      @param pInt0  int
     */
    function setRotationAngle($pInt0)
    {
        $this->m_Style->setRotationAngle($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setShrinkToFit(boolean)]

      @param pBoolean0  boolean
     */
    function setShrinkToFit($pBoolean0)
    {
        $this->m_Style->setShrinkToFit($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setTextDirection(int)]

      @param pInt0  int
     */
    function setTextDirection($pInt0)
    {
        $this->m_Style->setTextDirection($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setTextWrapped(boolean)]

      @param pBoolean0  boolean
     */
    function setTextWrapped($pBoolean0)
    {
        $this->m_Style->setTextWrapped($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setTwoColorGradient(com.aspose.cells.Color, com.aspose.cells.Color, int, int)]

      @param oColor0  com.aspose.cells.Color
      @param oColor1  com.aspose.cells.Color
      @param pInt2  int
      @param pInt3  int
     */
    function setTwoColorGradient($oColor0, $oColor1, $pInt2, $pInt3)
    {
        $this->m_Style->setTwoColorGradient(ClassFactory::_t1($oColor0), ClassFactory::_t1($oColor1), $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.setVerticalAlignment(int)]

      @param pInt0  int
     */
    function setVerticalAlignment($pInt0)
    {
        $this->m_Style->setVerticalAlignment($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Style.update()]

     */
    function update()
    {
        $this->m_Style->update();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.StyleCollection]
  
 */
class StyleCollection
{
    public $m_StyleCollection;
    
    function __construct($styleCollection)
    {
    	$this->m_StyleCollection = $styleCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.StyleCollection.add()]

      @return int
     */
    function add()
    {
        return $this->m_StyleCollection->add();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleCollection.createBuiltinStyle(int)]

      @param pInt0  int
      @return com.aspose.cells.Style
     */
    function createBuiltinStyle($pInt0)
    {
        return ClassFactory::_t2($this->m_StyleCollection->createBuiltinStyle($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.Style
     */
    function getI($pInt0)
    {
        return ClassFactory::_t2($this->m_StyleCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleCollection.get(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.Style
     */
    function getS($oString0)
    {
        return ClassFactory::_t2($this->m_StyleCollection->get($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleCollection.getCount()]

      @return int
     */
    function getCount()
    {
        return $this->m_StyleCollection->getCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleCollection.getThemeStyle(int, double)]

      @param pInt0  int
      @param pDouble1  double
      @return com.aspose.cells.Style
     */
    function getThemeStyle($pInt0, $pDouble1)
    {
        return ClassFactory::_t2($this->m_StyleCollection->getThemeStyle($pInt0, $pDouble1));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.StyleFlag]
  
 */
class StyleFlag
{
    public $m_StyleFlag;
    
    function __construct($styleFlag)
    {
    	$this->m_StyleFlag = $styleFlag;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getAll()]

      @return boolean
     */
    function getAll()
    {
        return $this->m_StyleFlag->getAll();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getBorders()]

      @return boolean
     */
    function getBorders()
    {
        return $this->m_StyleFlag->getBorders();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getBottomBorder()]

      @return boolean
     */
    function getBottomBorder()
    {
        return $this->m_StyleFlag->getBottomBorder();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getCellShading()]

      @return boolean
     */
    function getCellShading()
    {
        return $this->m_StyleFlag->getCellShading();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getDiagonalDownBorder()]

      @return boolean
     */
    function getDiagonalDownBorder()
    {
        return $this->m_StyleFlag->getDiagonalDownBorder();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getDiagonalUpBorder()]

      @return boolean
     */
    function getDiagonalUpBorder()
    {
        return $this->m_StyleFlag->getDiagonalUpBorder();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getFont()]

      @return boolean
     */
    function getFont()
    {
        return $this->m_StyleFlag->getFont();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getFontBold()]

      @return boolean
     */
    function getFontBold()
    {
        return $this->m_StyleFlag->getFontBold();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getFontColor()]

      @return boolean
     */
    function getFontColor()
    {
        return $this->m_StyleFlag->getFontColor();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getFontItalic()]

      @return boolean
     */
    function getFontItalic()
    {
        return $this->m_StyleFlag->getFontItalic();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getFontName()]

      @return boolean
     */
    function getFontName()
    {
        return $this->m_StyleFlag->getFontName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getFontScript()]

      @return boolean
     */
    function getFontScript()
    {
        return $this->m_StyleFlag->getFontScript();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getFontSize()]

      @return boolean
     */
    function getFontSize()
    {
        return $this->m_StyleFlag->getFontSize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getFontStrike()]

      @return boolean
     */
    function getFontStrike()
    {
        return $this->m_StyleFlag->getFontStrike();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getFontUnderline()]

      @return boolean
     */
    function getFontUnderline()
    {
        return $this->m_StyleFlag->getFontUnderline();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getHideFormula()]

      @return boolean
     */
    function getHideFormula()
    {
        return $this->m_StyleFlag->getHideFormula();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getHorizontalAlignment()]

      @return boolean
     */
    function getHorizontalAlignment()
    {
        return $this->m_StyleFlag->getHorizontalAlignment();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getIndent()]

      @return boolean
     */
    function getIndent()
    {
        return $this->m_StyleFlag->getIndent();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getLeftBorder()]

      @return boolean
     */
    function getLeftBorder()
    {
        return $this->m_StyleFlag->getLeftBorder();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getLocked()]

      @return boolean
     */
    function getLocked()
    {
        return $this->m_StyleFlag->getLocked();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getNumberFormat()]

      @return boolean
     */
    function getNumberFormat()
    {
        return $this->m_StyleFlag->getNumberFormat();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getRightBorder()]

      @return boolean
     */
    function getRightBorder()
    {
        return $this->m_StyleFlag->getRightBorder();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getRotation()]

      @return boolean
     */
    function getRotation()
    {
        return $this->m_StyleFlag->getRotation();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getShrinkToFit()]

      @return boolean
     */
    function getShrinkToFit()
    {
        return $this->m_StyleFlag->getShrinkToFit();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getTextDirection()]

      @return boolean
     */
    function getTextDirection()
    {
        return $this->m_StyleFlag->getTextDirection();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getTopBorder()]

      @return boolean
     */
    function getTopBorder()
    {
        return $this->m_StyleFlag->getTopBorder();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getVerticalAlignment()]

      @return boolean
     */
    function getVerticalAlignment()
    {
        return $this->m_StyleFlag->getVerticalAlignment();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.getWrapText()]

      @return boolean
     */
    function getWrapText()
    {
        return $this->m_StyleFlag->getWrapText();
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setAll(boolean)]

      @param pBoolean0  boolean
     */
    function setAll($pBoolean0)
    {
        $this->m_StyleFlag->setAll($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setBorders(boolean)]

      @param pBoolean0  boolean
     */
    function setBorders($pBoolean0)
    {
        $this->m_StyleFlag->setBorders($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setBottomBorder(boolean)]

      @param pBoolean0  boolean
     */
    function setBottomBorder($pBoolean0)
    {
        $this->m_StyleFlag->setBottomBorder($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setCellShading(boolean)]

      @param pBoolean0  boolean
     */
    function setCellShading($pBoolean0)
    {
        $this->m_StyleFlag->setCellShading($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setDiagonalDownBorder(boolean)]

      @param pBoolean0  boolean
     */
    function setDiagonalDownBorder($pBoolean0)
    {
        $this->m_StyleFlag->setDiagonalDownBorder($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setDiagonalUpBorder(boolean)]

      @param pBoolean0  boolean
     */
    function setDiagonalUpBorder($pBoolean0)
    {
        $this->m_StyleFlag->setDiagonalUpBorder($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setFont(boolean)]

      @param pBoolean0  boolean
     */
    function setFont($pBoolean0)
    {
        $this->m_StyleFlag->setFont($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setFontBold(boolean)]

      @param pBoolean0  boolean
     */
    function setFontBold($pBoolean0)
    {
        $this->m_StyleFlag->setFontBold($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setFontColor(boolean)]

      @param pBoolean0  boolean
     */
    function setFontColor($pBoolean0)
    {
        $this->m_StyleFlag->setFontColor($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setFontItalic(boolean)]

      @param pBoolean0  boolean
     */
    function setFontItalic($pBoolean0)
    {
        $this->m_StyleFlag->setFontItalic($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setFontName(boolean)]

      @param pBoolean0  boolean
     */
    function setFontName($pBoolean0)
    {
        $this->m_StyleFlag->setFontName($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setFontScript(boolean)]

      @param pBoolean0  boolean
     */
    function setFontScript($pBoolean0)
    {
        $this->m_StyleFlag->setFontScript($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setFontSize(boolean)]

      @param pBoolean0  boolean
     */
    function setFontSize($pBoolean0)
    {
        $this->m_StyleFlag->setFontSize($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setFontStrike(boolean)]

      @param pBoolean0  boolean
     */
    function setFontStrike($pBoolean0)
    {
        $this->m_StyleFlag->setFontStrike($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setFontUnderline(boolean)]

      @param pBoolean0  boolean
     */
    function setFontUnderline($pBoolean0)
    {
        $this->m_StyleFlag->setFontUnderline($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setHideFormula(boolean)]

      @param pBoolean0  boolean
     */
    function setHideFormula($pBoolean0)
    {
        $this->m_StyleFlag->setHideFormula($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setHorizontalAlignment(boolean)]

      @param pBoolean0  boolean
     */
    function setHorizontalAlignment($pBoolean0)
    {
        $this->m_StyleFlag->setHorizontalAlignment($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setIndent(boolean)]

      @param pBoolean0  boolean
     */
    function setIndent($pBoolean0)
    {
        $this->m_StyleFlag->setIndent($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setLeftBorder(boolean)]

      @param pBoolean0  boolean
     */
    function setLeftBorder($pBoolean0)
    {
        $this->m_StyleFlag->setLeftBorder($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setLocked(boolean)]

      @param pBoolean0  boolean
     */
    function setLocked($pBoolean0)
    {
        $this->m_StyleFlag->setLocked($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setNumberFormat(boolean)]

      @param pBoolean0  boolean
     */
    function setNumberFormat($pBoolean0)
    {
        $this->m_StyleFlag->setNumberFormat($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setRightBorder(boolean)]

      @param pBoolean0  boolean
     */
    function setRightBorder($pBoolean0)
    {
        $this->m_StyleFlag->setRightBorder($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setRotation(boolean)]

      @param pBoolean0  boolean
     */
    function setRotation($pBoolean0)
    {
        $this->m_StyleFlag->setRotation($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setShrinkToFit(boolean)]

      @param pBoolean0  boolean
     */
    function setShrinkToFit($pBoolean0)
    {
        $this->m_StyleFlag->setShrinkToFit($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setTextDirection(boolean)]

      @param pBoolean0  boolean
     */
    function setTextDirection($pBoolean0)
    {
        $this->m_StyleFlag->setTextDirection($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setTopBorder(boolean)]

      @param pBoolean0  boolean
     */
    function setTopBorder($pBoolean0)
    {
        $this->m_StyleFlag->setTopBorder($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setVerticalAlignment(boolean)]

      @param pBoolean0  boolean
     */
    function setVerticalAlignment($pBoolean0)
    {
        $this->m_StyleFlag->setVerticalAlignment($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.StyleFlag.setWrapText(boolean)]

      @param pBoolean0  boolean
     */
    function setWrapText($pBoolean0)
    {
        $this->m_StyleFlag->setWrapText($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.StyleModifyFlag]
  
 */
class StyleModifyFlag
{
    public $m_StyleModifyFlag;
    
    function __construct($styleModifyFlag)
    {
    	$this->m_StyleModifyFlag = $styleModifyFlag;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.SvgSaveOptions]
  
 */
class SvgSaveOptions extends ImageSaveOptions
{
    public $m_SvgSaveOptions;
    
    function __construct($svgSaveOptions)
    {
    	$this->m_SvgSaveOptions = $svgSaveOptions;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.SvgSaveOptions.getSheetIndex()]

      @return int
     */
    function getSheetIndex()
    {
        return $this->m_SvgSaveOptions->getSheetIndex();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SvgSaveOptions.setSheetIndex(int)]

      @param pInt0  int
     */
    function setSheetIndex($pInt0)
    {
        $this->m_SvgSaveOptions->setSheetIndex($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.SxRng]
  
 */
class SxRng
{
    public $m_SxRng;
    
    function __construct($sxRng)
    {
    	$this->m_SxRng = $sxRng;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.SxRng.getBy()]

      @return corresponding java type is {java.lang.Object}
     */
    function getBy()
    {
        return ClassFactory::_t2($this->m_SxRng->getBy());
    }

    /*
      Wrapper for java version method [com.aspose.cells.SxRng.getEnd()]

      @return corresponding java type is {java.lang.Object}
     */
    function getEnd()
    {
        return ClassFactory::_t2($this->m_SxRng->getEnd());
    }

    /*
      Wrapper for java version method [com.aspose.cells.SxRng.getGroupByTypes()]

      @return boolean[]
     */
    function getGroupByTypes()
    {
        return $this->m_SxRng->getGroupByTypes();
    }

    /*
      Wrapper for java version method [com.aspose.cells.SxRng.getStart()]

      @return corresponding java type is {java.lang.Object}
     */
    function getStart()
    {
        return ClassFactory::_t2($this->m_SxRng->getStart());
    }

    /*
      Wrapper for java version method [com.aspose.cells.SxRng.isAutoEnd()]

      @return corresponding java type is {java.lang.Object}
     */
    function isAutoEnd()
    {
        return ClassFactory::_t2($this->m_SxRng->isAutoEnd());
    }

    /*
      Wrapper for java version method [com.aspose.cells.SxRng.isAutoStart()]

      @return corresponding java type is {java.lang.Object}
     */
    function isAutoStart()
    {
        return ClassFactory::_t2($this->m_SxRng->isAutoStart());
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.TableStyle]
  
 */
class TableStyle
{
    public $m_TableStyle;
    
    function __construct($tableStyle)
    {
    	$this->m_TableStyle = $tableStyle;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.TableStyle.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_TableStyle->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TableStyle.getTableStyleElements()]

      @return com.aspose.cells.TableStyleElementCollection
     */
    function getTableStyleElements()
    {
        return ClassFactory::_t2($this->m_TableStyle->getTableStyleElements());
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.TableStyleCollection]
  
 */
class TableStyleCollection extends CollectionBase
{
    public $m_TableStyleCollection;
    
    function __construct($tableStyleCollection)
    {
    	$this->m_TableStyleCollection = $tableStyleCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.TableStyleCollection.addPivotTableStyle(java.lang.String)]

      @param oString0  String
      @return int
     */
    function addPivotTableStyle($oString0)
    {
        return $this->m_TableStyleCollection->addPivotTableStyle($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TableStyleCollection.addTableStyle(java.lang.String)]

      @param oString0  String
      @return int
     */
    function addTableStyle($oString0)
    {
        return $this->m_TableStyleCollection->addTableStyle($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TableStyleCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.TableStyle
     */
    function getI($pInt0)
    {
        return ClassFactory::_t2($this->m_TableStyleCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.TableStyleCollection.get(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.TableStyle
     */
    function getS($oString0)
    {
        return ClassFactory::_t2($this->m_TableStyleCollection->get($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.TableStyleCollection.getBuiltinTableStyle(int)]

      @param pInt0  int
      @return com.aspose.cells.TableStyle
     */
    function getBuiltinTableStyle($pInt0)
    {
        return ClassFactory::_t2($this->m_TableStyleCollection->getBuiltinTableStyle($pInt0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.TableStyleElement]
  
 */
class TableStyleElement
{
    public $m_TableStyleElement;
    
    function __construct($tableStyleElement)
    {
    	$this->m_TableStyleElement = $tableStyleElement;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.TableStyleElement.getElementStyle()]

      @return com.aspose.cells.Style
     */
    function getElementStyle()
    {
        return ClassFactory::_t2($this->m_TableStyleElement->getElementStyle());
    }

    /*
      Wrapper for java version method [com.aspose.cells.TableStyleElement.getSize()]

      @return int
     */
    function getSize()
    {
        return $this->m_TableStyleElement->getSize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TableStyleElement.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_TableStyleElement->getType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TableStyleElement.setElementStyle(com.aspose.cells.Style)]

      @param oStyle0  com.aspose.cells.Style
     */
    function setElementStyle($oStyle0)
    {
        $this->m_TableStyleElement->setElementStyle(ClassFactory::_t1($oStyle0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.TableStyleElement.setSize(int)]

      @param pInt0  int
     */
    function setSize($pInt0)
    {
        $this->m_TableStyleElement->setSize($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.TableStyleElementCollection]
  
 */
class TableStyleElementCollection extends CollectionBase
{
    public $m_TableStyleElementCollection;
    
    function __construct($tableStyleElementCollection)
    {
    	$this->m_TableStyleElementCollection = $tableStyleElementCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.TableStyleElementCollection.add(int)]

      @param pInt0  int
      @return int
     */
    function add($pInt0)
    {
        return $this->m_TableStyleElementCollection->add($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TableStyleElementCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.TableStyleElement
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_TableStyleElementCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.TableStyleElementCollection.getByTableStyleElementType(int)]

      @param pInt0  int
      @return com.aspose.cells.TableStyleElement
     */
    function getByTableStyleElementType($pInt0)
    {
        return ClassFactory::_t2($this->m_TableStyleElementCollection->getByTableStyleElementType($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.TableStyleElementCollection.getTableStyleElementWithIndex(int)]

      @param pInt0  int
      @return com.aspose.cells.TableStyleElement
     */
    function getTableStyleElementWithIndex($pInt0)
    {
        return ClassFactory::_t2($this->m_TableStyleElementCollection->getTableStyleElementWithIndex($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.TableStyleElementCollection.getTableStyleElementWithType(int)]

      @param pInt0  int
      @return com.aspose.cells.TableStyleElement
     */
    function getTableStyleElementWithType($pInt0)
    {
        return ClassFactory::_t2($this->m_TableStyleElementCollection->getTableStyleElementWithType($pInt0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.TableStyleElementType]
  
 */
class TableStyleElementType
{
    public $m_TableStyleElementType;
    
    function __construct($tableStyleElementType)
    {
    	$this->m_TableStyleElementType = $tableStyleElementType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.TableStyleType]
  
 */
class TableStyleType
{
    public $m_TableStyleType;
    
    function __construct($tableStyleType)
    {
    	$this->m_TableStyleType = $tableStyleType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.TextAlignmentType]
  
 */
class TextAlignmentType
{
    public $m_TextAlignmentType;
    
    function __construct($textAlignmentType)
    {
    	$this->m_TextAlignmentType = $textAlignmentType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.TextBox]
  
 */
class TextBox extends Shape
{
    public $m_TextBox;
    
    function __construct($textBox)
    {
    	$this->m_TextBox = $textBox;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.TextBoxCollection]
  
 */
class TextBoxCollection extends CollectionBase
{
    public $m_TextBoxCollection;
    
    function __construct($textBoxCollection)
    {
    	$this->m_TextBoxCollection = $textBoxCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.TextBoxCollection.add(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @return int
     */
    function add($pInt0, $pInt1, $pInt2, $pInt3)
    {
        return $this->m_TextBoxCollection->add($pInt0, $pInt1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextBoxCollection.clear()]

     */
    function clear()
    {
        $this->m_TextBoxCollection->clear();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextBoxCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.TextBox
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_TextBoxCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextBoxCollection.removeAt(int)]

      @param pInt0  int
     */
    function removeAt($pInt0)
    {
        $this->m_TextBoxCollection->removeAt($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.TextCapsType]
  
 */
class TextCapsType
{
    public $m_TextCapsType;
    
    function __construct($textCapsType)
    {
    	$this->m_TextCapsType = $textCapsType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.TextDirectionType]
  
 */
class TextDirectionType
{
    public $m_TextDirectionType;
    
    function __construct($textDirectionType)
    {
    	$this->m_TextDirectionType = $textDirectionType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.TextEffectFormat]
  
 */
class TextEffectFormat
{
    public $m_TextEffectFormat;
    
    function __construct($textEffectFormat)
    {
    	$this->m_TextEffectFormat = $textEffectFormat;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.TextEffectFormat.getFontBold()]

      @return boolean
     */
    function getFontBold()
    {
        return $this->m_TextEffectFormat->getFontBold();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextEffectFormat.getFontItalic()]

      @return boolean
     */
    function getFontItalic()
    {
        return $this->m_TextEffectFormat->getFontItalic();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextEffectFormat.getFontName()]

      @return String
     */
    function getFontName()
    {
        return $this->m_TextEffectFormat->getFontName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextEffectFormat.getFontSize()]

      @return int
     */
    function getFontSize()
    {
        return $this->m_TextEffectFormat->getFontSize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextEffectFormat.getPresetShape()]

      @return int
     */
    function getPresetShape()
    {
        return $this->m_TextEffectFormat->getPresetShape();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextEffectFormat.getRotatedChars()]

      @return boolean
     */
    function getRotatedChars()
    {
        return $this->m_TextEffectFormat->getRotatedChars();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextEffectFormat.getText()]

      @return String
     */
    function getText()
    {
        return $this->m_TextEffectFormat->getText();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextEffectFormat.setFontBold(boolean)]

      @param pBoolean0  boolean
     */
    function setFontBold($pBoolean0)
    {
        $this->m_TextEffectFormat->setFontBold($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextEffectFormat.setFontItalic(boolean)]

      @param pBoolean0  boolean
     */
    function setFontItalic($pBoolean0)
    {
        $this->m_TextEffectFormat->setFontItalic($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextEffectFormat.setFontName(java.lang.String)]

      @param oString0  String
     */
    function setFontName($oString0)
    {
        $this->m_TextEffectFormat->setFontName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextEffectFormat.setFontSize(int)]

      @param pInt0  int
     */
    function setFontSize($pInt0)
    {
        $this->m_TextEffectFormat->setFontSize($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextEffectFormat.setPresetShape(int)]

      @param pInt0  int
     */
    function setPresetShape($pInt0)
    {
        $this->m_TextEffectFormat->setPresetShape($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextEffectFormat.setRotatedChars(boolean)]

      @param pBoolean0  boolean
     */
    function setRotatedChars($pBoolean0)
    {
        $this->m_TextEffectFormat->setRotatedChars($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextEffectFormat.setText(java.lang.String)]

      @param oString0  String
     */
    function setText($oString0)
    {
        $this->m_TextEffectFormat->setText($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextEffectFormat.setTextEffect(int)]

      @param pInt0  int
     */
    function setTextEffect($pInt0)
    {
        $this->m_TextEffectFormat->setTextEffect($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.TextOrientationType]
  
 */
class TextOrientationType
{
    public $m_TextOrientationType;
    
    function __construct($textOrientationType)
    {
    	$this->m_TextOrientationType = $textOrientationType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.TextOverflowType]
  
 */
class TextOverflowType
{
    public $m_TextOverflowType;
    
    function __construct($textOverflowType)
    {
    	$this->m_TextOverflowType = $textOverflowType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.TextStrikeType]
  
 */
class TextStrikeType
{
    public $m_TextStrikeType;
    
    function __construct($textStrikeType)
    {
    	$this->m_TextStrikeType = $textStrikeType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.TextureFill]
  
 */
class TextureFill
{
    public $m_TextureFill;
    
    function __construct($textureFill)
    {
    	$this->m_TextureFill = $textureFill;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.TextureFill.getImageData()]

      @return byte[]
     */
    function getImageData()
    {
        return $this->m_TextureFill->getImageData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextureFill.getPicFormatOption()]

      @return com.aspose.cells.PicFormatOption
     */
    function getPicFormatOption()
    {
        return ClassFactory::_t2($this->m_TextureFill->getPicFormatOption());
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextureFill.getPictureFormatType()]

      @return int
     */
    function getPictureFormatType()
    {
        return $this->m_TextureFill->getPictureFormatType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextureFill.getScale()]

      @return double
     */
    function getScale()
    {
        return $this->m_TextureFill->getScale();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextureFill.getTilePicOption()]

      @return com.aspose.cells.TilePicOption
     */
    function getTilePicOption()
    {
        return ClassFactory::_t2($this->m_TextureFill->getTilePicOption());
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextureFill.getTransparency()]

      @return double
     */
    function getTransparency()
    {
        return $this->m_TextureFill->getTransparency();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextureFill.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_TextureFill->getType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextureFill.isTiling()]

      @return boolean
     */
    function isTiling()
    {
        return $this->m_TextureFill->isTiling();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextureFill.setImageData(byte[])]

      @param arrP1DByte0  byte[]
     */
    function setImageData($arrP1DByte0)
    {
        $this->m_TextureFill->setImageData($arrP1DByte0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextureFill.setPicFormatOption(com.aspose.cells.PicFormatOption)]

      @param oPicFormatOption0  com.aspose.cells.PicFormatOption
     */
    function setPicFormatOption($oPicFormatOption0)
    {
        $this->m_TextureFill->setPicFormatOption(ClassFactory::_t1($oPicFormatOption0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextureFill.setPictureFormatType(int)]

      @param pInt0  int
     */
    function setPictureFormatType($pInt0)
    {
        $this->m_TextureFill->setPictureFormatType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextureFill.setScale(double)]

      @param pDouble0  double
     */
    function setScale($pDouble0)
    {
        $this->m_TextureFill->setScale($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextureFill.setTilePicOption(com.aspose.cells.TilePicOption)]

      @param oTilePicOption0  com.aspose.cells.TilePicOption
     */
    function setTilePicOption($oTilePicOption0)
    {
        $this->m_TextureFill->setTilePicOption(ClassFactory::_t1($oTilePicOption0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextureFill.setTiling(boolean)]

      @param pBoolean0  boolean
     */
    function setTiling($pBoolean0)
    {
        $this->m_TextureFill->setTiling($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextureFill.setTransparency(double)]

      @param pDouble0  double
     */
    function setTransparency($pDouble0)
    {
        $this->m_TextureFill->setTransparency($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TextureFill.setType(int)]

      @param pInt0  int
     */
    function setType($pInt0)
    {
        $this->m_TextureFill->setType($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.TextureType]
  
 */
class TextureType
{
    public $m_TextureType;
    
    function __construct($textureType)
    {
    	$this->m_TextureType = $textureType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.ThemeColor]
  
 */
class ThemeColor
{
    public $m_ThemeColor;
    
    function __construct($themeColor)
    {
    	$this->m_ThemeColor = $themeColor;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ThemeColor.getColorType()]

      @return int
     */
    function getColorType()
    {
        return $this->m_ThemeColor->getColorType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ThemeColor.getTint()]

      @return double
     */
    function getTint()
    {
        return $this->m_ThemeColor->getTint();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ThemeColor.setColorType(int)]

      @param pInt0  int
     */
    function setColorType($pInt0)
    {
        $this->m_ThemeColor->setColorType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ThemeColor.setTint(double)]

      @param pDouble0  double
     */
    function setTint($pDouble0)
    {
        $this->m_ThemeColor->setTint($pDouble0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ThemeColorType]
  
 */
class ThemeColorType
{
    public $m_ThemeColorType;
    
    function __construct($themeColorType)
    {
    	$this->m_ThemeColorType = $themeColorType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.TickLabelPositionType]
  
 */
class TickLabelPositionType
{
    public $m_TickLabelPositionType;
    
    function __construct($tickLabelPositionType)
    {
    	$this->m_TickLabelPositionType = $tickLabelPositionType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.TickLabels]
  
 */
class TickLabels
{
    public $m_TickLabels;
    
    function __construct($tickLabels)
    {
    	$this->m_TickLabels = $tickLabels;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.TickLabels.getAutoScaleFont()]

      @return boolean
     */
    function getAutoScaleFont()
    {
        return $this->m_TickLabels->getAutoScaleFont();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TickLabels.getBackground()]

      @return int
     */
    function getBackground()
    {
        return $this->m_TickLabels->getBackground();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TickLabels.getBackgroundMode()]

      @return int
     */
    function getBackgroundMode()
    {
        return $this->m_TickLabels->getBackgroundMode();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TickLabels.getFont()]

      @return com.aspose.cells.Font
     */
    function getFont()
    {
        return ClassFactory::_t2($this->m_TickLabels->getFont());
    }

    /*
      Wrapper for java version method [com.aspose.cells.TickLabels.getNumber()]

      @return int
     */
    function getNumber()
    {
        return $this->m_TickLabels->getNumber();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TickLabels.getNumberFormat()]

      @return String
     */
    function getNumberFormat()
    {
        return $this->m_TickLabels->getNumberFormat();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TickLabels.getNumberFormatLinked()]

      @return boolean
     */
    function getNumberFormatLinked()
    {
        return $this->m_TickLabels->getNumberFormatLinked();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TickLabels.getOffset()]

      @return int
     */
    function getOffset()
    {
        return $this->m_TickLabels->getOffset();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TickLabels.getRotation()]

      @return int
     */
    function getRotation()
    {
        return $this->m_TickLabels->getRotation();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TickLabels.getRotationAngle()]

      @return int
     */
    function getRotationAngle()
    {
        return $this->m_TickLabels->getRotationAngle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TickLabels.getTextDirection()]

      @return int
     */
    function getTextDirection()
    {
        return $this->m_TickLabels->getTextDirection();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TickLabels.setAutoScaleFont(boolean)]

      @param pBoolean0  boolean
     */
    function setAutoScaleFont($pBoolean0)
    {
        $this->m_TickLabels->setAutoScaleFont($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TickLabels.setBackground(int)]

      @param pInt0  int
     */
    function setBackground($pInt0)
    {
        $this->m_TickLabels->setBackground($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TickLabels.setBackgroundMode(int)]

      @param pInt0  int
     */
    function setBackgroundMode($pInt0)
    {
        $this->m_TickLabels->setBackgroundMode($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TickLabels.setNumber(int)]

      @param pInt0  int
     */
    function setNumber($pInt0)
    {
        $this->m_TickLabels->setNumber($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TickLabels.setNumberFormat(java.lang.String)]

      @param oString0  String
     */
    function setNumberFormat($oString0)
    {
        $this->m_TickLabels->setNumberFormat($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TickLabels.setNumberFormatLinked(boolean)]

      @param pBoolean0  boolean
     */
    function setNumberFormatLinked($pBoolean0)
    {
        $this->m_TickLabels->setNumberFormatLinked($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TickLabels.setOffset(int)]

      @param pInt0  int
     */
    function setOffset($pInt0)
    {
        $this->m_TickLabels->setOffset($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TickLabels.setRotation(int)]

      @param pInt0  int
     */
    function setRotation($pInt0)
    {
        $this->m_TickLabels->setRotation($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TickLabels.setRotationAngle(int)]

      @param pInt0  int
     */
    function setRotationAngle($pInt0)
    {
        $this->m_TickLabels->setRotationAngle($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TickLabels.setTextDirection(int)]

      @param pInt0  int
     */
    function setTextDirection($pInt0)
    {
        $this->m_TickLabels->setTextDirection($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.TickMarkType]
  
 */
class TickMarkType
{
    public $m_TickMarkType;
    
    function __construct($tickMarkType)
    {
    	$this->m_TickMarkType = $tickMarkType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.TiffCompression]
  
 */
class TiffCompression
{
    public $m_TiffCompression;
    
    function __construct($tiffCompression)
    {
    	$this->m_TiffCompression = $tiffCompression;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.TiffPhotometricInterpretation]
  
 */
class TiffPhotometricInterpretation
{
    public $m_TiffPhotometricInterpretation;
    
    function __construct($tiffPhotometricInterpretation)
    {
    	$this->m_TiffPhotometricInterpretation = $tiffPhotometricInterpretation;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.TilePicOption]
  
 */
class TilePicOption
{
    public $m_TilePicOption;
    
    function __construct($tilePicOption)
    {
    	$this->m_TilePicOption = $tilePicOption;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.TilePicOption.getAlignmentType()]

      @return int
     */
    function getAlignmentType()
    {
        return $this->m_TilePicOption->getAlignmentType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TilePicOption.getMirrorType()]

      @return int
     */
    function getMirrorType()
    {
        return $this->m_TilePicOption->getMirrorType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TilePicOption.getOffsetX()]

      @return double
     */
    function getOffsetX()
    {
        return $this->m_TilePicOption->getOffsetX();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TilePicOption.getOffsetY()]

      @return double
     */
    function getOffsetY()
    {
        return $this->m_TilePicOption->getOffsetY();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TilePicOption.getScaleX()]

      @return double
     */
    function getScaleX()
    {
        return $this->m_TilePicOption->getScaleX();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TilePicOption.getScaleY()]

      @return double
     */
    function getScaleY()
    {
        return $this->m_TilePicOption->getScaleY();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TilePicOption.setAlignmentType(int)]

      @param pInt0  int
     */
    function setAlignmentType($pInt0)
    {
        $this->m_TilePicOption->setAlignmentType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TilePicOption.setMirrorType(int)]

      @param pInt0  int
     */
    function setMirrorType($pInt0)
    {
        $this->m_TilePicOption->setMirrorType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TilePicOption.setOffsetX(double)]

      @param pDouble0  double
     */
    function setOffsetX($pDouble0)
    {
        $this->m_TilePicOption->setOffsetX($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TilePicOption.setOffsetY(double)]

      @param pDouble0  double
     */
    function setOffsetY($pDouble0)
    {
        $this->m_TilePicOption->setOffsetY($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TilePicOption.setScaleX(double)]

      @param pDouble0  double
     */
    function setScaleX($pDouble0)
    {
        $this->m_TilePicOption->setScaleX($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TilePicOption.setScaleY(double)]

      @param pDouble0  double
     */
    function setScaleY($pDouble0)
    {
        $this->m_TilePicOption->setScaleY($pDouble0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.TimePeriodType]
  
 */
class TimePeriodType
{
    public $m_TimePeriodType;
    
    function __construct($timePeriodType)
    {
    	$this->m_TimePeriodType = $timePeriodType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.TimeUnit]
  
 */
class TimeUnit
{
    public $m_TimeUnit;
    
    function __construct($timeUnit)
    {
    	$this->m_TimeUnit = $timeUnit;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Title]
  
 */
class Title extends ChartFrame
{
    public $m_Title;
    
    function __construct($title)
    {
    	$this->m_Title = $title;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Title.characters(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return com.aspose.cells.FontSetting
     */
    function characters($pInt0, $pInt1)
    {
        return ClassFactory::_t2($this->m_Title->characters($pInt0, $pInt1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.getCharacters()]

      @return com.aspose.cells.FontSetting[]
     */
    function getCharacters()
    {
        return ClassFactory::_t2($this->m_Title->getCharacters());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.getLinkedSource()]

      @return String
     */
    function getLinkedSource()
    {
        return $this->m_Title->getLinkedSource();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.getOverLay()]

      @return boolean
     */
    function getOverLay()
    {
        return $this->m_Title->getOverLay();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.getRotation()]

      @return int
     */
    function getRotation()
    {
        return $this->m_Title->getRotation();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.getRotationAngle()]

      @return int
     */
    function getRotationAngle()
    {
        return $this->m_Title->getRotationAngle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.getText()]

      @return String
     */
    function getText()
    {
        return $this->m_Title->getText();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.getTextDirection()]

      @return int
     */
    function getTextDirection()
    {
        return $this->m_Title->getTextDirection();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.getTextHorizontalAlignment()]

      @return int
     */
    function getTextHorizontalAlignment()
    {
        return $this->m_Title->getTextHorizontalAlignment();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.getTextVerticalAlignment()]

      @return int
     */
    function getTextVerticalAlignment()
    {
        return $this->m_Title->getTextVerticalAlignment();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.getX()]

      @return int
     */
    function getX()
    {
        return $this->m_Title->getX();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.getY()]

      @return int
     */
    function getY()
    {
        return $this->m_Title->getY();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.isAutoText()]

      @return boolean
     */
    function isAutoText()
    {
        return $this->m_Title->isAutoText();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.isVisible()]

      @return boolean
     */
    function isVisible()
    {
        return $this->m_Title->isVisible();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.removeCharacters()]

     */
    function removeCharacters()
    {
        $this->m_Title->removeCharacters();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.setAutoText(boolean)]

      @param pBoolean0  boolean
     */
    function setAutoText($pBoolean0)
    {
        $this->m_Title->setAutoText($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.setLinkedSource(java.lang.String)]

      @param oString0  String
     */
    function setLinkedSource($oString0)
    {
        $this->m_Title->setLinkedSource($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.setOverLay(boolean)]

      @param pBoolean0  boolean
     */
    function setOverLay($pBoolean0)
    {
        $this->m_Title->setOverLay($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.setRotation(int)]

      @param pInt0  int
     */
    function setRotation($pInt0)
    {
        $this->m_Title->setRotation($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.setRotationAngle(int)]

      @param pInt0  int
     */
    function setRotationAngle($pInt0)
    {
        $this->m_Title->setRotationAngle($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.setText(java.lang.String)]

      @param oString0  String
     */
    function setText($oString0)
    {
        $this->m_Title->setText($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.setTextDirection(int)]

      @param pInt0  int
     */
    function setTextDirection($pInt0)
    {
        $this->m_Title->setTextDirection($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.setTextHorizontalAlignment(int)]

      @param pInt0  int
     */
    function setTextHorizontalAlignment($pInt0)
    {
        $this->m_Title->setTextHorizontalAlignment($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.setTextVerticalAlignment(int)]

      @param pInt0  int
     */
    function setTextVerticalAlignment($pInt0)
    {
        $this->m_Title->setTextVerticalAlignment($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.setVisible(boolean)]

      @param pBoolean0  boolean
     */
    function setVisible($pBoolean0)
    {
        $this->m_Title->setVisible($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.setX(int)]

      @param pInt0  int
     */
    function setX($pInt0)
    {
        $this->m_Title->setX($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Title.setY(int)]

      @param pInt0  int
     */
    function setY($pInt0)
    {
        $this->m_Title->setY($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.Top10]
  
 */
class Top10
{
    public $m_Top10;
    
    function __construct($top10)
    {
    	$this->m_Top10 = $top10;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Top10.getRank()]

      @return int
     */
    function getRank()
    {
        return $this->m_Top10->getRank();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Top10.isBottom()]

      @return boolean
     */
    function isBottom()
    {
        return $this->m_Top10->isBottom();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Top10.isPercent()]

      @return boolean
     */
    function isPercent()
    {
        return $this->m_Top10->isPercent();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Top10.setBottom(boolean)]

      @param pBoolean0  boolean
     */
    function setBottom($pBoolean0)
    {
        $this->m_Top10->setBottom($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Top10.setPercent(boolean)]

      @param pBoolean0  boolean
     */
    function setPercent($pBoolean0)
    {
        $this->m_Top10->setPercent($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Top10.setRank(int)]

      @param pInt0  int
     */
    function setRank($pInt0)
    {
        $this->m_Top10->setRank($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.Top10Filter]
  
 */
class Top10Filter
{
    public $m_Top10Filter;
    
    function __construct($top10Filter)
    {
    	$this->m_Top10Filter = $top10Filter;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Top10Filter.getCriteria()]

      @return corresponding java type is {java.lang.Object}
     */
    function getCriteria()
    {
        return ClassFactory::_t2($this->m_Top10Filter->getCriteria());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Top10Filter.getItems()]

      @return int
     */
    function getItems()
    {
        return $this->m_Top10Filter->getItems();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Top10Filter.isPercent()]

      @return boolean
     */
    function isPercent()
    {
        return $this->m_Top10Filter->isPercent();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Top10Filter.isTop()]

      @return boolean
     */
    function isTop()
    {
        return $this->m_Top10Filter->isTop();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Top10Filter.setCriteria(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
     */
    function setCriteria($oObject0)
    {
        $this->m_Top10Filter->setCriteria(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Top10Filter.setItems(int)]

      @param pInt0  int
     */
    function setItems($pInt0)
    {
        $this->m_Top10Filter->setItems($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Top10Filter.setPercent(boolean)]

      @param pBoolean0  boolean
     */
    function setPercent($pBoolean0)
    {
        $this->m_Top10Filter->setPercent($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Top10Filter.setTop(boolean)]

      @param pBoolean0  boolean
     */
    function setTop($pBoolean0)
    {
        $this->m_Top10Filter->setTop($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.TotalsCalculation]
  
 */
class TotalsCalculation
{
    public $m_TotalsCalculation;
    
    function __construct($totalsCalculation)
    {
    	$this->m_TotalsCalculation = $totalsCalculation;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Trendline]
  
 */
class Trendline extends Line
{
    public $m_Trendline;
    
    function __construct($trendline)
    {
    	$this->m_Trendline = $trendline;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Trendline.getBackward()]

      @return double
     */
    function getBackward()
    {
        return $this->m_Trendline->getBackward();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Trendline.getDataLabels()]

      @return com.aspose.cells.DataLabels
     */
    function getDataLabels()
    {
        return ClassFactory::_t2($this->m_Trendline->getDataLabels());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Trendline.getDisplayEquation()]

      @return boolean
     */
    function getDisplayEquation()
    {
        return $this->m_Trendline->getDisplayEquation();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Trendline.getDisplayRSquared()]

      @return boolean
     */
    function getDisplayRSquared()
    {
        return $this->m_Trendline->getDisplayRSquared();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Trendline.getForward()]

      @return double
     */
    function getForward()
    {
        return $this->m_Trendline->getForward();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Trendline.getIntercept()]

      @return double
     */
    function getIntercept()
    {
        return $this->m_Trendline->getIntercept();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Trendline.getLegendEntry()]

      @return com.aspose.cells.LegendEntry
     */
    function getLegendEntry()
    {
        return ClassFactory::_t2($this->m_Trendline->getLegendEntry());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Trendline.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_Trendline->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Trendline.getOrder()]

      @return int
     */
    function getOrder()
    {
        return $this->m_Trendline->getOrder();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Trendline.getPeriod()]

      @return int
     */
    function getPeriod()
    {
        return $this->m_Trendline->getPeriod();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Trendline.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_Trendline->getType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Trendline.isInterceptAuto()]

      @return boolean
     */
    function isInterceptAuto()
    {
        return $this->m_Trendline->isInterceptAuto();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Trendline.isNameAuto()]

      @return boolean
     */
    function isNameAuto()
    {
        return $this->m_Trendline->isNameAuto();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Trendline.setBackward(double)]

      @param pDouble0  double
     */
    function setBackward($pDouble0)
    {
        $this->m_Trendline->setBackward($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Trendline.setDisplayEquation(boolean)]

      @param pBoolean0  boolean
     */
    function setDisplayEquation($pBoolean0)
    {
        $this->m_Trendline->setDisplayEquation($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Trendline.setDisplayRSquared(boolean)]

      @param pBoolean0  boolean
     */
    function setDisplayRSquared($pBoolean0)
    {
        $this->m_Trendline->setDisplayRSquared($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Trendline.setForward(double)]

      @param pDouble0  double
     */
    function setForward($pDouble0)
    {
        $this->m_Trendline->setForward($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Trendline.setIntercept(double)]

      @param pDouble0  double
     */
    function setIntercept($pDouble0)
    {
        $this->m_Trendline->setIntercept($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Trendline.setInterceptAuto(boolean)]

      @param pBoolean0  boolean
     */
    function setInterceptAuto($pBoolean0)
    {
        $this->m_Trendline->setInterceptAuto($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Trendline.setName(java.lang.String)]

      @param oString0  String
     */
    function setName($oString0)
    {
        $this->m_Trendline->setName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Trendline.setNameAuto(boolean)]

      @param pBoolean0  boolean
     */
    function setNameAuto($pBoolean0)
    {
        $this->m_Trendline->setNameAuto($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Trendline.setOrder(int)]

      @param pInt0  int
     */
    function setOrder($pInt0)
    {
        $this->m_Trendline->setOrder($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Trendline.setPeriod(int)]

      @param pInt0  int
     */
    function setPeriod($pInt0)
    {
        $this->m_Trendline->setPeriod($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.TrendlineCollection]
  
 */
class TrendlineCollection extends CollectionBase
{
    public $m_TrendlineCollection;
    
    function __construct($trendlineCollection)
    {
    	$this->m_TrendlineCollection = $trendlineCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.TrendlineCollection.add(int)]

      @param pInt0  int
      @return int
     */
    function addI($pInt0)
    {
        return $this->m_TrendlineCollection->add($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TrendlineCollection.add(int, java.lang.String)]

      @param pInt0  int
      @param oString1  String
      @return int
     */
    function addIS($pInt0, $oString1)
    {
        return $this->m_TrendlineCollection->add($pInt0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TrendlineCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.Trendline
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_TrendlineCollection->get($pInt0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.TrendlineType]
  
 */
class TrendlineType
{
    public $m_TrendlineType;
    
    function __construct($trendlineType)
    {
    	$this->m_TrendlineType = $trendlineType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.TxtLoadOptions]
  
 */
class TxtLoadOptions extends LoadOptions
{
    public $m_TxtLoadOptions;
    
    function __construct($txtLoadOptions)
    {
    	$this->m_TxtLoadOptions = $txtLoadOptions;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.TxtLoadOptions.getConvertDateTimeData()]

      @return boolean
     */
    function getConvertDateTimeData()
    {
        return $this->m_TxtLoadOptions->getConvertDateTimeData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TxtLoadOptions.getEncoding()]

      @return com.aspose.cells.Encoding
     */
    function getEncoding()
    {
        return ClassFactory::_t2($this->m_TxtLoadOptions->getEncoding());
    }

    /*
      Wrapper for java version method [com.aspose.cells.TxtLoadOptions.getPreferredParsers()]

      @return com.aspose.cells.ICustomParser[]
     */
    function getPreferredParsers()
    {
        return ClassFactory::_t2($this->m_TxtLoadOptions->getPreferredParsers());
    }

    /*
      Wrapper for java version method [com.aspose.cells.TxtLoadOptions.getSeparator()]

      @return char
     */
    function getSeparator()
    {
        return $this->m_TxtLoadOptions->getSeparator();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TxtLoadOptions.getSeparatorString()]

      @return String
     */
    function getSeparatorString()
    {
        return $this->m_TxtLoadOptions->getSeparatorString();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TxtLoadOptions.isMultiEncoded()]

      @return boolean
     */
    function isMultiEncoded()
    {
        return $this->m_TxtLoadOptions->isMultiEncoded();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TxtLoadOptions.setConvertDateTimeData(boolean)]

      @param pBoolean0  boolean
     */
    function setConvertDateTimeData($pBoolean0)
    {
        $this->m_TxtLoadOptions->setConvertDateTimeData($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TxtLoadOptions.setEncoding(com.aspose.cells.Encoding)]

      @param oEncoding0  com.aspose.cells.Encoding
     */
    function setEncoding($oEncoding0)
    {
        $this->m_TxtLoadOptions->setEncoding(ClassFactory::_t1($oEncoding0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.TxtLoadOptions.setMultiEncoded(boolean)]

      @param pBoolean0  boolean
     */
    function setMultiEncoded($pBoolean0)
    {
        $this->m_TxtLoadOptions->setMultiEncoded($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TxtLoadOptions.setPreferredParsers(com.aspose.cells.ICustomParser[])]

      @param arrO1DICustomParser0  com.aspose.cells.ICustomParser[]
     */
    function setPreferredParsers($arrO1DICustomParser0)
    {
        $this->m_TxtLoadOptions->setPreferredParsers(ClassFactory::_t1($arrO1DICustomParser0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.TxtLoadOptions.setSeparator(char)]

      @param pChar0  char
     */
    function setSeparator($pChar0)
    {
        $this->m_TxtLoadOptions->setSeparator($pChar0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TxtLoadOptions.setSeparatorString(java.lang.String)]

      @param oString0  String
     */
    function setSeparatorString($oString0)
    {
        $this->m_TxtLoadOptions->setSeparatorString($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.TxtSaveOptions]
  
 */
class TxtSaveOptions extends SaveOptions
{
    public $m_TxtSaveOptions;
    
    function __construct($txtSaveOptions)
    {
    	$this->m_TxtSaveOptions = $txtSaveOptions;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.TxtSaveOptions.getAlwaysQuoted()]

      @return boolean
     */
    function getAlwaysQuoted()
    {
        return $this->m_TxtSaveOptions->getAlwaysQuoted();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TxtSaveOptions.getEncoding()]

      @return com.aspose.cells.Encoding
     */
    function getEncoding()
    {
        return ClassFactory::_t2($this->m_TxtSaveOptions->getEncoding());
    }

    /*
      Wrapper for java version method [com.aspose.cells.TxtSaveOptions.getQuoteType()]

      @return int
     */
    function getQuoteType()
    {
        return $this->m_TxtSaveOptions->getQuoteType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TxtSaveOptions.getSeparator()]

      @return char
     */
    function getSeparator()
    {
        return $this->m_TxtSaveOptions->getSeparator();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TxtSaveOptions.getSeparatorString()]

      @return String
     */
    function getSeparatorString()
    {
        return $this->m_TxtSaveOptions->getSeparatorString();
    }

    /*
      Wrapper for java version method [com.aspose.cells.TxtSaveOptions.setAlwaysQuoted(boolean)]

      @param pBoolean0  boolean
     */
    function setAlwaysQuoted($pBoolean0)
    {
        $this->m_TxtSaveOptions->setAlwaysQuoted($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TxtSaveOptions.setEncoding(com.aspose.cells.Encoding)]

      @param oEncoding0  com.aspose.cells.Encoding
     */
    function setEncoding($oEncoding0)
    {
        $this->m_TxtSaveOptions->setEncoding(ClassFactory::_t1($oEncoding0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.TxtSaveOptions.setQuoteType(int)]

      @param pInt0  int
     */
    function setQuoteType($pInt0)
    {
        $this->m_TxtSaveOptions->setQuoteType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TxtSaveOptions.setSeparator(char)]

      @param pChar0  char
     */
    function setSeparator($pChar0)
    {
        $this->m_TxtSaveOptions->setSeparator($pChar0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.TxtSaveOptions.setSeparatorString(java.lang.String)]

      @param oString0  String
     */
    function setSeparatorString($oString0)
    {
        $this->m_TxtSaveOptions->setSeparatorString($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.TxtValueQuoteType]
  
 */
class TxtValueQuoteType
{
    public $m_TxtValueQuoteType;
    
    function __construct($txtValueQuoteType)
    {
    	$this->m_TxtValueQuoteType = $txtValueQuoteType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Validation]
  
 */
class Validation
{
    public $m_Validation;
    
    function __construct($validation)
    {
    	$this->m_Validation = $validation;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Validation.addArea(com.aspose.cells.CellArea)]

      @param oCellArea0  com.aspose.cells.CellArea
     */
    function addArea($oCellArea0)
    {
        $this->m_Validation->addArea(ClassFactory::_t1($oCellArea0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.getAlertStyle()]

      @return int
     */
    function getAlertStyle()
    {
        return $this->m_Validation->getAlertStyle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.getAreaList()]

      @return array, corresponding java type is {java.util.ArrayList}
     */
    function getAreaList()
    {
        return ClassFactory::_t2($this->m_Validation->getAreaList());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.getErrorMessage()]

      @return String
     */
    function getErrorMessage()
    {
        return $this->m_Validation->getErrorMessage();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.getErrorTitle()]

      @return String
     */
    function getErrorTitle()
    {
        return $this->m_Validation->getErrorTitle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.getFormula1()]

      @return String
     */
    function getFormula1()
    {
        return $this->m_Validation->getFormula1();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.getFormula2()]

      @return String
     */
    function getFormula2()
    {
        return $this->m_Validation->getFormula2();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.getIgnoreBlank()]

      @return boolean
     */
    function getIgnoreBlank()
    {
        return $this->m_Validation->getIgnoreBlank();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.getInCellDropDown()]

      @return boolean
     */
    function getInCellDropDown()
    {
        return $this->m_Validation->getInCellDropDown();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.getInputMessage()]

      @return String
     */
    function getInputMessage()
    {
        return $this->m_Validation->getInputMessage();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.getInputTitle()]

      @return String
     */
    function getInputTitle()
    {
        return $this->m_Validation->getInputTitle();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.getOperator()]

      @return int
     */
    function getOperator()
    {
        return $this->m_Validation->getOperator();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.getShowError()]

      @return boolean
     */
    function getShowError()
    {
        return $this->m_Validation->getShowError();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.getShowInput()]

      @return boolean
     */
    function getShowInput()
    {
        return $this->m_Validation->getShowInput();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_Validation->getType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.getValue1()]

      @return corresponding java type is {java.lang.Object}
     */
    function getValue1()
    {
        return ClassFactory::_t2($this->m_Validation->getValue1());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.getValue2()]

      @return corresponding java type is {java.lang.Object}
     */
    function getValue2()
    {
        return ClassFactory::_t2($this->m_Validation->getValue2());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.removeACell(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function removeACell($pInt0, $pInt1)
    {
        $this->m_Validation->removeACell($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.removeArea(com.aspose.cells.CellArea)]

      @param oCellArea0  com.aspose.cells.CellArea
     */
    function removeArea($oCellArea0)
    {
        $this->m_Validation->removeArea(ClassFactory::_t1($oCellArea0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.setAlertStyle(int)]

      @param pInt0  int
     */
    function setAlertStyle($pInt0)
    {
        $this->m_Validation->setAlertStyle($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.setErrorMessage(java.lang.String)]

      @param oString0  String
     */
    function setErrorMessage($oString0)
    {
        $this->m_Validation->setErrorMessage($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.setErrorTitle(java.lang.String)]

      @param oString0  String
     */
    function setErrorTitle($oString0)
    {
        $this->m_Validation->setErrorTitle($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.setFormula1(java.lang.String)]

      @param oString0  String
     */
    function setFormula1($oString0)
    {
        $this->m_Validation->setFormula1($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.setFormula2(java.lang.String)]

      @param oString0  String
     */
    function setFormula2($oString0)
    {
        $this->m_Validation->setFormula2($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.setIgnoreBlank(boolean)]

      @param pBoolean0  boolean
     */
    function setIgnoreBlank($pBoolean0)
    {
        $this->m_Validation->setIgnoreBlank($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.setInCellDropDown(boolean)]

      @param pBoolean0  boolean
     */
    function setInCellDropDown($pBoolean0)
    {
        $this->m_Validation->setInCellDropDown($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.setInputMessage(java.lang.String)]

      @param oString0  String
     */
    function setInputMessage($oString0)
    {
        $this->m_Validation->setInputMessage($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.setInputTitle(java.lang.String)]

      @param oString0  String
     */
    function setInputTitle($oString0)
    {
        $this->m_Validation->setInputTitle($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.setOperator(int)]

      @param pInt0  int
     */
    function setOperator($pInt0)
    {
        $this->m_Validation->setOperator($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.setShowError(boolean)]

      @param pBoolean0  boolean
     */
    function setShowError($pBoolean0)
    {
        $this->m_Validation->setShowError($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.setShowInput(boolean)]

      @param pBoolean0  boolean
     */
    function setShowInput($pBoolean0)
    {
        $this->m_Validation->setShowInput($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.setType(int)]

      @param pInt0  int
     */
    function setType($pInt0)
    {
        $this->m_Validation->setType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.setValue1(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
     */
    function setValue1($oObject0)
    {
        $this->m_Validation->setValue1(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Validation.setValue2(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
     */
    function setValue2($oObject0)
    {
        $this->m_Validation->setValue2(ClassFactory::_t1($oObject0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ValidationAlertType]
  
 */
class ValidationAlertType
{
    public $m_ValidationAlertType;
    
    function __construct($validationAlertType)
    {
    	$this->m_ValidationAlertType = $validationAlertType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.ValidationCollection]
  
 */
class ValidationCollection extends CollectionBase
{
    public $m_ValidationCollection;
    
    function __construct($validationCollection)
    {
    	$this->m_ValidationCollection = $validationCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.ValidationCollection.add()]

      @return int
     */
    function add()
    {
        return $this->m_ValidationCollection->add();
    }

    /*
      Wrapper for java version method [com.aspose.cells.ValidationCollection.add(com.aspose.cells.Validation)]

      @param oValidation0  com.aspose.cells.Validation
      @return int
     */
    function addV($oValidation0)
    {
        return $this->m_ValidationCollection->add(ClassFactory::_t1($oValidation0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ValidationCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.Validation
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_ValidationCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ValidationCollection.getValidationInCell(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return com.aspose.cells.Validation
     */
    function getValidationInCell($pInt0, $pInt1)
    {
        return ClassFactory::_t2($this->m_ValidationCollection->getValidationInCell($pInt0, $pInt1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.ValidationCollection.removeACell(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function removeACell($pInt0, $pInt1)
    {
        $this->m_ValidationCollection->removeACell($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.ValidationCollection.removeArea(com.aspose.cells.CellArea)]

      @param oCellArea0  com.aspose.cells.CellArea
     */
    function removeArea($oCellArea0)
    {
        $this->m_ValidationCollection->removeArea(ClassFactory::_t1($oCellArea0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ValidationType]
  
 */
class ValidationType
{
    public $m_ValidationType;
    
    function __construct($validationType)
    {
    	$this->m_ValidationType = $validationType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.VerticalPageBreak]
  
 */
class VerticalPageBreak
{
    public $m_VerticalPageBreak;
    
    function __construct($verticalPageBreak)
    {
    	$this->m_VerticalPageBreak = $verticalPageBreak;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.VerticalPageBreak.getColumn()]

      @return int
     */
    function getColumn()
    {
        return $this->m_VerticalPageBreak->getColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.VerticalPageBreak.getEndRow()]

      @return int
     */
    function getEndRow()
    {
        return $this->m_VerticalPageBreak->getEndRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.VerticalPageBreak.getStartRow()]

      @return int
     */
    function getStartRow()
    {
        return $this->m_VerticalPageBreak->getStartRow();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.VerticalPageBreakCollection]
  
 */
class VerticalPageBreakCollection extends CollectionBase
{
    public $m_VerticalPageBreakCollection;
    
    function __construct($verticalPageBreakCollection)
    {
    	$this->m_VerticalPageBreakCollection = $verticalPageBreakCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.VerticalPageBreakCollection.add(int)]

      @param pInt0  int
      @return int
     */
    function addI($pInt0)
    {
        return $this->m_VerticalPageBreakCollection->add($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.VerticalPageBreakCollection.add(java.lang.String)]

      @param oString0  String
      @return int
     */
    function addS($oString0)
    {
        return $this->m_VerticalPageBreakCollection->add($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.VerticalPageBreakCollection.add(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return int
     */
    function addII($pInt0, $pInt1)
    {
        return $this->m_VerticalPageBreakCollection->add($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.VerticalPageBreakCollection.add(int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @return int
     */
    function addIII($pInt0, $pInt1, $pInt2)
    {
        return $this->m_VerticalPageBreakCollection->add($pInt0, $pInt1, $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.VerticalPageBreakCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.VerticalPageBreak
     */
    function getI($pInt0)
    {
        return ClassFactory::_t2($this->m_VerticalPageBreakCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.VerticalPageBreakCollection.get(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.VerticalPageBreak
     */
    function getS($oString0)
    {
        return ClassFactory::_t2($this->m_VerticalPageBreakCollection->get($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.VerticalPageBreakCollection.removeAt(int)]

      @param pInt0  int
     */
    function removeAt($pInt0)
    {
        $this->m_VerticalPageBreakCollection->removeAt($pInt0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.ViewType]
  
 */
class ViewType
{
    public $m_ViewType;
    
    function __construct($viewType)
    {
    	$this->m_ViewType = $viewType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.VisibilityType]
  
 */
class VisibilityType
{
    public $m_VisibilityType;
    
    function __construct($visibilityType)
    {
    	$this->m_VisibilityType = $visibilityType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Walls]
  
 */
class Walls extends Floor
{
    public $m_Walls;
    
    function __construct($walls)
    {
    	$this->m_Walls = $walls;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Walls.getCenterX()]

      @return int
     */
    function getCenterX()
    {
        return $this->m_Walls->getCenterX();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Walls.getCenterXPx()]

      @return int
     */
    function getCenterXPx()
    {
        return $this->m_Walls->getCenterXPx();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Walls.getCenterY()]

      @return int
     */
    function getCenterY()
    {
        return $this->m_Walls->getCenterY();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Walls.getCenterYPx()]

      @return int
     */
    function getCenterYPx()
    {
        return $this->m_Walls->getCenterYPx();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Walls.getCubePointCount()]

      @return int
     */
    function getCubePointCount()
    {
        return $this->m_Walls->getCubePointCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Walls.getCubePointXPx(int)]

      @param pInt0  int
      @return float
     */
    function getCubePointXPx($pInt0)
    {
        return $this->m_Walls->getCubePointXPx($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Walls.getCubePointYPx(int)]

      @param pInt0  int
      @return float
     */
    function getCubePointYPx($pInt0)
    {
        return $this->m_Walls->getCubePointYPx($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Walls.getDepth()]

      @return int
     */
    function getDepth()
    {
        return $this->m_Walls->getDepth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Walls.getDepthPx()]

      @return int
     */
    function getDepthPx()
    {
        return $this->m_Walls->getDepthPx();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Walls.getHeight()]

      @return int
     */
    function getHeight()
    {
        return $this->m_Walls->getHeight();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Walls.getHeightPx()]

      @return int
     */
    function getHeightPx()
    {
        return $this->m_Walls->getHeightPx();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Walls.getWidth()]

      @return int
     */
    function getWidth()
    {
        return $this->m_Walls->getWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Walls.getWidthPx()]

      @return int
     */
    function getWidthPx()
    {
        return $this->m_Walls->getWidthPx();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.WarningInfo]
  
 */
class WarningInfo
{
    public $m_WarningInfo;
    
    function __construct($warningInfo)
    {
    	$this->m_WarningInfo = $warningInfo;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.WarningInfo.getDescription()]

      @return String
     */
    function getDescription()
    {
        return $this->m_WarningInfo->getDescription();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WarningInfo.getWarningType()]

      @return int
     */
    function getWarningType()
    {
        return $this->m_WarningInfo->getWarningType();
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.WarningType]
  
 */
class WarningType
{
    public $m_WarningType;
    
    function __construct($warningType)
    {
    	$this->m_WarningType = $warningType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.WeightType]
  
 */
class WeightType
{
    public $m_WeightType;
    
    function __construct($weightType)
    {
    	$this->m_WeightType = $weightType;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.Workbook]
  
 */
class Workbook
{
    public $m_Workbook;
    
    function __construct($workbook)
    {
    	$this->m_Workbook = $workbook;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Workbook.acceptAllRevisions()]

     */
    function acceptAllRevisions()
    {
        $this->m_Workbook->acceptAllRevisions();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.calculateFormula()]

     */
    function calculateFormula()
    {
        $this->m_Workbook->calculateFormula();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.calculateFormula(boolean)]

      @param pBoolean0  boolean
     */
    function calculateFormulaB($pBoolean0)
    {
        $this->m_Workbook->calculateFormula($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.calculateFormula(boolean, com.aspose.cells.ICustomFunction)]

      @param pBoolean0  boolean
      @param oICustomFunction1  com.aspose.cells.ICustomFunction
     */
    function calculateFormulaBI($pBoolean0, $oICustomFunction1)
    {
        $this->m_Workbook->calculateFormula($pBoolean0, ClassFactory::_t1($oICustomFunction1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.changePalette(com.aspose.cells.Color, int)]

      @param oColor0  com.aspose.cells.Color
      @param pInt1  int
     */
    function changePalette($oColor0, $pInt1)
    {
        $this->m_Workbook->changePalette(ClassFactory::_t1($oColor0), $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.combine(com.aspose.cells.Workbook)]

      @param oWorkbook0  com.aspose.cells.Workbook
     */
    function combine($oWorkbook0)
    {
        $this->m_Workbook->combine(ClassFactory::_t1($oWorkbook0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.copy(com.aspose.cells.Workbook)]

      @param oWorkbook0  com.aspose.cells.Workbook
     */
    function copy($oWorkbook0)
    {
        $this->m_Workbook->copy(ClassFactory::_t1($oWorkbook0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.copyTheme(com.aspose.cells.Workbook)]

      @param oWorkbook0  com.aspose.cells.Workbook
     */
    function copyTheme($oWorkbook0)
    {
        $this->m_Workbook->copyTheme(ClassFactory::_t1($oWorkbook0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.createCellsColor()]

      @return com.aspose.cells.CellsColor
     */
    function createCellsColor()
    {
        return ClassFactory::_t2($this->m_Workbook->createCellsColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.createStyle()]

      @return com.aspose.cells.Style
     */
    function createStyle()
    {
        return ClassFactory::_t2($this->m_Workbook->createStyle());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.customTheme(java.lang.String, com.aspose.cells.Color[])]

      @param oString0  String
      @param arrO1DColor1  com.aspose.cells.Color[]
     */
    function customTheme($oString0, $arrO1DColor1)
    {
        $this->m_Workbook->customTheme($oString0, ClassFactory::_t1($arrO1DColor1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.decrypt(java.lang.String)]

      @param oString0  String
     */
    function decrypt($oString0)
    {
        $this->m_Workbook->decrypt($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.getBuiltInDocumentProperties()]

      @return com.aspose.cells.BuiltInDocumentPropertyCollection
     */
    function getBuiltInDocumentProperties()
    {
        return ClassFactory::_t2($this->m_Workbook->getBuiltInDocumentProperties());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.getColors()]

      @return com.aspose.cells.Color[]
     */
    function getColors()
    {
        return ClassFactory::_t2($this->m_Workbook->getColors());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.getContentTypeProperties()]

      @return com.aspose.cells.ContentTypePropertyCollection
     */
    function getContentTypeProperties()
    {
        return ClassFactory::_t2($this->m_Workbook->getContentTypeProperties());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.getCountOfStylesInPool()]

      @return int
     */
    function getCountOfStylesInPool()
    {
        return $this->m_Workbook->getCountOfStylesInPool();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.getCustomDocumentProperties()]

      @return com.aspose.cells.CustomDocumentPropertyCollection
     */
    function getCustomDocumentProperties()
    {
        return ClassFactory::_t2($this->m_Workbook->getCustomDocumentProperties());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.getDataConnections()]

      @return com.aspose.cells.ExternalConnectionCollection
     */
    function getDataConnections()
    {
        return ClassFactory::_t2($this->m_Workbook->getDataConnections());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.getDataSorter()]

      @return com.aspose.cells.DataSorter
     */
    function getDataSorter()
    {
        return ClassFactory::_t2($this->m_Workbook->getDataSorter());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.getDefaultStyle()]

      @return com.aspose.cells.Style
     */
    function getDefaultStyle()
    {
        return ClassFactory::_t2($this->m_Workbook->getDefaultStyle());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.getDigitalSignature()]

      @return com.aspose.cells.DigitalSignatureCollection
     */
    function getDigitalSignature()
    {
        return ClassFactory::_t2($this->m_Workbook->getDigitalSignature());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.getFileFormat()]

      @return int
     */
    function getFileFormat()
    {
        return $this->m_Workbook->getFileFormat();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.getFileName()]

      @return String
     */
    function getFileName()
    {
        return $this->m_Workbook->getFileName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.getInterruptMonitor()]

      @return com.aspose.cells.InterruptMonitor
     */
    function getInterruptMonitor()
    {
        return ClassFactory::_t2($this->m_Workbook->getInterruptMonitor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.getLanguage()]

      @return int
     */
    function getLanguage()
    {
        return $this->m_Workbook->getLanguage();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.getMatchingColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
      @return com.aspose.cells.Color
     */
    function getMatchingColor($oColor0)
    {
        return ClassFactory::_t2($this->m_Workbook->getMatchingColor(ClassFactory::_t1($oColor0)));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.getRegion()]

      @return int
     */
    function getRegion()
    {
        return $this->m_Workbook->getRegion();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.getRibbonXml()]

      @return String
     */
    function getRibbonXml()
    {
        return $this->m_Workbook->getRibbonXml();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.getSaveOptions()]

      @return com.aspose.cells.SaveOptions
     */
    function getSaveOptions()
    {
        return ClassFactory::_t2($this->m_Workbook->getSaveOptions());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.getSettings()]

      @return com.aspose.cells.WorkbookSettings
     */
    function getSettings()
    {
        return ClassFactory::_t2($this->m_Workbook->getSettings());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.getStyleInPool(int)]

      @param pInt0  int
      @return com.aspose.cells.Style
     */
    function getStyleInPool($pInt0)
    {
        return ClassFactory::_t2($this->m_Workbook->getStyleInPool($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.getStyles()]

      @return com.aspose.cells.StyleCollection
     */
    function getStyles()
    {
        return ClassFactory::_t2($this->m_Workbook->getStyles());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.getTheme()]

      @return String
     */
    function getTheme()
    {
        return $this->m_Workbook->getTheme();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.getThemeColor(int)]

      @param pInt0  int
      @return com.aspose.cells.Color
     */
    function getThemeColor($pInt0)
    {
        return ClassFactory::_t2($this->m_Workbook->getThemeColor($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.getWorksheets()]

      @return com.aspose.cells.WorksheetCollection
     */
    function getWorksheets()
    {
        return ClassFactory::_t2($this->m_Workbook->getWorksheets());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.hasExernalLinks()]

      @return boolean
     */
    function hasExernalLinks()
    {
        return $this->m_Workbook->hasExernalLinks();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.hasMacro()]

      @return boolean
     */
    function hasMacro()
    {
        return $this->m_Workbook->hasMacro();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.hasRevisions()]

      @return boolean
     */
    function hasRevisions()
    {
        return $this->m_Workbook->hasRevisions();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.importXml(java.lang.String, java.lang.String, int, int)]

      @param oString0  String
      @param oString1  String
      @param pInt2  int
      @param pInt3  int
     */
    function importXml($oString0, $oString1, $pInt2, $pInt3)
    {
        $this->m_Workbook->importXml($oString0, $oString1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.initialize()]

     */
    function initialize()
    {
        $this->m_Workbook->initialize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.isColorInPalette(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
      @return boolean
     */
    function isColorInPalette($oColor0)
    {
        return $this->m_Workbook->isColorInPalette(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.isDigitallySigned()]

      @return boolean
     */
    function isDigitallySigned()
    {
        return $this->m_Workbook->isDigitallySigned();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.isProtected()]

      @return boolean
     */
    function isProtected()
    {
        return $this->m_Workbook->isProtected();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.open(java.io.InputStream)]

      @param oInputStream0  corresponding java type is {java.io.InputStream}
     */
    function openI($oInputStream0)
    {
        $this->m_Workbook->open(ClassFactory::_t1($oInputStream0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.open(java.lang.String)]

      @param oString0  String
     */
    function openS($oString0)
    {
        $this->m_Workbook->open($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.open(java.io.InputStream, int)]

      @param oInputStream0  corresponding java type is {java.io.InputStream}
      @param pInt1  int
     */
    function openII($oInputStream0, $pInt1)
    {
        $this->m_Workbook->open(ClassFactory::_t1($oInputStream0), $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.open(java.lang.String, int)]

      @param oString0  String
      @param pInt1  int
     */
    function openSI($oString0, $pInt1)
    {
        $this->m_Workbook->open($oString0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.open(java.io.InputStream, int, java.lang.String)]

      @param oInputStream0  corresponding java type is {java.io.InputStream}
      @param pInt1  int
      @param oString2  String
     */
    function openIIS($oInputStream0, $pInt1, $oString2)
    {
        $this->m_Workbook->open(ClassFactory::_t1($oInputStream0), $pInt1, $oString2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.open(java.lang.String, int, java.lang.String)]

      @param oString0  String
      @param pInt1  int
      @param oString2  String
     */
    function openSIS($oString0, $pInt1, $oString2)
    {
        $this->m_Workbook->open($oString0, $pInt1, $oString2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.open(java.io.InputStream, char, boolean, java.lang.String)]

      @param oInputStream0  corresponding java type is {java.io.InputStream}
      @param pChar1  char
      @param pBoolean2  boolean
      @param oString3  String
     */
    function openICBS($oInputStream0, $pChar1, $pBoolean2, $oString3)
    {
        $this->m_Workbook->open(ClassFactory::_t1($oInputStream0), $pChar1, $pBoolean2, $oString3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.open(java.lang.String, char, boolean, java.lang.String)]

      @param oString0  String
      @param pChar1  char
      @param pBoolean2  boolean
      @param oString3  String
     */
    function openSCBS($oString0, $pChar1, $pBoolean2, $oString3)
    {
        $this->m_Workbook->open($oString0, $pChar1, $pBoolean2, $oString3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.protect(int, java.lang.String)]

      @param pInt0  int
      @param oString1  String
     */
    function protect($pInt0, $oString1)
    {
        $this->m_Workbook->protect($pInt0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.removeDigitallySign()]

     */
    function removeDigitallySign()
    {
        $this->m_Workbook->removeDigitallySign();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.removeExternalLinks()]

     */
    function removeExternalLinks()
    {
        $this->m_Workbook->removeExternalLinks();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.removeMacro()]

     */
    function removeMacro()
    {
        $this->m_Workbook->removeMacro();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.replace(boolean, java.lang.Object)]

      @param pBoolean0  boolean
      @param oObject1  corresponding java type is {java.lang.Object}
      @return int
     */
    function replaceBO($pBoolean0, $oObject1)
    {
        return $this->m_Workbook->replace($pBoolean0, ClassFactory::_t1($oObject1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.replace(int, java.lang.Object)]

      @param pInt0  int
      @param oObject1  corresponding java type is {java.lang.Object}
      @return int
     */
    function replaceIO($pInt0, $oObject1)
    {
        return $this->m_Workbook->replace($pInt0, ClassFactory::_t1($oObject1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.replace(java.lang.String, double)]

      @param oString0  String
      @param pDouble1  double
      @return int
     */
    function replaceSD($oString0, $pDouble1)
    {
        return $this->m_Workbook->replace($oString0, $pDouble1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.replace(java.lang.String, int)]

      @param oString0  String
      @param pInt1  int
      @return int
     */
    function replaceSI($oString0, $pInt1)
    {
        return $this->m_Workbook->replace($oString0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.replace(java.lang.String, java.lang.String)]

      @param oString0  String
      @param oString1  String
      @return int
     */
    function replaceSS($oString0, $oString1)
    {
        return $this->m_Workbook->replace($oString0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.replace(java.lang.String, double[], boolean)]

      @param oString0  String
      @param arrP1DDouble1  double[]
      @param pBoolean2  boolean
      @return int
     */
    function replaceSDB($oString0, $arrP1DDouble1, $pBoolean2)
    {
        return $this->m_Workbook->replace($oString0, $arrP1DDouble1, $pBoolean2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.replace(java.lang.String, int[], boolean)]

      @param oString0  String
      @param arrP1DInt1  int[]
      @param pBoolean2  boolean
      @return int
     */
    function replaceSIB($oString0, $arrP1DInt1, $pBoolean2)
    {
        return $this->m_Workbook->replace($oString0, $arrP1DInt1, $pBoolean2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.replace(java.lang.String, java.lang.String, com.aspose.cells.ReplaceOptions)]

      @param oString0  String
      @param oString1  String
      @param oReplaceOptions2  com.aspose.cells.ReplaceOptions
      @return int
     */
    function replaceSSR($oString0, $oString1, $oReplaceOptions2)
    {
        return $this->m_Workbook->replace($oString0, $oString1, ClassFactory::_t1($oReplaceOptions2));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.replace(java.lang.String, java.lang.String[], boolean)]

      @param oString0  String
      @param arrD1DString1  array, corresponding java type is {String[]}
      @param pBoolean2  boolean
      @return int
     */
    function replaceSSB($oString0, $arrD1DString1, $pBoolean2)
    {
        return $this->m_Workbook->replace($oString0, $arrD1DString1, $pBoolean2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.save(java.lang.String)]

      @param oString0  String
     */
    function saveS($oString0)
    {
        $this->m_Workbook->save($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.save(java.io.OutputStream, com.aspose.cells.SaveOptions)]

      @param oOutputStream0  corresponding java type is {java.io.OutputStream}
      @param oSaveOptions1  com.aspose.cells.SaveOptions
     */
    function saveOS($oOutputStream0, $oSaveOptions1)
    {
        $this->m_Workbook->save(ClassFactory::_t1($oOutputStream0), ClassFactory::_t1($oSaveOptions1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.save(java.io.OutputStream, int)]

      @param oOutputStream0  corresponding java type is {java.io.OutputStream}
      @param pInt1  int
     */
    function saveOI($oOutputStream0, $pInt1)
    {
        $this->m_Workbook->save(ClassFactory::_t1($oOutputStream0), $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.save(java.lang.String, com.aspose.cells.SaveOptions)]

      @param oString0  String
      @param oSaveOptions1  com.aspose.cells.SaveOptions
     */
    function saveSS($oString0, $oSaveOptions1)
    {
        $this->m_Workbook->save($oString0, ClassFactory::_t1($oSaveOptions1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.save(java.lang.String, int)]

      @param oString0  String
      @param pInt1  int
     */
    function saveSI($oString0, $pInt1)
    {
        $this->m_Workbook->save($oString0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.setDefaultStyle(com.aspose.cells.Style)]

      @param oStyle0  com.aspose.cells.Style
     */
    function setDefaultStyle($oStyle0)
    {
        $this->m_Workbook->setDefaultStyle(ClassFactory::_t1($oStyle0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.setDigitalSignature(com.aspose.cells.DigitalSignatureCollection)]

      @param oDigitalSignatureCollection0  com.aspose.cells.DigitalSignatureCollection
     */
    function setDigitalSignature($oDigitalSignatureCollection0)
    {
        $this->m_Workbook->setDigitalSignature(ClassFactory::_t1($oDigitalSignatureCollection0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.setEncryptionOptions(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function setEncryptionOptions($pInt0, $pInt1)
    {
        $this->m_Workbook->setEncryptionOptions($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.setFileFormat(int)]

      @param pInt0  int
     */
    function setFileFormat($pInt0)
    {
        $this->m_Workbook->setFileFormat($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.setFileName(java.lang.String)]

      @param oString0  String
     */
    function setFileName($oString0)
    {
        $this->m_Workbook->setFileName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.setInterruptMonitor(com.aspose.cells.InterruptMonitor)]

      @param oInterruptMonitor0  com.aspose.cells.InterruptMonitor
     */
    function setInterruptMonitor($oInterruptMonitor0)
    {
        $this->m_Workbook->setInterruptMonitor(ClassFactory::_t1($oInterruptMonitor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.setLanguage(int)]

      @param pInt0  int
     */
    function setLanguage($pInt0)
    {
        $this->m_Workbook->setLanguage($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.setOleSize(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
     */
    function setOleSize($pInt0, $pInt1, $pInt2, $pInt3)
    {
        $this->m_Workbook->setOleSize($pInt0, $pInt1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.setRegion(int)]

      @param pInt0  int
     */
    function setRegion($pInt0)
    {
        $this->m_Workbook->setRegion($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.setRibbonXml(java.lang.String)]

      @param oString0  String
     */
    function setRibbonXml($oString0)
    {
        $this->m_Workbook->setRibbonXml($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.setSettings(com.aspose.cells.WorkbookSettings)]

      @param oWorkbookSettings0  com.aspose.cells.WorkbookSettings
     */
    function setSettings($oWorkbookSettings0)
    {
        $this->m_Workbook->setSettings(ClassFactory::_t1($oWorkbookSettings0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.setThemeColor(int, com.aspose.cells.Color)]

      @param pInt0  int
      @param oColor1  com.aspose.cells.Color
     */
    function setThemeColor($pInt0, $oColor1)
    {
        $this->m_Workbook->setThemeColor($pInt0, ClassFactory::_t1($oColor1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.unprotect(java.lang.String)]

      @param oString0  String
     */
    function unprotect($oString0)
    {
        $this->m_Workbook->unprotect($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.updateLinkedDataSource(com.aspose.cells.Workbook[])]

      @param arrO1DWorkbook0  com.aspose.cells.Workbook[]
     */
    function updateLinkedDataSource($arrO1DWorkbook0)
    {
        $this->m_Workbook->updateLinkedDataSource(ClassFactory::_t1($arrO1DWorkbook0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Workbook.validateFormula(java.lang.String)]

      @param oString0  String
      @return boolean
     */
    function validateFormula($oString0)
    {
        return $this->m_Workbook->validateFormula($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.WorkbookDesigner]
  
 */
class WorkbookDesigner
{
    public $m_WorkbookDesigner;
    
    function __construct($workbookDesigner)
    {
    	$this->m_WorkbookDesigner = $workbookDesigner;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.WorkbookDesigner.clearDataSource()]

     */
    function clearDataSource()
    {
        $this->m_WorkbookDesigner->clearDataSource();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookDesigner.getCalculateFormula()]

      @return boolean
     */
    function getCalculateFormula()
    {
        return $this->m_WorkbookDesigner->getCalculateFormula();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookDesigner.getSmartMarkers()]

      @return array, corresponding java type is {String[]}
     */
    function getSmartMarkers()
    {
        return $this->m_WorkbookDesigner->getSmartMarkers();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookDesigner.getUpdateReference()]

      @return boolean
     */
    function getUpdateReference()
    {
        return $this->m_WorkbookDesigner->getUpdateReference();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookDesigner.getWorkbook()]

      @return com.aspose.cells.Workbook
     */
    function getWorkbook()
    {
        return ClassFactory::_t2($this->m_WorkbookDesigner->getWorkbook());
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookDesigner.process()]

     */
    function process()
    {
        $this->m_WorkbookDesigner->process();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookDesigner.process(boolean)]

      @param pBoolean0  boolean
     */
    function processB($pBoolean0)
    {
        $this->m_WorkbookDesigner->process($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookDesigner.process(int, boolean)]

      @param pInt0  int
      @param pBoolean1  boolean
     */
    function processIB($pInt0, $pBoolean1)
    {
        $this->m_WorkbookDesigner->process($pInt0, $pBoolean1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookDesigner.setCalculateFormula(boolean)]

      @param pBoolean0  boolean
     */
    function setCalculateFormula($pBoolean0)
    {
        $this->m_WorkbookDesigner->setCalculateFormula($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookDesigner.setDataSource(java.sql.ResultSet)]

      @param oResultSet0  corresponding java type is {java.sql.ResultSet}
     */
    function setDataSourceR($oResultSet0)
    {
        $this->m_WorkbookDesigner->setDataSource(ClassFactory::_t1($oResultSet0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookDesigner.setDataSource(java.lang.String, com.aspose.cells.ICellsDataTable)]

      @param oString0  String
      @param oICellsDataTable1  com.aspose.cells.ICellsDataTable
     */
    function setDataSourceSI($oString0, $oICellsDataTable1)
    {
        $this->m_WorkbookDesigner->setDataSource($oString0, ClassFactory::_t1($oICellsDataTable1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookDesigner.setDataSource(java.lang.String, java.lang.Object)]

      @param oString0  String
      @param oObject1  corresponding java type is {java.lang.Object}
     */
    function setDataSourceSO($oString0, $oObject1)
    {
        $this->m_WorkbookDesigner->setDataSource($oString0, ClassFactory::_t1($oObject1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookDesigner.setDataSource(java.lang.String, java.lang.Object[])]

      @param oString0  String
      @param arrO1DObject1  array, corresponding java type is {java.lang.Object[]}
     */
    function setDataSourceSO1($oString0, $arrO1DObject1)
    {
        $this->m_WorkbookDesigner->setDataSource($oString0, ClassFactory::_t1($arrO1DObject1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookDesigner.setDataSource(java.lang.String, java.sql.ResultSet)]

      @param oString0  String
      @param oResultSet1  corresponding java type is {java.sql.ResultSet}
     */
    function setDataSourceSR($oString0, $oResultSet1)
    {
        $this->m_WorkbookDesigner->setDataSource($oString0, ClassFactory::_t1($oResultSet1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookDesigner.setDataSource(java.lang.String, java.sql.ResultSet, int)]

      @param oString0  String
      @param oResultSet1  corresponding java type is {java.sql.ResultSet}
      @param pInt2  int
     */
    function setDataSourceSRI($oString0, $oResultSet1, $pInt2)
    {
        $this->m_WorkbookDesigner->setDataSource($oString0, ClassFactory::_t1($oResultSet1), $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookDesigner.setUpdateReference(boolean)]

      @param pBoolean0  boolean
     */
    function setUpdateReference($pBoolean0)
    {
        $this->m_WorkbookDesigner->setUpdateReference($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookDesigner.setWorkbook(com.aspose.cells.Workbook)]

      @param oWorkbook0  com.aspose.cells.Workbook
     */
    function setWorkbook($oWorkbook0)
    {
        $this->m_WorkbookDesigner->setWorkbook(ClassFactory::_t1($oWorkbook0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.WorkbookRender]
  
 */
class WorkbookRender
{
    public $m_WorkbookRender;
    
    function __construct($workbookRender)
    {
    	$this->m_WorkbookRender = $workbookRender;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.WorkbookRender.getPageCount()]

      @return int
     */
    function getPageCount()
    {
        return $this->m_WorkbookRender->getPageCount();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookRender.toImage(java.io.OutputStream)]

      @param oOutputStream0  corresponding java type is {java.io.OutputStream}
     */
    function toImageO($oOutputStream0)
    {
        $this->m_WorkbookRender->toImage(ClassFactory::_t1($oOutputStream0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookRender.toImage(java.lang.String)]

      @param oString0  String
     */
    function toImageS($oString0)
    {
        $this->m_WorkbookRender->toImage($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookRender.toPrinter(java.lang.String)]

      @param oString0  String
     */
    function toPrinter($oString0)
    {
        $this->m_WorkbookRender->toPrinter($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.WorkbookSettings]
  
 */
class WorkbookSettings
{
    public $m_WorkbookSettings;
    
    function __construct($workbookSettings)
    {
    	$this->m_WorkbookSettings = $workbookSettings;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getAutoCompressPictures()]

      @return boolean
     */
    function getAutoCompressPictures()
    {
        return $this->m_WorkbookSettings->getAutoCompressPictures();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getBuildVersion()]

      @return String
     */
    function getBuildVersion()
    {
        return $this->m_WorkbookSettings->getBuildVersion();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getCalcMode()]

      @return int
     */
    function getCalcMode()
    {
        return $this->m_WorkbookSettings->getCalcMode();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getCalcStackSize()]

      @return int
     */
    function getCalcStackSize()
    {
        return $this->m_WorkbookSettings->getCalcStackSize();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getCalculationId()]

      @return String
     */
    function getCalculationId()
    {
        return $this->m_WorkbookSettings->getCalculationId();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getCheckComptiliblity()]

      @return boolean
     */
    function getCheckComptiliblity()
    {
        return $this->m_WorkbookSettings->getCheckComptiliblity();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getCheckExcelRestriction()]

      @return boolean
     */
    function getCheckExcelRestriction()
    {
        return $this->m_WorkbookSettings->getCheckExcelRestriction();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getConvertNumericData()]

      @return boolean
     */
    function getConvertNumericData()
    {
        return $this->m_WorkbookSettings->getConvertNumericData();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getCreateCalcChain()]

      @return boolean
     */
    function getCreateCalcChain()
    {
        return $this->m_WorkbookSettings->getCreateCalcChain();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getDate1904()]

      @return boolean
     */
    function getDate1904()
    {
        return $this->m_WorkbookSettings->getDate1904();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getDisplayDrawingObjects()]

      @return int
     */
    function getDisplayDrawingObjects()
    {
        return $this->m_WorkbookSettings->getDisplayDrawingObjects();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getEnableMacros()]

      @return boolean
     */
    function getEnableMacros()
    {
        return $this->m_WorkbookSettings->getEnableMacros();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getEncoding()]

      @return com.aspose.cells.Encoding
     */
    function getEncoding()
    {
        return ClassFactory::_t2($this->m_WorkbookSettings->getEncoding());
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getFirstVisibleTab()]

      @return int
     */
    function getFirstVisibleTab()
    {
        return $this->m_WorkbookSettings->getFirstVisibleTab();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getHidePivotFieldList()]

      @return boolean
     */
    function getHidePivotFieldList()
    {
        return $this->m_WorkbookSettings->getHidePivotFieldList();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getIteration()]

      @return boolean
     */
    function getIteration()
    {
        return $this->m_WorkbookSettings->getIteration();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getLanguage()]

      @return int
     */
    function getLanguage()
    {
        return $this->m_WorkbookSettings->getLanguage();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getLanguageCode()]

      @return int
     */
    function getLanguageCode()
    {
        return $this->m_WorkbookSettings->getLanguageCode();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getLocale()]

      @return corresponding java type is {java.util.Locale}
     */
    function getLocale()
    {
        return ClassFactory::_t2($this->m_WorkbookSettings->getLocale());
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getMaxChange()]

      @return double
     */
    function getMaxChange()
    {
        return $this->m_WorkbookSettings->getMaxChange();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getMaxIteration()]

      @return int
     */
    function getMaxIteration()
    {
        return $this->m_WorkbookSettings->getMaxIteration();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getMemorySetting()]

      @return int
     */
    function getMemorySetting()
    {
        return $this->m_WorkbookSettings->getMemorySetting();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getParsingFormulaOnOpen()]

      @return boolean
     */
    function getParsingFormulaOnOpen()
    {
        return $this->m_WorkbookSettings->getParsingFormulaOnOpen();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getPassword()]

      @return String
     */
    function getPassword()
    {
        return $this->m_WorkbookSettings->getPassword();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getPrecisionAsDisplayed()]

      @return boolean
     */
    function getPrecisionAsDisplayed()
    {
        return $this->m_WorkbookSettings->getPrecisionAsDisplayed();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getProtectionType()]

      @return int
     */
    function getProtectionType()
    {
        return $this->m_WorkbookSettings->getProtectionType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getReCalcOnOpen()]

      @return boolean
     */
    function getReCalcOnOpen()
    {
        return $this->m_WorkbookSettings->getReCalcOnOpen();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getReCalculateOnOpen()]

      @return boolean
     */
    function getReCalculateOnOpen()
    {
        return $this->m_WorkbookSettings->getReCalculateOnOpen();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getRecalculateBeforeSave()]

      @return boolean
     */
    function getRecalculateBeforeSave()
    {
        return $this->m_WorkbookSettings->getRecalculateBeforeSave();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getRecommendReadOnly()]

      @return boolean
     */
    function getRecommendReadOnly()
    {
        return $this->m_WorkbookSettings->getRecommendReadOnly();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getRegion()]

      @return int
     */
    function getRegion()
    {
        return $this->m_WorkbookSettings->getRegion();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getRemovePersonalInformation()]

      @return boolean
     */
    function getRemovePersonalInformation()
    {
        return $this->m_WorkbookSettings->getRemovePersonalInformation();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getShared()]

      @return boolean
     */
    function getShared()
    {
        return $this->m_WorkbookSettings->getShared();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getSheetTabBarWidth()]

      @return int
     */
    function getSheetTabBarWidth()
    {
        return $this->m_WorkbookSettings->getSheetTabBarWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getShowTabs()]

      @return boolean
     */
    function getShowTabs()
    {
        return $this->m_WorkbookSettings->getShowTabs();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getUpdateAdjacentCellsBorder()]

      @return boolean
     */
    function getUpdateAdjacentCellsBorder()
    {
        return $this->m_WorkbookSettings->getUpdateAdjacentCellsBorder();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getWindowHeight()]

      @return double
     */
    function getWindowHeight()
    {
        return $this->m_WorkbookSettings->getWindowHeight();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getWindowHeightCM()]

      @return double
     */
    function getWindowHeightCM()
    {
        return $this->m_WorkbookSettings->getWindowHeightCM();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getWindowHeightInch()]

      @return double
     */
    function getWindowHeightInch()
    {
        return $this->m_WorkbookSettings->getWindowHeightInch();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getWindowLeft()]

      @return double
     */
    function getWindowLeft()
    {
        return $this->m_WorkbookSettings->getWindowLeft();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getWindowLeftCM()]

      @return double
     */
    function getWindowLeftCM()
    {
        return $this->m_WorkbookSettings->getWindowLeftCM();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getWindowLeftInch()]

      @return double
     */
    function getWindowLeftInch()
    {
        return $this->m_WorkbookSettings->getWindowLeftInch();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getWindowTop()]

      @return double
     */
    function getWindowTop()
    {
        return $this->m_WorkbookSettings->getWindowTop();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getWindowTopCM()]

      @return double
     */
    function getWindowTopCM()
    {
        return $this->m_WorkbookSettings->getWindowTopCM();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getWindowTopInch()]

      @return double
     */
    function getWindowTopInch()
    {
        return $this->m_WorkbookSettings->getWindowTopInch();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getWindowWidth()]

      @return double
     */
    function getWindowWidth()
    {
        return $this->m_WorkbookSettings->getWindowWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getWindowWidthCM()]

      @return double
     */
    function getWindowWidthCM()
    {
        return $this->m_WorkbookSettings->getWindowWidthCM();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.getWindowWidthInch()]

      @return double
     */
    function getWindowWidthInch()
    {
        return $this->m_WorkbookSettings->getWindowWidthInch();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.isDefaultEncrypted()]

      @return boolean
     */
    function isDefaultEncrypted()
    {
        return $this->m_WorkbookSettings->isDefaultEncrypted();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.isHScrollBarVisible()]

      @return boolean
     */
    function isHScrollBarVisible()
    {
        return $this->m_WorkbookSettings->isHScrollBarVisible();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.isHidden()]

      @return boolean
     */
    function isHidden()
    {
        return $this->m_WorkbookSettings->isHidden();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.isMinimized()]

      @return boolean
     */
    function isMinimized()
    {
        return $this->m_WorkbookSettings->isMinimized();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.isProtected()]

      @return boolean
     */
    function isProtected()
    {
        return $this->m_WorkbookSettings->isProtected();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.isVScrollBarVisible()]

      @return boolean
     */
    function isVScrollBarVisible()
    {
        return $this->m_WorkbookSettings->isVScrollBarVisible();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.isWriteProtected()]

      @return boolean
     */
    function isWriteProtected()
    {
        return $this->m_WorkbookSettings->isWriteProtected();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setAutoCompressPictures(boolean)]

      @param pBoolean0  boolean
     */
    function setAutoCompressPictures($pBoolean0)
    {
        $this->m_WorkbookSettings->setAutoCompressPictures($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setBuildVersion(java.lang.String)]

      @param oString0  String
     */
    function setBuildVersion($oString0)
    {
        $this->m_WorkbookSettings->setBuildVersion($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setCalcMode(int)]

      @param pInt0  int
     */
    function setCalcMode($pInt0)
    {
        $this->m_WorkbookSettings->setCalcMode($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setCalcStackSize(int)]

      @param pInt0  int
     */
    function setCalcStackSize($pInt0)
    {
        $this->m_WorkbookSettings->setCalcStackSize($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setCalculationId(java.lang.String)]

      @param oString0  String
     */
    function setCalculationId($oString0)
    {
        $this->m_WorkbookSettings->setCalculationId($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setCheckComptiliblity(boolean)]

      @param pBoolean0  boolean
     */
    function setCheckComptiliblity($pBoolean0)
    {
        $this->m_WorkbookSettings->setCheckComptiliblity($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setCheckExcelRestriction(boolean)]

      @param pBoolean0  boolean
     */
    function setCheckExcelRestriction($pBoolean0)
    {
        $this->m_WorkbookSettings->setCheckExcelRestriction($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setConvertNumericData(boolean)]

      @param pBoolean0  boolean
     */
    function setConvertNumericData($pBoolean0)
    {
        $this->m_WorkbookSettings->setConvertNumericData($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setCreateCalcChain(boolean)]

      @param pBoolean0  boolean
     */
    function setCreateCalcChain($pBoolean0)
    {
        $this->m_WorkbookSettings->setCreateCalcChain($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setDate1904(boolean)]

      @param pBoolean0  boolean
     */
    function setDate1904($pBoolean0)
    {
        $this->m_WorkbookSettings->setDate1904($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setDefaultEncrypted(boolean)]

      @param pBoolean0  boolean
     */
    function setDefaultEncrypted($pBoolean0)
    {
        $this->m_WorkbookSettings->setDefaultEncrypted($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setDisplayDrawingObjects(int)]

      @param pInt0  int
     */
    function setDisplayDrawingObjects($pInt0)
    {
        $this->m_WorkbookSettings->setDisplayDrawingObjects($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setEnableMacros(boolean)]

      @param pBoolean0  boolean
     */
    function setEnableMacros($pBoolean0)
    {
        $this->m_WorkbookSettings->setEnableMacros($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setEncoding(com.aspose.cells.Encoding)]

      @param oEncoding0  com.aspose.cells.Encoding
     */
    function setEncoding($oEncoding0)
    {
        $this->m_WorkbookSettings->setEncoding(ClassFactory::_t1($oEncoding0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setFirstVisibleTab(int)]

      @param pInt0  int
     */
    function setFirstVisibleTab($pInt0)
    {
        $this->m_WorkbookSettings->setFirstVisibleTab($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setHScrollBarVisible(boolean)]

      @param pBoolean0  boolean
     */
    function setHScrollBarVisible($pBoolean0)
    {
        $this->m_WorkbookSettings->setHScrollBarVisible($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setHidden(boolean)]

      @param pBoolean0  boolean
     */
    function setHidden($pBoolean0)
    {
        $this->m_WorkbookSettings->setHidden($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setHidePivotFieldList(boolean)]

      @param pBoolean0  boolean
     */
    function setHidePivotFieldList($pBoolean0)
    {
        $this->m_WorkbookSettings->setHidePivotFieldList($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setIteration(boolean)]

      @param pBoolean0  boolean
     */
    function setIteration($pBoolean0)
    {
        $this->m_WorkbookSettings->setIteration($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setLanguage(int)]

      @param pInt0  int
     */
    function setLanguage($pInt0)
    {
        $this->m_WorkbookSettings->setLanguage($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setLanguageCode(int)]

      @param pInt0  int
     */
    function setLanguageCode($pInt0)
    {
        $this->m_WorkbookSettings->setLanguageCode($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setLocale(java.util.Locale)]

      @param oLocale0  corresponding java type is {java.util.Locale}
     */
    function setLocale($oLocale0)
    {
        $this->m_WorkbookSettings->setLocale(ClassFactory::_t1($oLocale0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setMaxChange(double)]

      @param pDouble0  double
     */
    function setMaxChange($pDouble0)
    {
        $this->m_WorkbookSettings->setMaxChange($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setMaxIteration(int)]

      @param pInt0  int
     */
    function setMaxIteration($pInt0)
    {
        $this->m_WorkbookSettings->setMaxIteration($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setMemorySetting(int)]

      @param pInt0  int
     */
    function setMemorySetting($pInt0)
    {
        $this->m_WorkbookSettings->setMemorySetting($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setMinimized(boolean)]

      @param pBoolean0  boolean
     */
    function setMinimized($pBoolean0)
    {
        $this->m_WorkbookSettings->setMinimized($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setParsingFormulaOnOpen(boolean)]

      @param pBoolean0  boolean
     */
    function setParsingFormulaOnOpen($pBoolean0)
    {
        $this->m_WorkbookSettings->setParsingFormulaOnOpen($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setPassword(java.lang.String)]

      @param oString0  String
     */
    function setPassword($oString0)
    {
        $this->m_WorkbookSettings->setPassword($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setPrecisionAsDisplayed(boolean)]

      @param pBoolean0  boolean
     */
    function setPrecisionAsDisplayed($pBoolean0)
    {
        $this->m_WorkbookSettings->setPrecisionAsDisplayed($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setReCalcOnOpen(boolean)]

      @param pBoolean0  boolean
     */
    function setReCalcOnOpen($pBoolean0)
    {
        $this->m_WorkbookSettings->setReCalcOnOpen($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setReCalculateOnOpen(boolean)]

      @param pBoolean0  boolean
     */
    function setReCalculateOnOpen($pBoolean0)
    {
        $this->m_WorkbookSettings->setReCalculateOnOpen($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setRecalculateBeforeSave(boolean)]

      @param pBoolean0  boolean
     */
    function setRecalculateBeforeSave($pBoolean0)
    {
        $this->m_WorkbookSettings->setRecalculateBeforeSave($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setRecommendReadOnly(boolean)]

      @param pBoolean0  boolean
     */
    function setRecommendReadOnly($pBoolean0)
    {
        $this->m_WorkbookSettings->setRecommendReadOnly($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setRegion(int)]

      @param pInt0  int
     */
    function setRegion($pInt0)
    {
        $this->m_WorkbookSettings->setRegion($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setRemovePersonalInformation(boolean)]

      @param pBoolean0  boolean
     */
    function setRemovePersonalInformation($pBoolean0)
    {
        $this->m_WorkbookSettings->setRemovePersonalInformation($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setShared(boolean)]

      @param pBoolean0  boolean
     */
    function setShared($pBoolean0)
    {
        $this->m_WorkbookSettings->setShared($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setSheetTabBarWidth(int)]

      @param pInt0  int
     */
    function setSheetTabBarWidth($pInt0)
    {
        $this->m_WorkbookSettings->setSheetTabBarWidth($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setShowTabs(boolean)]

      @param pBoolean0  boolean
     */
    function setShowTabs($pBoolean0)
    {
        $this->m_WorkbookSettings->setShowTabs($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setUpdateAdjacentCellsBorder(boolean)]

      @param pBoolean0  boolean
     */
    function setUpdateAdjacentCellsBorder($pBoolean0)
    {
        $this->m_WorkbookSettings->setUpdateAdjacentCellsBorder($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setVScrollBarVisible(boolean)]

      @param pBoolean0  boolean
     */
    function setVScrollBarVisible($pBoolean0)
    {
        $this->m_WorkbookSettings->setVScrollBarVisible($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setWindowHeight(double)]

      @param pDouble0  double
     */
    function setWindowHeight($pDouble0)
    {
        $this->m_WorkbookSettings->setWindowHeight($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setWindowHeightCM(double)]

      @param pDouble0  double
     */
    function setWindowHeightCM($pDouble0)
    {
        $this->m_WorkbookSettings->setWindowHeightCM($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setWindowHeightInch(double)]

      @param pDouble0  double
     */
    function setWindowHeightInch($pDouble0)
    {
        $this->m_WorkbookSettings->setWindowHeightInch($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setWindowLeft(double)]

      @param pDouble0  double
     */
    function setWindowLeft($pDouble0)
    {
        $this->m_WorkbookSettings->setWindowLeft($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setWindowLeftCM(double)]

      @param pDouble0  double
     */
    function setWindowLeftCM($pDouble0)
    {
        $this->m_WorkbookSettings->setWindowLeftCM($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setWindowLeftInch(double)]

      @param pDouble0  double
     */
    function setWindowLeftInch($pDouble0)
    {
        $this->m_WorkbookSettings->setWindowLeftInch($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setWindowTop(double)]

      @param pDouble0  double
     */
    function setWindowTop($pDouble0)
    {
        $this->m_WorkbookSettings->setWindowTop($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setWindowTopCM(double)]

      @param pDouble0  double
     */
    function setWindowTopCM($pDouble0)
    {
        $this->m_WorkbookSettings->setWindowTopCM($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setWindowTopInch(double)]

      @param pDouble0  double
     */
    function setWindowTopInch($pDouble0)
    {
        $this->m_WorkbookSettings->setWindowTopInch($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setWindowWidth(double)]

      @param pDouble0  double
     */
    function setWindowWidth($pDouble0)
    {
        $this->m_WorkbookSettings->setWindowWidth($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setWindowWidthCM(double)]

      @param pDouble0  double
     */
    function setWindowWidthCM($pDouble0)
    {
        $this->m_WorkbookSettings->setWindowWidthCM($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setWindowWidthInch(double)]

      @param pDouble0  double
     */
    function setWindowWidthInch($pDouble0)
    {
        $this->m_WorkbookSettings->setWindowWidthInch($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setWriteProtected(boolean)]

      @param pBoolean0  boolean
     */
    function setWriteProtected($pBoolean0)
    {
        $this->m_WorkbookSettings->setWriteProtected($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorkbookSettings.setWriteProtectedPassword(java.lang.String)]

      @param oString0  String
     */
    function setWriteProtectedPassword($oString0)
    {
        $this->m_WorkbookSettings->setWriteProtectedPassword($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.Worksheet]
  
 */
class Worksheet
{
    public $m_Worksheet;
    
    function __construct($worksheet)
    {
    	$this->m_Worksheet = $worksheet;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.addPageBreaks(java.lang.String)]

      @param oString0  String
     */
    function addPageBreaks($oString0)
    {
        $this->m_Worksheet->addPageBreaks($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.autoFitColumn(int)]

      @param pInt0  int
     */
    function autoFitColumnI($pInt0)
    {
        $this->m_Worksheet->autoFitColumn($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.autoFitColumn(int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
     */
    function autoFitColumnIII($pInt0, $pInt1, $pInt2)
    {
        $this->m_Worksheet->autoFitColumn($pInt0, $pInt1, $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.autoFitColumns()]

     */
    function autoFitColumns()
    {
        $this->m_Worksheet->autoFitColumns();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.autoFitColumns(com.aspose.cells.AutoFitterOptions)]

      @param oAutoFitterOptions0  com.aspose.cells.AutoFitterOptions
     */
    function autoFitColumnsA($oAutoFitterOptions0)
    {
        $this->m_Worksheet->autoFitColumns(ClassFactory::_t1($oAutoFitterOptions0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.autoFitColumns(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function autoFitColumnsII($pInt0, $pInt1)
    {
        $this->m_Worksheet->autoFitColumns($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.autoFitColumns(int, int, com.aspose.cells.AutoFitterOptions)]

      @param pInt0  int
      @param pInt1  int
      @param oAutoFitterOptions2  com.aspose.cells.AutoFitterOptions
     */
    function autoFitColumnsIIA($pInt0, $pInt1, $oAutoFitterOptions2)
    {
        $this->m_Worksheet->autoFitColumns($pInt0, $pInt1, ClassFactory::_t1($oAutoFitterOptions2));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.autoFitColumns(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
     */
    function autoFitColumnsIIII($pInt0, $pInt1, $pInt2, $pInt3)
    {
        $this->m_Worksheet->autoFitColumns($pInt0, $pInt1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.autoFitColumns(int, int, int, int, com.aspose.cells.AutoFitterOptions)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param oAutoFitterOptions4  com.aspose.cells.AutoFitterOptions
     */
    function autoFitColumnsIIIIA($pInt0, $pInt1, $pInt2, $pInt3, $oAutoFitterOptions4)
    {
        $this->m_Worksheet->autoFitColumns($pInt0, $pInt1, $pInt2, $pInt3, ClassFactory::_t1($oAutoFitterOptions4));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.autoFitRow(int)]

      @param pInt0  int
     */
    function autoFitRowI($pInt0)
    {
        $this->m_Worksheet->autoFitRow($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.autoFitRow(int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
     */
    function autoFitRowIII($pInt0, $pInt1, $pInt2)
    {
        $this->m_Worksheet->autoFitRow($pInt0, $pInt1, $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.autoFitRow(int, int, int, com.aspose.cells.AutoFitterOptions)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param oAutoFitterOptions3  com.aspose.cells.AutoFitterOptions
     */
    function autoFitRowIIIA($pInt0, $pInt1, $pInt2, $oAutoFitterOptions3)
    {
        $this->m_Worksheet->autoFitRow($pInt0, $pInt1, $pInt2, ClassFactory::_t1($oAutoFitterOptions3));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.autoFitRow(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
     */
    function autoFitRowIIII($pInt0, $pInt1, $pInt2, $pInt3)
    {
        $this->m_Worksheet->autoFitRow($pInt0, $pInt1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.autoFitRows()]

     */
    function autoFitRows()
    {
        $this->m_Worksheet->autoFitRows();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.autoFitRows(boolean)]

      @param pBoolean0  boolean
     */
    function autoFitRowsB($pBoolean0)
    {
        $this->m_Worksheet->autoFitRows($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.autoFitRows(com.aspose.cells.AutoFitterOptions)]

      @param oAutoFitterOptions0  com.aspose.cells.AutoFitterOptions
     */
    function autoFitRowsA($oAutoFitterOptions0)
    {
        $this->m_Worksheet->autoFitRows(ClassFactory::_t1($oAutoFitterOptions0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.autoFitRows(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function autoFitRowsII($pInt0, $pInt1)
    {
        $this->m_Worksheet->autoFitRows($pInt0, $pInt1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.calculateFormula(java.lang.String)]

      @param oString0  String
      @return corresponding java type is {java.lang.Object}
     */
    function calculateFormulaS($oString0)
    {
        return ClassFactory::_t2($this->m_Worksheet->calculateFormula($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.calculateFormula(boolean, boolean, com.aspose.cells.ICustomFunction)]

      @param pBoolean0  boolean
      @param pBoolean1  boolean
      @param oICustomFunction2  com.aspose.cells.ICustomFunction
     */
    function calculateFormulaBBI($pBoolean0, $pBoolean1, $oICustomFunction2)
    {
        $this->m_Worksheet->calculateFormula($pBoolean0, $pBoolean1, ClassFactory::_t1($oICustomFunction2));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.clearComments()]

     */
    function clearComments()
    {
        $this->m_Worksheet->clearComments();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.copy(com.aspose.cells.Worksheet)]

      @param oWorksheet0  com.aspose.cells.Worksheet
     */
    function copyW($oWorksheet0)
    {
        $this->m_Worksheet->copy(ClassFactory::_t1($oWorksheet0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.copy(com.aspose.cells.Worksheet, com.aspose.cells.CopyOptions)]

      @param oWorksheet0  com.aspose.cells.Worksheet
      @param oCopyOptions1  com.aspose.cells.CopyOptions
     */
    function copyWC($oWorksheet0, $oCopyOptions1)
    {
        $this->m_Worksheet->copy(ClassFactory::_t1($oWorksheet0), ClassFactory::_t1($oCopyOptions1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.copyConditionalFormatting(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
     */
    function copyConditionalFormatting($pInt0, $pInt1, $pInt2, $pInt3)
    {
        $this->m_Worksheet->copyConditionalFormatting($pInt0, $pInt1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.freezePanes(java.lang.String, int, int)]

      @param oString0  String
      @param pInt1  int
      @param pInt2  int
     */
    function freezePanesSII($oString0, $pInt1, $pInt2)
    {
        $this->m_Worksheet->freezePanes($oString0, $pInt1, $pInt2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.freezePanes(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
     */
    function freezePanesIIII($pInt0, $pInt1, $pInt2, $pInt3)
    {
        $this->m_Worksheet->freezePanes($pInt0, $pInt1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getActiveCell()]

      @return String
     */
    function getActiveCell()
    {
        return $this->m_Worksheet->getActiveCell();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getAllowEditRanges()]

      @return com.aspose.cells.ProtectedRangeCollection
     */
    function getAllowEditRanges()
    {
        return ClassFactory::_t2($this->m_Worksheet->getAllowEditRanges());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getAutoFilter()]

      @return com.aspose.cells.AutoFilter
     */
    function getAutoFilter()
    {
        return ClassFactory::_t2($this->m_Worksheet->getAutoFilter());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getBackgroundImage()]

      @return byte[]
     */
    function getBackgroundImage()
    {
        return $this->m_Worksheet->getBackgroundImage();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getCells()]

      @return com.aspose.cells.Cells
     */
    function getCells()
    {
        return ClassFactory::_t2($this->m_Worksheet->getCells());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getCharts()]

      @return com.aspose.cells.ChartCollection
     */
    function getCharts()
    {
        return ClassFactory::_t2($this->m_Worksheet->getCharts());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getCheckBoxes()]

      @return com.aspose.cells.CheckBoxCollection
     */
    function getCheckBoxes()
    {
        return ClassFactory::_t2($this->m_Worksheet->getCheckBoxes());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getCodeName()]

      @return String
     */
    function getCodeName()
    {
        return $this->m_Worksheet->getCodeName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getComments()]

      @return com.aspose.cells.CommentCollection
     */
    function getComments()
    {
        return ClassFactory::_t2($this->m_Worksheet->getComments());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getConditionalFormattings()]

      @return com.aspose.cells.ConditionalFormattingCollection
     */
    function getConditionalFormattings()
    {
        return ClassFactory::_t2($this->m_Worksheet->getConditionalFormattings());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getCustomProperties()]

      @return com.aspose.cells.CustomPropertyCollection
     */
    function getCustomProperties()
    {
        return ClassFactory::_t2($this->m_Worksheet->getCustomProperties());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getDisplayRightToLeft()]

      @return boolean
     */
    function getDisplayRightToLeft()
    {
        return $this->m_Worksheet->getDisplayRightToLeft();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getDisplayZeros()]

      @return boolean
     */
    function getDisplayZeros()
    {
        return $this->m_Worksheet->getDisplayZeros();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getErrorCheckOptions()]

      @return com.aspose.cells.ErrorCheckOptionCollection
     */
    function getErrorCheckOptions()
    {
        return ClassFactory::_t2($this->m_Worksheet->getErrorCheckOptions());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getFirstVisibleColumn()]

      @return int
     */
    function getFirstVisibleColumn()
    {
        return $this->m_Worksheet->getFirstVisibleColumn();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getFirstVisibleRow()]

      @return int
     */
    function getFirstVisibleRow()
    {
        return $this->m_Worksheet->getFirstVisibleRow();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getFreezedPanes()]

      @return int[]
     */
    function getFreezedPanes()
    {
        return $this->m_Worksheet->getFreezedPanes();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getHPageBreaks()]

      @return com.aspose.cells.HorizontalPageBreakCollection
     */
    function getHPageBreaks()
    {
        return ClassFactory::_t2($this->m_Worksheet->getHPageBreaks());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getHorizontalPageBreaks()]

      @return com.aspose.cells.HorizontalPageBreakCollection
     */
    function getHorizontalPageBreaks()
    {
        return ClassFactory::_t2($this->m_Worksheet->getHorizontalPageBreaks());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getHyperlinks()]

      @return com.aspose.cells.HyperlinkCollection
     */
    function getHyperlinks()
    {
        return ClassFactory::_t2($this->m_Worksheet->getHyperlinks());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getIndex()]

      @return int
     */
    function getIndex()
    {
        return $this->m_Worksheet->getIndex();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getListObjects()]

      @return com.aspose.cells.ListObjectCollection
     */
    function getListObjects()
    {
        return ClassFactory::_t2($this->m_Worksheet->getListObjects());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_Worksheet->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getOleObjects()]

      @return com.aspose.cells.OleObjectCollection
     */
    function getOleObjects()
    {
        return ClassFactory::_t2($this->m_Worksheet->getOleObjects());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getOutline()]

      @return com.aspose.cells.Outline
     */
    function getOutline()
    {
        return ClassFactory::_t2($this->m_Worksheet->getOutline());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getPageSetup()]

      @return com.aspose.cells.PageSetup
     */
    function getPageSetup()
    {
        return ClassFactory::_t2($this->m_Worksheet->getPageSetup());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getPanes()]

      @return com.aspose.cells.PaneCollection
     */
    function getPanes()
    {
        return ClassFactory::_t2($this->m_Worksheet->getPanes());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getPictures()]

      @return com.aspose.cells.PictureCollection
     */
    function getPictures()
    {
        return ClassFactory::_t2($this->m_Worksheet->getPictures());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getPivotTables()]

      @return com.aspose.cells.PivotTableCollection
     */
    function getPivotTables()
    {
        return ClassFactory::_t2($this->m_Worksheet->getPivotTables());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getPrintingPageBreaks(com.aspose.cells.ImageOrPrintOptions)]

      @param oImageOrPrintOptions0  com.aspose.cells.ImageOrPrintOptions
      @return com.aspose.cells.CellArea[]
     */
    function getPrintingPageBreaks($oImageOrPrintOptions0)
    {
        return ClassFactory::_t2($this->m_Worksheet->getPrintingPageBreaks(ClassFactory::_t1($oImageOrPrintOptions0)));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getProtection()]

      @return com.aspose.cells.Protection
     */
    function getProtection()
    {
        return ClassFactory::_t2($this->m_Worksheet->getProtection());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getQueryTables()]

      @return com.aspose.cells.QueryTableCollection
     */
    function getQueryTables()
    {
        return ClassFactory::_t2($this->m_Worksheet->getQueryTables());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getScenarios()]

      @return com.aspose.cells.ScenarioCollection
     */
    function getScenarios()
    {
        return ClassFactory::_t2($this->m_Worksheet->getScenarios());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getSelectedRanges()]

      @return array, corresponding java type is {java.util.ArrayList}
     */
    function getSelectedRanges()
    {
        return ClassFactory::_t2($this->m_Worksheet->getSelectedRanges());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getShapes()]

      @return com.aspose.cells.ShapeCollection
     */
    function getShapes()
    {
        return ClassFactory::_t2($this->m_Worksheet->getShapes());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getShowFormulas()]

      @return boolean
     */
    function getShowFormulas()
    {
        return $this->m_Worksheet->getShowFormulas();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getSmartTagSetting()]

      @return com.aspose.cells.SmartTagSetting
     */
    function getSmartTagSetting()
    {
        return ClassFactory::_t2($this->m_Worksheet->getSmartTagSetting());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getSparklineGroupCollection()]

      @return com.aspose.cells.SparklineGroupCollection
     */
    function getSparklineGroupCollection()
    {
        return ClassFactory::_t2($this->m_Worksheet->getSparklineGroupCollection());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getTabColor()]

      @return com.aspose.cells.Color
     */
    function getTabColor()
    {
        return ClassFactory::_t2($this->m_Worksheet->getTabColor());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getTextBoxes()]

      @return com.aspose.cells.TextBoxCollection
     */
    function getTextBoxes()
    {
        return ClassFactory::_t2($this->m_Worksheet->getTextBoxes());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getTransitionEntry()]

      @return boolean
     */
    function getTransitionEntry()
    {
        return $this->m_Worksheet->getTransitionEntry();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getTransitionEvaluation()]

      @return boolean
     */
    function getTransitionEvaluation()
    {
        return $this->m_Worksheet->getTransitionEvaluation();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getType()]

      @return int
     */
    function getType()
    {
        return $this->m_Worksheet->getType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getVPageBreaks()]

      @return com.aspose.cells.VerticalPageBreakCollection
     */
    function getVPageBreaks()
    {
        return ClassFactory::_t2($this->m_Worksheet->getVPageBreaks());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getValidations()]

      @return com.aspose.cells.ValidationCollection
     */
    function getValidations()
    {
        return ClassFactory::_t2($this->m_Worksheet->getValidations());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getVerticalPageBreaks()]

      @return com.aspose.cells.VerticalPageBreakCollection
     */
    function getVerticalPageBreaks()
    {
        return ClassFactory::_t2($this->m_Worksheet->getVerticalPageBreaks());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getViewType()]

      @return int
     */
    function getViewType()
    {
        return $this->m_Worksheet->getViewType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getVisibilityType()]

      @return int
     */
    function getVisibilityType()
    {
        return $this->m_Worksheet->getVisibilityType();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getWorkbook()]

      @return com.aspose.cells.Workbook
     */
    function getWorkbook()
    {
        return ClassFactory::_t2($this->m_Worksheet->getWorkbook());
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.getZoom()]

      @return int
     */
    function getZoom()
    {
        return $this->m_Worksheet->getZoom();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.hasAutofilter()]

      @return boolean
     */
    function hasAutofilter()
    {
        return $this->m_Worksheet->hasAutofilter();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.isGridlinesVisible()]

      @return boolean
     */
    function isGridlinesVisible()
    {
        return $this->m_Worksheet->isGridlinesVisible();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.isOutlineShown()]

      @return boolean
     */
    function isOutlineShown()
    {
        return $this->m_Worksheet->isOutlineShown();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.isPageBreakPreview()]

      @return boolean
     */
    function isPageBreakPreview()
    {
        return $this->m_Worksheet->isPageBreakPreview();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.isProtected()]

      @return boolean
     */
    function isProtected()
    {
        return $this->m_Worksheet->isProtected();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.isRowColumnHeadersVisible()]

      @return boolean
     */
    function isRowColumnHeadersVisible()
    {
        return $this->m_Worksheet->isRowColumnHeadersVisible();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.isRulerVisible()]

      @return boolean
     */
    function isRulerVisible()
    {
        return $this->m_Worksheet->isRulerVisible();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.isSelected()]

      @return boolean
     */
    function isSelected()
    {
        return $this->m_Worksheet->isSelected();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.isVisible()]

      @return boolean
     */
    function isVisible()
    {
        return $this->m_Worksheet->isVisible();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.moveTo(int)]

      @param pInt0  int
     */
    function moveTo($pInt0)
    {
        $this->m_Worksheet->moveTo($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.protect(int)]

      @param pInt0  int
     */
    function protectI($pInt0)
    {
        $this->m_Worksheet->protect($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.protect(int, java.lang.String, java.lang.String)]

      @param pInt0  int
      @param oString1  String
      @param oString2  String
     */
    function protectISS($pInt0, $oString1, $oString2)
    {
        $this->m_Worksheet->protect($pInt0, $oString1, $oString2);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.removeAllDrawingObjects()]

     */
    function removeAllDrawingObjects()
    {
        $this->m_Worksheet->removeAllDrawingObjects();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.removeAutoFilter()]

     */
    function removeAutoFilter()
    {
        $this->m_Worksheet->removeAutoFilter();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.removeSplit()]

     */
    function removeSplit()
    {
        $this->m_Worksheet->removeSplit();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.replace(java.lang.String, java.lang.String)]

      @param oString0  String
      @param oString1  String
      @return int
     */
    function replace($oString0, $oString1)
    {
        return $this->m_Worksheet->replace($oString0, $oString1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.selectRange(int, int, int, int, boolean)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pBoolean4  boolean
     */
    function selectRange($pInt0, $pInt1, $pInt2, $pInt3, $pBoolean4)
    {
        $this->m_Worksheet->selectRange($pInt0, $pInt1, $pInt2, $pInt3, $pBoolean4);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setActiveCell(java.lang.String)]

      @param oString0  String
     */
    function setActiveCell($oString0)
    {
        $this->m_Worksheet->setActiveCell($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setBackground(byte[])]

      @param arrP1DByte0  byte[]
     */
    function setBackground($arrP1DByte0)
    {
        $this->m_Worksheet->setBackground($arrP1DByte0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setBackgroundImage(byte[])]

      @param arrP1DByte0  byte[]
     */
    function setBackgroundImage($arrP1DByte0)
    {
        $this->m_Worksheet->setBackgroundImage($arrP1DByte0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setDisplayRightToLeft(boolean)]

      @param pBoolean0  boolean
     */
    function setDisplayRightToLeft($pBoolean0)
    {
        $this->m_Worksheet->setDisplayRightToLeft($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setDisplayZeros(boolean)]

      @param pBoolean0  boolean
     */
    function setDisplayZeros($pBoolean0)
    {
        $this->m_Worksheet->setDisplayZeros($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setFirstVisibleColumn(int)]

      @param pInt0  int
     */
    function setFirstVisibleColumn($pInt0)
    {
        $this->m_Worksheet->setFirstVisibleColumn($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setFirstVisibleRow(int)]

      @param pInt0  int
     */
    function setFirstVisibleRow($pInt0)
    {
        $this->m_Worksheet->setFirstVisibleRow($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setGridlinesVisible(boolean)]

      @param pBoolean0  boolean
     */
    function setGridlinesVisible($pBoolean0)
    {
        $this->m_Worksheet->setGridlinesVisible($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setName(java.lang.String)]

      @param oString0  String
     */
    function setName($oString0)
    {
        $this->m_Worksheet->setName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setOutlineShown(boolean)]

      @param pBoolean0  boolean
     */
    function setOutlineShown($pBoolean0)
    {
        $this->m_Worksheet->setOutlineShown($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setPageBreakPreview(boolean)]

      @param pBoolean0  boolean
     */
    function setPageBreakPreview($pBoolean0)
    {
        $this->m_Worksheet->setPageBreakPreview($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setRowColumnHeadersVisible(boolean)]

      @param pBoolean0  boolean
     */
    function setRowColumnHeadersVisible($pBoolean0)
    {
        $this->m_Worksheet->setRowColumnHeadersVisible($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setRulerVisible(boolean)]

      @param pBoolean0  boolean
     */
    function setRulerVisible($pBoolean0)
    {
        $this->m_Worksheet->setRulerVisible($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setSelected(boolean)]

      @param pBoolean0  boolean
     */
    function setSelected($pBoolean0)
    {
        $this->m_Worksheet->setSelected($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setShowFormulas(boolean)]

      @param pBoolean0  boolean
     */
    function setShowFormulas($pBoolean0)
    {
        $this->m_Worksheet->setShowFormulas($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setTabColor(com.aspose.cells.Color)]

      @param oColor0  com.aspose.cells.Color
     */
    function setTabColor($oColor0)
    {
        $this->m_Worksheet->setTabColor(ClassFactory::_t1($oColor0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setTransitionEntry(boolean)]

      @param pBoolean0  boolean
     */
    function setTransitionEntry($pBoolean0)
    {
        $this->m_Worksheet->setTransitionEntry($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setTransitionEvaluation(boolean)]

      @param pBoolean0  boolean
     */
    function setTransitionEvaluation($pBoolean0)
    {
        $this->m_Worksheet->setTransitionEvaluation($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setType(int)]

      @param pInt0  int
     */
    function setType($pInt0)
    {
        $this->m_Worksheet->setType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setViewType(int)]

      @param pInt0  int
     */
    function setViewType($pInt0)
    {
        $this->m_Worksheet->setViewType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setVisibilityType(int)]

      @param pInt0  int
     */
    function setVisibilityType($pInt0)
    {
        $this->m_Worksheet->setVisibilityType($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setVisible(boolean)]

      @param pBoolean0  boolean
     */
    function setVisibleB($pBoolean0)
    {
        $this->m_Worksheet->setVisible($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setVisible(boolean, boolean)]

      @param pBoolean0  boolean
      @param pBoolean1  boolean
     */
    function setVisibleBB($pBoolean0, $pBoolean1)
    {
        $this->m_Worksheet->setVisible($pBoolean0, $pBoolean1);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.setZoom(int)]

      @param pInt0  int
     */
    function setZoom($pInt0)
    {
        $this->m_Worksheet->setZoom($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.split()]

     */
    function split()
    {
        $this->m_Worksheet->split();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.toString()]

      @return String
     */
    function toString()
    {
        return $this->m_Worksheet->toString();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.unFreezePanes()]

     */
    function unFreezePanes()
    {
        $this->m_Worksheet->unFreezePanes();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.unprotect()]

     */
    function unprotect()
    {
        $this->m_Worksheet->unprotect();
    }

    /*
      Wrapper for java version method [com.aspose.cells.Worksheet.unprotect(java.lang.String)]

      @param oString0  String
     */
    function unprotectS($oString0)
    {
        $this->m_Worksheet->unprotect($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.WorksheetCollection]
  
 */
class WorksheetCollection extends CollectionBase
{
    public $m_WorksheetCollection;
    
    function __construct($worksheetCollection)
    {
    	$this->m_WorksheetCollection = $worksheetCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.add()]

      @return int
     */
    function add()
    {
        return $this->m_WorksheetCollection->add();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.add(int)]

      @param pInt0  int
      @return int
     */
    function addI($pInt0)
    {
        return $this->m_WorksheetCollection->add($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.add(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.Worksheet
     */
    function addS($oString0)
    {
        return ClassFactory::_t2($this->m_WorksheetCollection->add($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.addCopy(int)]

      @param pInt0  int
      @return int
     */
    function addCopyI($pInt0)
    {
        return $this->m_WorksheetCollection->addCopy($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.addCopy(java.lang.String)]

      @param oString0  String
      @return int
     */
    function addCopyS($oString0)
    {
        return $this->m_WorksheetCollection->addCopy($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.clear()]

     */
    function clear()
    {
        $this->m_WorksheetCollection->clear();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.deleteName(java.lang.String)]

      @param oString0  String
     */
    function deleteName($oString0)
    {
        $this->m_WorksheetCollection->deleteName($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.Worksheet
     */
    function getI($pInt0)
    {
        return ClassFactory::_t2($this->m_WorksheetCollection->get($pInt0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.get(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.Worksheet
     */
    function getS($oString0)
    {
        return ClassFactory::_t2($this->m_WorksheetCollection->get($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getActiveSheetIndex()]

      @return int
     */
    function getActiveSheetIndex()
    {
        return $this->m_WorksheetCollection->getActiveSheetIndex();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getBuiltInDocumentProperties()]

      @return com.aspose.cells.BuiltInDocumentPropertyCollection
     */
    function getBuiltInDocumentProperties()
    {
        return ClassFactory::_t2($this->m_WorksheetCollection->getBuiltInDocumentProperties());
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getCustomDocumentProperties()]

      @return com.aspose.cells.CustomDocumentPropertyCollection
     */
    function getCustomDocumentProperties()
    {
        return ClassFactory::_t2($this->m_WorksheetCollection->getCustomDocumentProperties());
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getDxfs()]

      @return com.aspose.cells.DxfCollection
     */
    function getDxfs()
    {
        return ClassFactory::_t2($this->m_WorksheetCollection->getDxfs());
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getEnableHTTPCompression()]

      @return boolean
     */
    function getEnableHTTPCompression()
    {
        return $this->m_WorksheetCollection->getEnableHTTPCompression();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getExternalLinks()]

      @return com.aspose.cells.ExternalLinkCollection
     */
    function getExternalLinks()
    {
        return ClassFactory::_t2($this->m_WorksheetCollection->getExternalLinks());
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getHidePivotFieldList()]

      @return boolean
     */
    function getHidePivotFieldList()
    {
        return $this->m_WorksheetCollection->getHidePivotFieldList();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getNamedRanges()]

      @return com.aspose.cells.Range[]
     */
    function getNamedRanges()
    {
        return ClassFactory::_t2($this->m_WorksheetCollection->getNamedRanges());
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getNamedRangesAndTables()]

      @return com.aspose.cells.Range[]
     */
    function getNamedRangesAndTables()
    {
        return ClassFactory::_t2($this->m_WorksheetCollection->getNamedRangesAndTables());
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getNames()]

      @return com.aspose.cells.NameCollection
     */
    function getNames()
    {
        return ClassFactory::_t2($this->m_WorksheetCollection->getNames());
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getOleSize()]

      @return corresponding java type is {java.lang.Object}
     */
    function getOleSize()
    {
        return ClassFactory::_t2($this->m_WorksheetCollection->getOleSize());
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getRangeByName(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.Range
     */
    function getRangeByName($oString0)
    {
        return ClassFactory::_t2($this->m_WorksheetCollection->getRangeByName($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getSheetByCodeName(java.lang.String)]

      @param oString0  String
      @return com.aspose.cells.Worksheet
     */
    function getSheetByCodeName($oString0)
    {
        return ClassFactory::_t2($this->m_WorksheetCollection->getSheetByCodeName($oString0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getSheetTabBarWidth()]

      @return int
     */
    function getSheetTabBarWidth()
    {
        return $this->m_WorksheetCollection->getSheetTabBarWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getTableStyles()]

      @return com.aspose.cells.TableStyleCollection
     */
    function getTableStyles()
    {
        return ClassFactory::_t2($this->m_WorksheetCollection->getTableStyles());
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getWindowHeight()]

      @return double
     */
    function getWindowHeight()
    {
        return $this->m_WorksheetCollection->getWindowHeight();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getWindowHeightCM()]

      @return double
     */
    function getWindowHeightCM()
    {
        return $this->m_WorksheetCollection->getWindowHeightCM();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getWindowHeightInch()]

      @return double
     */
    function getWindowHeightInch()
    {
        return $this->m_WorksheetCollection->getWindowHeightInch();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getWindowLeft()]

      @return double
     */
    function getWindowLeft()
    {
        return $this->m_WorksheetCollection->getWindowLeft();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getWindowLeftCM()]

      @return double
     */
    function getWindowLeftCM()
    {
        return $this->m_WorksheetCollection->getWindowLeftCM();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getWindowLeftInch()]

      @return double
     */
    function getWindowLeftInch()
    {
        return $this->m_WorksheetCollection->getWindowLeftInch();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getWindowTop()]

      @return double
     */
    function getWindowTop()
    {
        return $this->m_WorksheetCollection->getWindowTop();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getWindowTopCM()]

      @return double
     */
    function getWindowTopCM()
    {
        return $this->m_WorksheetCollection->getWindowTopCM();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getWindowTopInch()]

      @return double
     */
    function getWindowTopInch()
    {
        return $this->m_WorksheetCollection->getWindowTopInch();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getWindowWidth()]

      @return double
     */
    function getWindowWidth()
    {
        return $this->m_WorksheetCollection->getWindowWidth();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getWindowWidthCM()]

      @return double
     */
    function getWindowWidthCM()
    {
        return $this->m_WorksheetCollection->getWindowWidthCM();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getWindowWidthInch()]

      @return double
     */
    function getWindowWidthInch()
    {
        return $this->m_WorksheetCollection->getWindowWidthInch();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.getXmlMaps()]

      @return com.aspose.cells.XmlMapCollection
     */
    function getXmlMaps()
    {
        return ClassFactory::_t2($this->m_WorksheetCollection->getXmlMaps());
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.insert(int, int)]

      @param pInt0  int
      @param pInt1  int
      @return com.aspose.cells.Worksheet
     */
    function insertII($pInt0, $pInt1)
    {
        return ClassFactory::_t2($this->m_WorksheetCollection->insert($pInt0, $pInt1));
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.insert(int, int, java.lang.String)]

      @param pInt0  int
      @param pInt1  int
      @param oString2  String
      @return com.aspose.cells.Worksheet
     */
    function insertIIS($pInt0, $pInt1, $oString2)
    {
        return ClassFactory::_t2($this->m_WorksheetCollection->insert($pInt0, $pInt1, $oString2));
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.isHidden()]

      @return boolean
     */
    function isHidden()
    {
        return $this->m_WorksheetCollection->isHidden();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.isMinimized()]

      @return boolean
     */
    function isMinimized()
    {
        return $this->m_WorksheetCollection->isMinimized();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.isRefreshAllConnections()]

      @return boolean
     */
    function isRefreshAllConnections()
    {
        return $this->m_WorksheetCollection->isRefreshAllConnections();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.removeAt(int)]

      @param pInt0  int
     */
    function removeAtI($pInt0)
    {
        $this->m_WorksheetCollection->removeAt($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.removeAt(java.lang.String)]

      @param oString0  String
     */
    function removeAtS($oString0)
    {
        $this->m_WorksheetCollection->removeAt($oString0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.setActiveSheetIndex(int)]

      @param pInt0  int
     */
    function setActiveSheetIndex($pInt0)
    {
        $this->m_WorksheetCollection->setActiveSheetIndex($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.setEnableHTTPCompression(boolean)]

      @param pBoolean0  boolean
     */
    function setEnableHTTPCompression($pBoolean0)
    {
        $this->m_WorksheetCollection->setEnableHTTPCompression($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.setHidden(boolean)]

      @param pBoolean0  boolean
     */
    function setHidden($pBoolean0)
    {
        $this->m_WorksheetCollection->setHidden($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.setHidePivotFieldList(boolean)]

      @param pBoolean0  boolean
     */
    function setHidePivotFieldList($pBoolean0)
    {
        $this->m_WorksheetCollection->setHidePivotFieldList($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.setMinimized(boolean)]

      @param pBoolean0  boolean
     */
    function setMinimized($pBoolean0)
    {
        $this->m_WorksheetCollection->setMinimized($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.setOleSize(java.lang.Object)]

      @param oObject0  corresponding java type is {java.lang.Object}
     */
    function setOleSizeO($oObject0)
    {
        $this->m_WorksheetCollection->setOleSize(ClassFactory::_t1($oObject0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.setOleSize(int, int, int, int)]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
     */
    function setOleSizeIIII($pInt0, $pInt1, $pInt2, $pInt3)
    {
        $this->m_WorksheetCollection->setOleSize($pInt0, $pInt1, $pInt2, $pInt3);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.setRefreshAllConnections(boolean)]

      @param pBoolean0  boolean
     */
    function setRefreshAllConnections($pBoolean0)
    {
        $this->m_WorksheetCollection->setRefreshAllConnections($pBoolean0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.setSheetTabBarWidth(int)]

      @param pInt0  int
     */
    function setSheetTabBarWidth($pInt0)
    {
        $this->m_WorksheetCollection->setSheetTabBarWidth($pInt0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.setWindowHeight(double)]

      @param pDouble0  double
     */
    function setWindowHeight($pDouble0)
    {
        $this->m_WorksheetCollection->setWindowHeight($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.setWindowHeightCM(double)]

      @param pDouble0  double
     */
    function setWindowHeightCM($pDouble0)
    {
        $this->m_WorksheetCollection->setWindowHeightCM($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.setWindowHeightInch(double)]

      @param pDouble0  double
     */
    function setWindowHeightInch($pDouble0)
    {
        $this->m_WorksheetCollection->setWindowHeightInch($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.setWindowLeft(double)]

      @param pDouble0  double
     */
    function setWindowLeft($pDouble0)
    {
        $this->m_WorksheetCollection->setWindowLeft($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.setWindowLeftCM(double)]

      @param pDouble0  double
     */
    function setWindowLeftCM($pDouble0)
    {
        $this->m_WorksheetCollection->setWindowLeftCM($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.setWindowLeftInch(double)]

      @param pDouble0  double
     */
    function setWindowLeftInch($pDouble0)
    {
        $this->m_WorksheetCollection->setWindowLeftInch($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.setWindowTop(double)]

      @param pDouble0  double
     */
    function setWindowTop($pDouble0)
    {
        $this->m_WorksheetCollection->setWindowTop($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.setWindowTopCM(double)]

      @param pDouble0  double
     */
    function setWindowTopCM($pDouble0)
    {
        $this->m_WorksheetCollection->setWindowTopCM($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.setWindowTopInch(double)]

      @param pDouble0  double
     */
    function setWindowTopInch($pDouble0)
    {
        $this->m_WorksheetCollection->setWindowTopInch($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.setWindowWidth(double)]

      @param pDouble0  double
     */
    function setWindowWidth($pDouble0)
    {
        $this->m_WorksheetCollection->setWindowWidth($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.setWindowWidthCM(double)]

      @param pDouble0  double
     */
    function setWindowWidthCM($pDouble0)
    {
        $this->m_WorksheetCollection->setWindowWidthCM($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.setWindowWidthInch(double)]

      @param pDouble0  double
     */
    function setWindowWidthInch($pDouble0)
    {
        $this->m_WorksheetCollection->setWindowWidthInch($pDouble0);
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.setXmlMaps(com.aspose.cells.XmlMapCollection)]

      @param oXmlMapCollection0  com.aspose.cells.XmlMapCollection
     */
    function setXmlMaps($oXmlMapCollection0)
    {
        $this->m_WorksheetCollection->setXmlMaps(ClassFactory::_t1($oXmlMapCollection0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.sortNames()]

     */
    function sortNames()
    {
        $this->m_WorksheetCollection->sortNames();
    }

    /*
      Wrapper for java version method [com.aspose.cells.WorksheetCollection.swapSheet(int, int)]

      @param pInt0  int
      @param pInt1  int
     */
    function swapSheet($pInt0, $pInt1)
    {
        $this->m_WorksheetCollection->swapSheet($pInt0, $pInt1);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.X509Certificate2]
  
 */
class X509Certificate2
{
    public $m_X509Certificate2;
    
    function __construct($x509Certificate2)
    {
    	$this->m_X509Certificate2 = $x509Certificate2;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.XlsbSaveOptions]
  
 */
class XlsbSaveOptions extends SaveOptions
{
    public $m_XlsbSaveOptions;
    
    function __construct($xlsbSaveOptions)
    {
    	$this->m_XlsbSaveOptions = $xlsbSaveOptions;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.XlsSaveOptions]
  
 */
class XlsSaveOptions extends SaveOptions
{
    public $m_XlsSaveOptions;
    
    function __construct($xlsSaveOptions)
    {
    	$this->m_XlsSaveOptions = $xlsSaveOptions;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.XlsSaveOptions.getLightCellsDataProvider()]

      @return com.aspose.cells.LightCellsDataProvider
     */
    function getLightCellsDataProvider()
    {
        return ClassFactory::_t2($this->m_XlsSaveOptions->getLightCellsDataProvider());
    }

    /*
      Wrapper for java version method [com.aspose.cells.XlsSaveOptions.isTemplate()]

      @return boolean
     */
    function isTemplate()
    {
        return $this->m_XlsSaveOptions->isTemplate();
    }

    /*
      Wrapper for java version method [com.aspose.cells.XlsSaveOptions.setLightCellsDataProvider(com.aspose.cells.LightCellsDataProvider)]

      @param oLightCellsDataProvider0  com.aspose.cells.LightCellsDataProvider
     */
    function setLightCellsDataProvider($oLightCellsDataProvider0)
    {
        $this->m_XlsSaveOptions->setLightCellsDataProvider(ClassFactory::_t1($oLightCellsDataProvider0));
    }

    /*
      Wrapper for java version method [com.aspose.cells.XlsSaveOptions.setTemplate(boolean)]

      @param pBoolean0  boolean
     */
    function setTemplate($pBoolean0)
    {
        $this->m_XlsSaveOptions->setTemplate($pBoolean0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.XmlColumnProperty]
  
 */
class XmlColumnProperty
{
    public $m_XmlColumnProperty;
    
    function __construct($xmlColumnProperty)
    {
    	$this->m_XmlColumnProperty = $xmlColumnProperty;
    }
    }

/*
  Wrapper for java version Class [com.aspose.cells.XmlDataBinding]
  
 */
class XmlDataBinding
{
    public $m_XmlDataBinding;
    
    function __construct($xmlDataBinding)
    {
    	$this->m_XmlDataBinding = $xmlDataBinding;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.XmlDataBinding.getDataBindingName()]

      @return String
     */
    function getDataBindingName()
    {
        return $this->m_XmlDataBinding->getDataBindingName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.XmlDataBinding.setDataBindingName(java.lang.String)]

      @param oString0  String
     */
    function setDataBindingName($oString0)
    {
        $this->m_XmlDataBinding->setDataBindingName($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.XmlMap]
  
 */
class XmlMap
{
    public $m_XmlMap;
    
    function __construct($xmlMap)
    {
    	$this->m_XmlMap = $xmlMap;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.XmlMap.getName()]

      @return String
     */
    function getName()
    {
        return $this->m_XmlMap->getName();
    }

    /*
      Wrapper for java version method [com.aspose.cells.XmlMap.setName(java.lang.String)]

      @param oString0  String
     */
    function setName($oString0)
    {
        $this->m_XmlMap->setName($oString0);
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.XmlMapCollection]
  
 */
class XmlMapCollection extends CollectionBase
{
    public $m_XmlMapCollection;
    
    function __construct($xmlMapCollection)
    {
    	$this->m_XmlMapCollection = $xmlMapCollection;
    }
    
    /*
      Wrapper for java version method [com.aspose.cells.XmlMapCollection.get(int)]

      @param pInt0  int
      @return com.aspose.cells.XmlMap
     */
    function get($pInt0)
    {
        return ClassFactory::_t2($this->m_XmlMapCollection->get($pInt0));
    }
}

/*
  Wrapper for java version Class [com.aspose.cells.XpsSaveOptions]
  
 */
class XpsSaveOptions extends SaveOptions
{
    public $m_XpsSaveOptions;
    
    function __construct($xpsSaveOptions)
    {
    	$this->m_XpsSaveOptions = $xpsSaveOptions;
    }
    }

class ClassFactory 
{
    static $_vv1 = array(
        "com.aspose.cells.FillType"=>"FillType1",
        );


    /*
      create new wrapped class [AboveAverage] for java version [com.aspose.cells.AboveAverage]

    */
    static function createAboveAverage()
    {
        $aboveAverage = new Java('com.aspose.cells.AboveAverage');
        return new AboveAverage($aboveAverage);
    }
    
    /*
      create new wrapped class [AutoFitterOptions] for java version [com.aspose.cells.AutoFitterOptions]

    */
    static function createAutoFitterOptions()
    {
        $autoFitterOptions = new Java('com.aspose.cells.AutoFitterOptions');
        return new AutoFitterOptions($autoFitterOptions);
    }
    
    /*
      create new wrapped class [CellArea] for java version [com.aspose.cells.CellArea]

    */
    static function createCellArea()
    {
        $cellArea = new Java('com.aspose.cells.CellArea');
        return new CellArea($cellArea);
    }
    
    /*
      create new wrapped class [Cells_DateTime] for java version [com.aspose.cells.Cells_DateTime]
      WARNNING
        the parameter[oCalendar0] maybe has no Php-wrapper.

      @param oCalendar0  corresponding java type is {java.util.Calendar}
    */
    static function createCells_DateTime($oCalendar0)
    {
        $cells_DateTime = new Java('com.aspose.cells.Cells_DateTime', ClassFactory::_t1($oCalendar0));
        return new Cells_DateTime($cells_DateTime);
    }
    
    /*
      create new wrapped class [Cells_DateTime] for java version [com.aspose.cells.Cells_DateTime]
      WARNNING
        the parameter[oDate0] maybe has no Php-wrapper.

      @param oDate0  corresponding java type is {java.util.Date}
    */
    static function create1Cells_DateTime($oDate0)
    {
        $cells_DateTime = new Java('com.aspose.cells.Cells_DateTime', ClassFactory::_t1($oDate0));
        return new Cells_DateTime($cells_DateTime);
    }
    
    /*
      create new wrapped class [Cells_DateTime] for java version [com.aspose.cells.Cells_DateTime]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
    */
    static function create2Cells_DateTime($pInt0, $pInt1, $pInt2)
    {
        $cells_DateTime = new Java('com.aspose.cells.Cells_DateTime', $pInt0, $pInt1, $pInt2);
        return new Cells_DateTime($cells_DateTime);
    }
    
    /*
      create new wrapped class [Cells_DateTime] for java version [com.aspose.cells.Cells_DateTime]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pInt4  int
      @param pInt5  int
    */
    static function create3Cells_DateTime($pInt0, $pInt1, $pInt2, $pInt3, $pInt4, $pInt5)
    {
        $cells_DateTime = new Java('com.aspose.cells.Cells_DateTime', $pInt0, $pInt1, $pInt2, $pInt3, $pInt4, $pInt5);
        return new Cells_DateTime($cells_DateTime);
    }
    
    /*
      create new wrapped class [Cells_DateTime] for java version [com.aspose.cells.Cells_DateTime]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pInt4  int
      @param pInt5  int
      @param pInt6  int
    */
    static function create4Cells_DateTime($pInt0, $pInt1, $pInt2, $pInt3, $pInt4, $pInt5, $pInt6)
    {
        $cells_DateTime = new Java('com.aspose.cells.Cells_DateTime', $pInt0, $pInt1, $pInt2, $pInt3, $pInt4, $pInt5, $pInt6);
        return new Cells_DateTime($cells_DateTime);
    }
    
    /*
      create new wrapped class [CellsHelper] for java version [com.aspose.cells.CellsHelper]

    */
    static function createCellsHelper()
    {
        $cellsHelper = new Java('com.aspose.cells.CellsHelper');
        return new CellsHelper($cellsHelper);
    }
    
    /*
      create new wrapped class [CollectionBase] for java version [com.aspose.cells.CollectionBase]

    */
    static function createCollectionBase()
    {
        $collectionBase = new Java('com.aspose.cells.CollectionBase');
        return new CollectionBase($collectionBase);
    }
    
    /*
      create new wrapped class [CollectionBase] for java version [com.aspose.cells.CollectionBase]

      @param pInt0  int
    */
    static function create1CollectionBase($pInt0)
    {
        $collectionBase = new Java('com.aspose.cells.CollectionBase', $pInt0);
        return new CollectionBase($collectionBase);
    }
    
    /*
      create new wrapped class [Color] for java version [com.aspose.cells.Color]

    */
    static function createColor()
    {
        $color = new Java('com.aspose.cells.Color');
        return new Color($color);
    }
    
    /*
      create new wrapped class [CopyOptions] for java version [com.aspose.cells.CopyOptions]

    */
    static function createCopyOptions()
    {
        $copyOptions = new Java('com.aspose.cells.CopyOptions');
        return new CopyOptions($copyOptions);
    }
    
    /*
      create new wrapped class [CustomFilter] for java version [com.aspose.cells.CustomFilter]

    */
    static function createCustomFilter()
    {
        $customFilter = new Java('com.aspose.cells.CustomFilter');
        return new CustomFilter($customFilter);
    }
    
    /*
      create new wrapped class [CustomFilterCollection] for java version [com.aspose.cells.CustomFilterCollection]

    */
    static function createCustomFilterCollection()
    {
        $customFilterCollection = new Java('com.aspose.cells.CustomFilterCollection');
        return new CustomFilterCollection($customFilterCollection);
    }
    
    /*
      create new wrapped class [CustomProperty] for java version [com.aspose.cells.CustomProperty]

    */
    static function createCustomProperty()
    {
        $customProperty = new Java('com.aspose.cells.CustomProperty');
        return new CustomProperty($customProperty);
    }
    
    /*
      create new wrapped class [DateTimeGroupItem] for java version [com.aspose.cells.DateTimeGroupItem]

      @param pInt0  int
      @param pInt1  int
      @param pInt2  int
      @param pInt3  int
      @param pInt4  int
      @param pInt5  int
      @param pInt6  int
    */
    static function createDateTimeGroupItem($pInt0, $pInt1, $pInt2, $pInt3, $pInt4, $pInt5, $pInt6)
    {
        $dateTimeGroupItem = new Java('com.aspose.cells.DateTimeGroupItem', $pInt0, $pInt1, $pInt2, $pInt3, $pInt4, $pInt5, $pInt6);
        return new DateTimeGroupItem($dateTimeGroupItem);
    }
    
    /*
      create new wrapped class [DifSaveOptions] for java version [com.aspose.cells.DifSaveOptions]

    */
    static function createDifSaveOptions()
    {
        $difSaveOptions = new Java('com.aspose.cells.DifSaveOptions');
        return new DifSaveOptions($difSaveOptions);
    }
    
    /*
      create new wrapped class [DigitalSignature] for java version [com.aspose.cells.DigitalSignature]
      WARNNING
        the parameter[oKeyStore0] maybe has no Php-wrapper.
        the parameter[oCells_DateTime3] maybe has no Php-wrapper.

      @param oKeyStore0  corresponding java type is {java.security.KeyStore}
      @param oString1  String
      @param oString2  String
      @param oCells_DateTime3  corresponding java type is {com.aspose.cells.DateTime}
    */
    static function createDigitalSignature($oKeyStore0, $oString1, $oString2, $oCells_DateTime3)
    {
        $digitalSignature = new Java('com.aspose.cells.DigitalSignature', ClassFactory::_t1($oKeyStore0), $oString1, $oString2, ClassFactory::_t1($oCells_DateTime3));
        return new DigitalSignature($digitalSignature);
    }
    
    /*
      create new wrapped class [DigitalSignature] for java version [com.aspose.cells.DigitalSignature]
      WARNNING
        the parameter[oX509Certificate0] maybe has no Php-wrapper.
        the parameter[oCells_DateTime2] maybe has no Php-wrapper.

      @param oX509Certificate0  corresponding java type is {javax.security.cert.X509Certificate}
      @param oString1  String
      @param oCells_DateTime2  corresponding java type is {com.aspose.cells.DateTime}
      @param pBoolean3  boolean
    */
    static function create1DigitalSignature($oX509Certificate0, $oString1, $oCells_DateTime2, $pBoolean3)
    {
        $digitalSignature = new Java('com.aspose.cells.DigitalSignature', ClassFactory::_t1($oX509Certificate0), $oString1, ClassFactory::_t1($oCells_DateTime2), $pBoolean3);
        return new DigitalSignature($digitalSignature);
    }
    
    /*
      create new wrapped class [DigitalSignatureCollection] for java version [com.aspose.cells.DigitalSignatureCollection]

    */
    static function createDigitalSignatureCollection()
    {
        $digitalSignatureCollection = new Java('com.aspose.cells.DigitalSignatureCollection');
        return new DigitalSignatureCollection($digitalSignatureCollection);
    }
    
    /*
      create new wrapped class [DrawObjectEventHandler] for java version [com.aspose.cells.DrawObjectEventHandler]

    */
    static function createDrawObjectEventHandler()
    {
        $drawObjectEventHandler = new Java('com.aspose.cells.DrawObjectEventHandler');
        return new DrawObjectEventHandler($drawObjectEventHandler);
    }
    
    /*
      create new wrapped class [ExportTableOptions] for java version [com.aspose.cells.ExportTableOptions]

    */
    static function createExportTableOptions()
    {
        $exportTableOptions = new Java('com.aspose.cells.ExportTableOptions');
        return new ExportTableOptions($exportTableOptions);
    }
    
    /*
      create new wrapped class [FileFormatInfo] for java version [com.aspose.cells.FileFormatInfo]

    */
    static function createFileFormatInfo()
    {
        $fileFormatInfo = new Java('com.aspose.cells.FileFormatInfo');
        return new FileFormatInfo($fileFormatInfo);
    }
    
    /*
      create new wrapped class [FileFormatUtil] for java version [com.aspose.cells.FileFormatUtil]

    */
    static function createFileFormatUtil()
    {
        $fileFormatUtil = new Java('com.aspose.cells.FileFormatUtil');
        return new FileFormatUtil($fileFormatUtil);
    }
    
    /*
      create new wrapped class [FindOptions] for java version [com.aspose.cells.FindOptions]

    */
    static function createFindOptions()
    {
        $findOptions = new Java('com.aspose.cells.FindOptions');
        return new FindOptions($findOptions);
    }
    
    /*
      create new wrapped class [HTMLLoadOptions] for java version [com.aspose.cells.HTMLLoadOptions]

    */
    static function createHTMLLoadOptions()
    {
        $hTMLLoadOptions = new Java('com.aspose.cells.HTMLLoadOptions');
        return new HTMLLoadOptions($hTMLLoadOptions);
    }
    
    /*
      create new wrapped class [HTMLLoadOptions] for java version [com.aspose.cells.HTMLLoadOptions]

      @param pInt0  int
    */
    static function create1HTMLLoadOptions($pInt0)
    {
        $hTMLLoadOptions = new Java('com.aspose.cells.HTMLLoadOptions', $pInt0);
        return new HTMLLoadOptions($hTMLLoadOptions);
    }
    
    /*
      create new wrapped class [HtmlSaveOptions] for java version [com.aspose.cells.HtmlSaveOptions]

    */
    static function createHtmlSaveOptions()
    {
        $htmlSaveOptions = new Java('com.aspose.cells.HtmlSaveOptions');
        return new HtmlSaveOptions($htmlSaveOptions);
    }
    
    /*
      create new wrapped class [HtmlSaveOptions] for java version [com.aspose.cells.HtmlSaveOptions]

      @param pInt0  int
    */
    static function create1HtmlSaveOptions($pInt0)
    {
        $htmlSaveOptions = new Java('com.aspose.cells.HtmlSaveOptions', $pInt0);
        return new HtmlSaveOptions($htmlSaveOptions);
    }
    
    /*
      create new wrapped class [ImageOrPrintOptions] for java version [com.aspose.cells.ImageOrPrintOptions]

    */
    static function createImageOrPrintOptions()
    {
        $imageOrPrintOptions = new Java('com.aspose.cells.ImageOrPrintOptions');
        return new ImageOrPrintOptions($imageOrPrintOptions);
    }
    
    /*
      create new wrapped class [ImageSaveOptions] for java version [com.aspose.cells.ImageSaveOptions]

    */
    static function createImageSaveOptions()
    {
        $imageSaveOptions = new Java('com.aspose.cells.ImageSaveOptions');
        return new ImageSaveOptions($imageSaveOptions);
    }
    
    /*
      create new wrapped class [ImageSaveOptions] for java version [com.aspose.cells.ImageSaveOptions]

      @param pInt0  int
    */
    static function create1ImageSaveOptions($pInt0)
    {
        $imageSaveOptions = new Java('com.aspose.cells.ImageSaveOptions', $pInt0);
        return new ImageSaveOptions($imageSaveOptions);
    }
    
    /*
      create new wrapped class [ImportTableOptions] for java version [com.aspose.cells.ImportTableOptions]

    */
    static function createImportTableOptions()
    {
        $importTableOptions = new Java('com.aspose.cells.ImportTableOptions');
        return new ImportTableOptions($importTableOptions);
    }
    
    /*
      create new wrapped class [InterruptMonitor] for java version [com.aspose.cells.InterruptMonitor]

    */
    static function createInterruptMonitor()
    {
        $interruptMonitor = new Java('com.aspose.cells.InterruptMonitor');
        return new InterruptMonitor($interruptMonitor);
    }
    
    /*
      create new wrapped class [License] for java version [com.aspose.cells.License]

    */
    static function createLicense()
    {
        $license = new Java('com.aspose.cells.License');
        return new License($license);
    }
    
    /*
      create new wrapped class [LoadDataOption] for java version [com.aspose.cells.LoadDataOption]

    */
    static function createLoadDataOption()
    {
        $loadDataOption = new Java('com.aspose.cells.LoadDataOption');
        return new LoadDataOption($loadDataOption);
    }
    
    /*
      create new wrapped class [LoadOptions] for java version [com.aspose.cells.LoadOptions]

    */
    static function createLoadOptions()
    {
        $loadOptions = new Java('com.aspose.cells.LoadOptions');
        return new LoadOptions($loadOptions);
    }
    
    /*
      create new wrapped class [LoadOptions] for java version [com.aspose.cells.LoadOptions]

      @param pInt0  int
    */
    static function create1LoadOptions($pInt0)
    {
        $loadOptions = new Java('com.aspose.cells.LoadOptions', $pInt0);
        return new LoadOptions($loadOptions);
    }
    
    /*
      create new wrapped class [MultipleFilterCollection] for java version [com.aspose.cells.MultipleFilterCollection]

    */
    static function createMultipleFilterCollection()
    {
        $multipleFilterCollection = new Java('com.aspose.cells.MultipleFilterCollection');
        return new MultipleFilterCollection($multipleFilterCollection);
    }
    
    /*
      create new wrapped class [OdsSaveOptions] for java version [com.aspose.cells.OdsSaveOptions]

    */
    static function createOdsSaveOptions()
    {
        $odsSaveOptions = new Java('com.aspose.cells.OdsSaveOptions');
        return new OdsSaveOptions($odsSaveOptions);
    }
    
    /*
      create new wrapped class [OdsSaveOptions] for java version [com.aspose.cells.OdsSaveOptions]

      @param pInt0  int
    */
    static function create1OdsSaveOptions($pInt0)
    {
        $odsSaveOptions = new Java('com.aspose.cells.OdsSaveOptions', $pInt0);
        return new OdsSaveOptions($odsSaveOptions);
    }
    
    /*
      create new wrapped class [OoxmlSaveOptions] for java version [com.aspose.cells.OoxmlSaveOptions]

    */
    static function createOoxmlSaveOptions()
    {
        $ooxmlSaveOptions = new Java('com.aspose.cells.OoxmlSaveOptions');
        return new OoxmlSaveOptions($ooxmlSaveOptions);
    }
    
    /*
      create new wrapped class [OoxmlSaveOptions] for java version [com.aspose.cells.OoxmlSaveOptions]

      @param pInt0  int
    */
    static function create1OoxmlSaveOptions($pInt0)
    {
        $ooxmlSaveOptions = new Java('com.aspose.cells.OoxmlSaveOptions', $pInt0);
        return new OoxmlSaveOptions($ooxmlSaveOptions);
    }
    
    /*
      create new wrapped class [ParsedInfo] for java version [com.aspose.cells.ParsedInfo]

    */
    static function createParsedInfo()
    {
        $parsedInfo = new Java('com.aspose.cells.ParsedInfo');
        return new ParsedInfo($parsedInfo);
    }
    
    /*
      create new wrapped class [PasteOptions] for java version [com.aspose.cells.PasteOptions]

    */
    static function createPasteOptions()
    {
        $pasteOptions = new Java('com.aspose.cells.PasteOptions');
        return new PasteOptions($pasteOptions);
    }
    
    /*
      create new wrapped class [PdfBookmarkEntry] for java version [com.aspose.cells.PdfBookmarkEntry]

    */
    static function createPdfBookmarkEntry()
    {
        $pdfBookmarkEntry = new Java('com.aspose.cells.PdfBookmarkEntry');
        return new PdfBookmarkEntry($pdfBookmarkEntry);
    }
    
    /*
      create new wrapped class [PdfSaveOptions] for java version [com.aspose.cells.PdfSaveOptions]

    */
    static function createPdfSaveOptions()
    {
        $pdfSaveOptions = new Java('com.aspose.cells.PdfSaveOptions');
        return new PdfSaveOptions($pdfSaveOptions);
    }
    
    /*
      create new wrapped class [PdfSaveOptions] for java version [com.aspose.cells.PdfSaveOptions]

      @param pInt0  int
    */
    static function create1PdfSaveOptions($pInt0)
    {
        $pdfSaveOptions = new Java('com.aspose.cells.PdfSaveOptions', $pInt0);
        return new PdfSaveOptions($pdfSaveOptions);
    }
    
    /*
      create new wrapped class [PdfSecurityOptions] for java version [com.aspose.cells.PdfSecurityOptions]

    */
    static function createPdfSecurityOptions()
    {
        $pdfSecurityOptions = new Java('com.aspose.cells.PdfSecurityOptions');
        return new PdfSecurityOptions($pdfSecurityOptions);
    }
    
    /*
      create new wrapped class [PicFormatOption] for java version [com.aspose.cells.PicFormatOption]

    */
    static function createPicFormatOption()
    {
        $picFormatOption = new Java('com.aspose.cells.PicFormatOption');
        return new PicFormatOption($picFormatOption);
    }
    
    /*
      create new wrapped class [PivotPageFields] for java version [com.aspose.cells.PivotPageFields]

    */
    static function createPivotPageFields()
    {
        $pivotPageFields = new Java('com.aspose.cells.PivotPageFields');
        return new PivotPageFields($pivotPageFields);
    }
    
    /*
      create new wrapped class [QueryTable] for java version [com.aspose.cells.QueryTable]

    */
    static function createQueryTable()
    {
        $queryTable = new Java('com.aspose.cells.QueryTable');
        return new QueryTable($queryTable);
    }
    
    /*
      create new wrapped class [ReplaceOptions] for java version [com.aspose.cells.ReplaceOptions]

    */
    static function createReplaceOptions()
    {
        $replaceOptions = new Java('com.aspose.cells.ReplaceOptions');
        return new ReplaceOptions($replaceOptions);
    }
    
    /*
      create new wrapped class [ShapePath] for java version [com.aspose.cells.ShapePath]

    */
    static function createShapePath()
    {
        $shapePath = new Java('com.aspose.cells.ShapePath');
        return new ShapePath($shapePath);
    }
    
    /*
      create new wrapped class [ShapePathPointCollection] for java version [com.aspose.cells.ShapePathPointCollection]

    */
    static function createShapePathPointCollection()
    {
        $shapePathPointCollection = new Java('com.aspose.cells.ShapePathPointCollection');
        return new ShapePathPointCollection($shapePathPointCollection);
    }
    
    /*
      create new wrapped class [ShapeSegmentPathCollection] for java version [com.aspose.cells.ShapeSegmentPathCollection]

    */
    static function createShapeSegmentPathCollection()
    {
        $shapeSegmentPathCollection = new Java('com.aspose.cells.ShapeSegmentPathCollection');
        return new ShapeSegmentPathCollection($shapeSegmentPathCollection);
    }
    
    /*
      create new wrapped class [SheetRender] for java version [com.aspose.cells.SheetRender]

      @param oWorksheet0  com.aspose.cells.Worksheet
      @param oImageOrPrintOptions1  com.aspose.cells.ImageOrPrintOptions
    */
    static function createSheetRender($oWorksheet0, $oImageOrPrintOptions1)
    {
        $sheetRender = new Java('com.aspose.cells.SheetRender', ClassFactory::_t1($oWorksheet0), ClassFactory::_t1($oImageOrPrintOptions1));
        return new SheetRender($sheetRender);
    }
    
    /*
      create new wrapped class [SmartTagOptions] for java version [com.aspose.cells.SmartTagOptions]

    */
    static function createSmartTagOptions()
    {
        $smartTagOptions = new Java('com.aspose.cells.SmartTagOptions');
        return new SmartTagOptions($smartTagOptions);
    }
    
    /*
      create new wrapped class [SmartTagPropertyCollection] for java version [com.aspose.cells.SmartTagPropertyCollection]

    */
    static function createSmartTagPropertyCollection()
    {
        $smartTagPropertyCollection = new Java('com.aspose.cells.SmartTagPropertyCollection');
        return new SmartTagPropertyCollection($smartTagPropertyCollection);
    }
    
    /*
      create new wrapped class [SpreadsheetML2003SaveOptions] for java version [com.aspose.cells.SpreadsheetML2003SaveOptions]

    */
    static function createSpreadsheetML2003SaveOptions()
    {
        $spreadsheetML2003SaveOptions = new Java('com.aspose.cells.SpreadsheetML2003SaveOptions');
        return new SpreadsheetML2003SaveOptions($spreadsheetML2003SaveOptions);
    }
    
    /*
      create new wrapped class [SpreadsheetML2003SaveOptions] for java version [com.aspose.cells.SpreadsheetML2003SaveOptions]

      @param pInt0  int
    */
    static function create1SpreadsheetML2003SaveOptions($pInt0)
    {
        $spreadsheetML2003SaveOptions = new Java('com.aspose.cells.SpreadsheetML2003SaveOptions', $pInt0);
        return new SpreadsheetML2003SaveOptions($spreadsheetML2003SaveOptions);
    }
    
    /*
      create new wrapped class [StreamProviderOptions] for java version [com.aspose.cells.StreamProviderOptions]

    */
    static function createStreamProviderOptions()
    {
        $streamProviderOptions = new Java('com.aspose.cells.StreamProviderOptions');
        return new StreamProviderOptions($streamProviderOptions);
    }
    
    /*
      create new wrapped class [Style] for java version [com.aspose.cells.Style]

    */
    static function createStyle()
    {
        $style = new Java('com.aspose.cells.Style');
        return new Style($style);
    }
    
    /*
      create new wrapped class [StyleFlag] for java version [com.aspose.cells.StyleFlag]

    */
    static function createStyleFlag()
    {
        $styleFlag = new Java('com.aspose.cells.StyleFlag');
        return new StyleFlag($styleFlag);
    }
    
    /*
      create new wrapped class [SvgSaveOptions] for java version [com.aspose.cells.SvgSaveOptions]

    */
    static function createSvgSaveOptions()
    {
        $svgSaveOptions = new Java('com.aspose.cells.SvgSaveOptions');
        return new SvgSaveOptions($svgSaveOptions);
    }
    
    /*
      create new wrapped class [SvgSaveOptions] for java version [com.aspose.cells.SvgSaveOptions]

      @param pInt0  int
    */
    static function create1SvgSaveOptions($pInt0)
    {
        $svgSaveOptions = new Java('com.aspose.cells.SvgSaveOptions', $pInt0);
        return new SvgSaveOptions($svgSaveOptions);
    }
    
    /*
      create new wrapped class [ThemeColor] for java version [com.aspose.cells.ThemeColor]

      @param pInt0  int
      @param pDouble1  double
    */
    static function createThemeColor($pInt0, $pDouble1)
    {
        $themeColor = new Java('com.aspose.cells.ThemeColor', $pInt0, $pDouble1);
        return new ThemeColor($themeColor);
    }
    
    /*
      create new wrapped class [TilePicOption] for java version [com.aspose.cells.TilePicOption]

    */
    static function createTilePicOption()
    {
        $tilePicOption = new Java('com.aspose.cells.TilePicOption');
        return new TilePicOption($tilePicOption);
    }
    
    /*
      create new wrapped class [Top10] for java version [com.aspose.cells.Top10]

    */
    static function createTop10()
    {
        $top10 = new Java('com.aspose.cells.Top10');
        return new Top10($top10);
    }
    
    /*
      create new wrapped class [TxtLoadOptions] for java version [com.aspose.cells.TxtLoadOptions]

    */
    static function createTxtLoadOptions()
    {
        $txtLoadOptions = new Java('com.aspose.cells.TxtLoadOptions');
        return new TxtLoadOptions($txtLoadOptions);
    }
    
    /*
      create new wrapped class [TxtLoadOptions] for java version [com.aspose.cells.TxtLoadOptions]

      @param pInt0  int
    */
    static function create1TxtLoadOptions($pInt0)
    {
        $txtLoadOptions = new Java('com.aspose.cells.TxtLoadOptions', $pInt0);
        return new TxtLoadOptions($txtLoadOptions);
    }
    
    /*
      create new wrapped class [TxtSaveOptions] for java version [com.aspose.cells.TxtSaveOptions]

    */
    static function createTxtSaveOptions()
    {
        $txtSaveOptions = new Java('com.aspose.cells.TxtSaveOptions');
        return new TxtSaveOptions($txtSaveOptions);
    }
    
    /*
      create new wrapped class [TxtSaveOptions] for java version [com.aspose.cells.TxtSaveOptions]

      @param pInt0  int
    */
    static function create1TxtSaveOptions($pInt0)
    {
        $txtSaveOptions = new Java('com.aspose.cells.TxtSaveOptions', $pInt0);
        return new TxtSaveOptions($txtSaveOptions);
    }
    
    /*
      create new wrapped class [Workbook] for java version [com.aspose.cells.Workbook]

    */
    static function createWorkbook()
    {
        $workbook = new Java('com.aspose.cells.Workbook');
        return new Workbook($workbook);
    }
    
    /*
      create new wrapped class [Workbook] for java version [com.aspose.cells.Workbook]

      @param pInt0  int
    */
    static function create1Workbook($pInt0)
    {
        $workbook = new Java('com.aspose.cells.Workbook', $pInt0);
        return new Workbook($workbook);
    }
    
    /*
      create new wrapped class [Workbook] for java version [com.aspose.cells.Workbook]
      WARNNING
        the parameter[oInputStream0] maybe has no Php-wrapper.

      @param oInputStream0  corresponding java type is {java.io.InputStream}
    */
    static function create2Workbook($oInputStream0)
    {
        $workbook = new Java('com.aspose.cells.Workbook', ClassFactory::_t1($oInputStream0));
        return new Workbook($workbook);
    }
    
    /*
      create new wrapped class [Workbook] for java version [com.aspose.cells.Workbook]

      @param oString0  String
    */
    static function create3Workbook($oString0)
    {
        $workbook = new Java('com.aspose.cells.Workbook', $oString0);
        return new Workbook($workbook);
    }
    
    /*
      create new wrapped class [Workbook] for java version [com.aspose.cells.Workbook]
      WARNNING
        the parameter[oInputStream0] maybe has no Php-wrapper.

      @param oInputStream0  corresponding java type is {java.io.InputStream}
      @param oLoadOptions1  com.aspose.cells.LoadOptions
    */
    static function create4Workbook($oInputStream0, $oLoadOptions1)
    {
        $workbook = new Java('com.aspose.cells.Workbook', ClassFactory::_t1($oInputStream0), ClassFactory::_t1($oLoadOptions1));
        return new Workbook($workbook);
    }
    
    /*
      create new wrapped class [Workbook] for java version [com.aspose.cells.Workbook]

      @param oString0  String
      @param oLoadOptions1  com.aspose.cells.LoadOptions
    */
    static function create5Workbook($oString0, $oLoadOptions1)
    {
        $workbook = new Java('com.aspose.cells.Workbook', $oString0, ClassFactory::_t1($oLoadOptions1));
        return new Workbook($workbook);
    }
    
    /*
      create new wrapped class [WorkbookDesigner] for java version [com.aspose.cells.WorkbookDesigner]

    */
    static function createWorkbookDesigner()
    {
        $workbookDesigner = new Java('com.aspose.cells.WorkbookDesigner');
        return new WorkbookDesigner($workbookDesigner);
    }
    
    /*
      create new wrapped class [WorkbookDesigner] for java version [com.aspose.cells.WorkbookDesigner]

      @param oWorkbook0  com.aspose.cells.Workbook
    */
    static function create1WorkbookDesigner($oWorkbook0)
    {
        $workbookDesigner = new Java('com.aspose.cells.WorkbookDesigner', ClassFactory::_t1($oWorkbook0));
        return new WorkbookDesigner($workbookDesigner);
    }
    
    /*
      create new wrapped class [WorkbookRender] for java version [com.aspose.cells.WorkbookRender]

      @param oWorkbook0  com.aspose.cells.Workbook
      @param oImageOrPrintOptions1  com.aspose.cells.ImageOrPrintOptions
    */
    static function createWorkbookRender($oWorkbook0, $oImageOrPrintOptions1)
    {
        $workbookRender = new Java('com.aspose.cells.WorkbookRender', ClassFactory::_t1($oWorkbook0), ClassFactory::_t1($oImageOrPrintOptions1));
        return new WorkbookRender($workbookRender);
    }
    
    /*
      create new wrapped class [X509Certificate2] for java version [com.aspose.cells.X509Certificate2]

    */
    static function createX509Certificate2()
    {
        $x509Certificate2 = new Java('com.aspose.cells.X509Certificate2');
        return new X509Certificate2($x509Certificate2);
    }
    
    /*
      create new wrapped class [XlsbSaveOptions] for java version [com.aspose.cells.XlsbSaveOptions]

    */
    static function createXlsbSaveOptions()
    {
        $xlsbSaveOptions = new Java('com.aspose.cells.XlsbSaveOptions');
        return new XlsbSaveOptions($xlsbSaveOptions);
    }
    
    /*
      create new wrapped class [XlsbSaveOptions] for java version [com.aspose.cells.XlsbSaveOptions]

      @param pInt0  int
    */
    static function create1XlsbSaveOptions($pInt0)
    {
        $xlsbSaveOptions = new Java('com.aspose.cells.XlsbSaveOptions', $pInt0);
        return new XlsbSaveOptions($xlsbSaveOptions);
    }
    
    /*
      create new wrapped class [XlsSaveOptions] for java version [com.aspose.cells.XlsSaveOptions]

    */
    static function createXlsSaveOptions()
    {
        $xlsSaveOptions = new Java('com.aspose.cells.XlsSaveOptions');
        return new XlsSaveOptions($xlsSaveOptions);
    }
    
    /*
      create new wrapped class [XlsSaveOptions] for java version [com.aspose.cells.XlsSaveOptions]

      @param pInt0  int
    */
    static function create1XlsSaveOptions($pInt0)
    {
        $xlsSaveOptions = new Java('com.aspose.cells.XlsSaveOptions', $pInt0);
        return new XlsSaveOptions($xlsSaveOptions);
    }
    
    /*
      create new wrapped class [XmlColumnProperty] for java version [com.aspose.cells.XmlColumnProperty]

    */
    static function createXmlColumnProperty()
    {
        $xmlColumnProperty = new Java('com.aspose.cells.XmlColumnProperty');
        return new XmlColumnProperty($xmlColumnProperty);
    }
    
    /*
      create new wrapped class [XmlDataBinding] for java version [com.aspose.cells.XmlDataBinding]

    */
    static function createXmlDataBinding()
    {
        $xmlDataBinding = new Java('com.aspose.cells.XmlDataBinding');
        return new XmlDataBinding($xmlDataBinding);
    }
    
    /*
      create new wrapped class [XmlMap] for java version [com.aspose.cells.XmlMap]

    */
    static function createXmlMap()
    {
        $xmlMap = new Java('com.aspose.cells.XmlMap');
        return new XmlMap($xmlMap);
    }
    
    /*
      create new wrapped class [XpsSaveOptions] for java version [com.aspose.cells.XpsSaveOptions]

    */
    static function createXpsSaveOptions()
    {
        $xpsSaveOptions = new Java('com.aspose.cells.XpsSaveOptions');
        return new XpsSaveOptions($xpsSaveOptions);
    }
    
    /*
      create new wrapped class [XpsSaveOptions] for java version [com.aspose.cells.XpsSaveOptions]

      @param pInt0  int
    */
    static function create1XpsSaveOptions($pInt0)
    {
        $xpsSaveOptions = new Java('com.aspose.cells.XpsSaveOptions', $pInt0);
        return new XpsSaveOptions($xpsSaveOptions);
    }
    

    static function _t1($_v1)
    {
        if($_v1 instanceof Java)
        {
            return $_v1;
        }
        if(is_array($_v1))
        {
            foreach($_v1 as $_v2 => $_v3)
            {
                $_v4[$_v2] = ClassFactory::_t1($_v3);
            }
            return $_v4;
        }
        elseif (is_object($_v1))
        {
            $_v5 = get_class($_v1);
            if(!class_exists($_v5))
            {
                return $_v1;
            }
            $_v5 = "m_" . $_v5;
            if(array_key_exists($_v5, get_object_vars($_v1)))
            {
                return $_v1->$_v5;
            }
            else
            {
                return $_v1;
            }
        }
        else
        {
            return $_v1;
        }
    }
    
    static function _t2($_v1)
    {
        if($_v1 instanceof Java)
        {
            $_v1 = java_values($_v1);
        }
        if(is_array($_v1))
        {
            foreach($_v1 as $_v2 => $_v3)
            {
                $_v1[$_v2] = ClassFactory::_t2($_v3);
            }
            return $_v1;
        }
        else
        {
            return ClassFactory::_t3($_v1);
        }
    }
    
    static function _t3($_v1)
    {
        if($_v1 instanceof Java)
        {
            $_v2 = "" . $_v1->getClass();
            $_v3 = strpos($_v2, ":\"class ");
            if(!is_bool($_v3))
            {
                $_v2 = substr($_v2, $_v3+8, -2);
            }
            if(array_key_exists($_v2, ClassFactory::$_vv1))
            {
                return new ClassFactory::$_vv1[$_v2]($_v1);
            }
            else
            {
                $_v3 = strrpos($_v2, ".");
                if(!is_bool($_v3))
                {
                    $_v2 = substr($_v2, $_v3+1);
                }
                if(class_exists($_v2))
                {
                    return new $_v2($_v1);
                }
                else
                {
                    return $_v1;
                }
            }
        }
        else
        {
            return $_v1;
        }
    }
}

?>
